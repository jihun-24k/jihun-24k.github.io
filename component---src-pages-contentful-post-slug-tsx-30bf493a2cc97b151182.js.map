{"version":3,"file":"component---src-pages-contentful-post-slug-tsx-30bf493a2cc97b151182.js","mappings":"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","sources":["webpack://kjh-gatsby-blog/./src/hooks/node/Heading.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/OrderedList.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/UnorderedList.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/HorizontalRule.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Blockquote.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Image.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Link.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Code.tsx","webpack://kjh-gatsby-blog/./src/hooks/useRenderRichText.tsx","webpack://kjh-gatsby-blog/./src/components/post/PostHead.tsx","webpack://kjh-gatsby-blog/./src/components/post/Comment.tsx","webpack://kjh-gatsby-blog/./src/components/post/TableOfContents.tsx","webpack://kjh-gatsby-blog/./src/hooks/useTableOfContents.tsx","webpack://kjh-gatsby-blog/./src/components/post/PostBody.tsx","webpack://kjh-gatsby-blog/./src/pages/{contentfulPost.slug}.tsx","webpack://kjh-gatsby-blog/./node_modules/prismjs/components/prism-java.js","webpack://kjh-gatsby-blog/./node_modules/prismjs/components/prism-typescript.js","webpack://kjh-gatsby-blog/./node_modules/prismjs/prism.js"],"sourcesContent":["import { createElement, HTMLAttributes } from 'react'\nimport { BLOCKS } from '@contentful/rich-text-types'\nimport styled from 'styled-components'\n\ntype HeadingProps = {\n  type: BLOCKS.HEADING_1 | BLOCKS.HEADING_2 | BLOCKS.HEADING_3\n} & HTMLAttributes<HTMLHeadingElement>\n\nconst Components = {\n  [BLOCKS.HEADING_1]: styled.h1`\n    font-size: 30px;\n    font-weight: 700;\n\n    * + & {\n      margin-top: 80px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n  [BLOCKS.HEADING_2]: styled.h2`\n    font-size: 25px;\n    font-weight: 700;\n    padding-bottom: 0.2em;\n    border-bottom: 1px solid #CCEEFF;\n\n    * + & {\n      margin-top: 60px;\n      margin-bottom: 20px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n  [BLOCKS.HEADING_3]: styled.h3`\n    font-size: 20px;\n    font-weight: 700;\n\n    * + & {\n      margin-top: 40px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n}\n\nexport default function Heading({ type, children, ...props }: HeadingProps) {\n  return createElement(Components[type], props, children)\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype ListProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLOListElement>\n\nconst List = styled.ol`\n  margin: 4px 0px 8px 20px;\n\n  ul p,\n  ol p,\n  li p {\n    margin-bottom: 0;\n  }\n`\n\nexport default function OrderedList({ children, ...props }: ListProps) {\n  return <List {...props}>{children}</List>\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype ListProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLUListElement>\n\nconst List = styled.ul`\n  margin: 4px 0px 8px 20px;\n  \n  ul p,\n  ol p,\n  li p {\n    margin-bottom: 0;\n  }\n`\n\nexport default function UnorderedList({ children, ...props }: ListProps) {\n  return <List {...props}>{children}</List>\n}","import { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\n\nconst Component = styled.hr`\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  margin: 80px 0;\n`\n\nexport default function HorizontalRule(props: HTMLAttributes<HTMLHRElement>) {\n  return <Component {...props} />\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype BlockquoteProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLQuoteElement>\n\nconst Component = styled.blockquote`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  padding: 0 1em;\n  border-left: 0.25em solid #dfe2e5;\n  color: #6a737d;\n`\n\nexport default function Blockquote({ children, ...props }: BlockquoteProps) {\n  return <Component {...props}>{children}</Component>\n}","import styled from 'styled-components'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype ImageProps = {\n  image: IGatsbyImageData\n  alt: string\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 30px 0;\n  max-width: 774px;\n`\n\nconst Content = styled(GatsbyImage)`\n  margin-top: 30px;\n  margin-bottom: 10px;\n\n  & + & {\n    margin: -20px 0 30px 0;\n  }\n`\n\nconst Caption = styled.p`\n  font-size: 13px;\n  color: #313131;\n  text-align: center;\n\n  @media(max-width: 768px) {\n    font-size: 11px;\n  }\n`\n\nexport default function Image({ image, alt }: ImageProps) {\n  return <Wrapper>\n      <Content image={image} alt={alt} />\n      {alt && <Caption>{alt}</Caption>}\n    </Wrapper>\n}","import { AnchorHTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype LinkProps = {\n  children: ReactNode\n} & AnchorHTMLAttributes<HTMLAnchorElement>\n\nconst Component = styled.a`\n  color: #3399FF;\n  text-decoration: underline;\n`\n\nexport default function Link({ children, ...props }: LinkProps) {\n  return <Component {...props}>{children}</Component>\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype CodeProps = {\n  isBlock?: boolean\n  children: ReactNode\n} & HTMLAttributes<HTMLElement>\n\nconst InlineCode = styled.code`\n  padding: 2px 5px;\n  border-radius: 3px;\n  font-family: 'Nanum Gothic Coding', monospace;\n  color: #3399FF;\n  font-weight: 500;\n  background: #CCEEFF;\n`\n\nconst BlockCode = styled.pre`\n  margin: 30px 0 !important;\n  border-radius: 8px;\n\n  & * {\n    font-family: 'Nanum Gothic Coding', monospace !important;\n  }\n`\n\nexport default function Code({\n  isBlock = false,\n  children,\n  ...props\n}: CodeProps) {\n  if (!isBlock) return <InlineCode {...props}>{children}</InlineCode>\n  else\n    return (\n      <BlockCode>\n        <code {...props}>{children}</code>\n      </BlockCode>\n    )\n}","import {\n  ContentfulRichTextGatsbyReference,\n  renderRichText,\n} from 'gatsby-source-contentful/rich-text'\nimport { getImage } from 'gatsby-plugin-image'\nimport { NodeRenderer, Options } from '@contentful/rich-text-react-renderer'\nimport { BLOCKS, INLINES, MARKS, Text } from '@contentful/rich-text-types'\nimport {\n  Blockquote,\n  Heading,\n  Image,\n  HorizontalRule,\n  OrderedList,\n  UnorderedList,\n  Link,\n  Code,\n} from './node'\n\nexport const HEADERS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n] as const\nconst CODE_METADATA_REGEX = /^language::(\\w+)/\n\nconst options: Options = {\n  renderMark: {\n    [MARKS.CODE]: text => {\n      const isBlock = !!text && CODE_METADATA_REGEX.test(text.toString())\n\n      if (!isBlock) return <Code>{text}</Code>\n      else\n        return (\n          <Code\n            isBlock\n            className={`language-${CODE_METADATA_REGEX.exec(text.toString())?.[1]}`}\n          >\n            {text.toString().replace(CODE_METADATA_REGEX, '').trimStart()}\n          </Code>\n        )\n    },\n  },\n  renderNode: {\n    ...HEADERS.reduce<{ [block: string]: NodeRenderer }>((nodes, header) => {\n      nodes[header] = (node, children) => (\n        <Heading\n          type={header}\n          id={`${(node.content[0] as Text).value.replaceAll(' ', '-')}_`}\n        >\n          {children}\n        </Heading>\n      )\n\n      return nodes\n    }, {}),\n    [BLOCKS.OL_LIST]: (_node, children) => (\n      <OrderedList>{children}</OrderedList>\n    ),\n    [BLOCKS.UL_LIST]: (_node, children) => (\n      <UnorderedList>{children}</UnorderedList>\n    ),\n    [BLOCKS.HR]: () => <HorizontalRule />,\n    [BLOCKS.QUOTE]: (_node, children) => <Blockquote>{children}</Blockquote>,\n    [BLOCKS.EMBEDDED_ASSET]: node => {\n      const { gatsbyImageData, description } = node.data.target\n      const image = getImage(gatsbyImageData)\n\n      if (image) return <Image image={image} alt={description} />\n    },\n    [INLINES.HYPERLINK]: (node, children) => (\n      <Link\n        href={node.data.uri as string}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {children}\n      </Link>\n    ),\n  },\n}\n\nexport default function useRenderRichText({\n  raw,\n  references,\n}: Queries.ContentfulPostContent) {\n  if (!raw) return null\n\n  return renderRichText(\n    {\n      raw,\n      references: references as unknown as ContentfulRichTextGatsbyReference[],\n    },\n    options,\n  )\n}","import styled from 'styled-components'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype PostHeadProps = {\n  title: string\n  category: string[]\n  date: string\n  thumbnail: IGatsbyImageData\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 20px;\n  aspect-ratio: 16 / 9;\n  padding: 50px;\n  border-radius: 20px;\n\n  @media (max-width: 1024px) {\n    padding: 30px;\n    gap: 15px;\n  }\n\n  @media (max-width: 768px) {\n    padding: 20px;\n    gap: 10px;\n    border-radius: 10px;\n  }\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  max-height: 2.4em;\n  overflow: hidden;\n  font-size: 30px;\n  font-weight: 700;\n  color: #ffffff;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-height: 1.2em;\n\n  @media (max-width: 1024px) {\n    font-size: 24px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`\n\nconst Information = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ffffff;\n  font-size: 15px;\n  font-weight: 300;\n  color: #ffffff;\n`\n\nconst Category = styled.div`\n  display: flex;\n  gap: 7px;\n  color: #000000;\n  font-weight: 500;\n  background-color: #CCEEFF;\n  padding: 1px 5px;\n  border-radius: 5px;\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.05) 0%,\n      rgba(0, 0, 0, 0.9) 130%\n    );\n  }\n\n  @media (max-width: 1024px) {\n    padding-bottom: 10px;\n    font-size: 13px;\n  }\n\n  @media (max-width: 768px) {\n    padding-bottom: 8px;\n    font-size: 11px;\n  }\n`\n\nexport default function PostHead({\n  thumbnail,\n  title,\n  category,\n  date,\n}: PostHeadProps) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n\n      <Information>\n        <Category>\n          {category.map(item => (\n            <div key={item}>{item}</div>\n          ))}\n        </Category>\n        <div>{date}</div>\n      </Information>\n\n      <Thumbnail image={thumbnail} alt={title} />\n    </Wrapper>\n  )\n}","import { useEffect, useRef } from 'react'\n\nconst ATTRIBUTES = {\n  src: 'https://utteranc.es/client.js',\n  repo: 'jihun-24k/jihun-24k.github.io',\n  'issue-term': 'title',\n  label: 'Comment',\n  theme: `github-light`,\n  crossorigin: 'anonymous',\n  async: 'true',\n}\n\nexport default function Comment() {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (ref.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    Object.entries(ATTRIBUTES).forEach(([key, value]) =>\n      utterances.setAttribute(key, value),\n    )\n\n    ref.current?.appendChild(utterances)\n\n    return () => {\n      if (ref.current?.hasChildNodes())\n        ref.current.removeChild(ref.current.childNodes[0])\n    }\n  }, [])\n\n  return <div ref={ref} />\n}","import styled from 'styled-components'\nimport { GatsbyLinkProps, Link } from 'gatsby'\nimport useTableOfContents from '../../hooks/useTableOfContents'\n\ntype TableOfContentsProps = {\n  content: Queries.ContentfulPostContent\n}\n\nconst Wrapper = styled.div`\n  position: sticky;\n  top: 100px;\n  width: 220px;\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`\n\nconst Title = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid;\n  font-size: 15px;\n  font-weight: 600;\n`\n\nconst Items = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 20px;\n`\n\nconst Item = styled(({ className, children, to }: GatsbyLinkProps<unknown>) => (\n  <Link to={to} className={className}>\n    {children}\n  </Link>\n))<{ $depth: number; $focused: boolean }>`\n  padding-left: ${({ $depth }) => $depth * 10}px;\n  font-size: 13px;\n  font-weight: ${({ $focused }) => ($focused ? 700 : 300)};\n  color: ${({ $focused }) => ($focused ? 'rgba(135, 206, 235, 1)' : 'rgba(30, 31, 33, 0.5)')};\n  cursor: pointer;\n  text-decoration: none;\n  transition: 0.1s all;\n`\n\nexport default function TableOfContents({\n  content: { raw },\n}: TableOfContentsProps) {\n  const { toc, activeId } = useTableOfContents(raw as string)\n\n  return (\n    <Wrapper>\n      <Title>이 글의 목차</Title>\n      <Items>\n        {toc.map(({ id, title, depth }) => (\n          <Item\n            to={`#${id}`}\n            key={id}\n            $depth={depth}\n            $focused={id === activeId}\n          >\n            {title}\n          </Item>\n        ))}\n      </Items>\n    </Wrapper>\n  )\n}","import { useState, useMemo, useEffect } from 'react'\nimport { HEADERS } from './useRenderRichText'\n\ntype ContentType = {\n  content: {\n    content: {\n      data: unknown\n      marks: unknown\n      nodeType: string\n      value: string\n    }[]\n    nodeType: string\n  }[]\n  nodeType: string\n}\n\nexport default function useTableOfContents(rawContent: string) {\n  const [activeId, setActiveId] = useState<string | null>(null)\n\n  const toc = useMemo(() => {\n    const { content } = JSON.parse(rawContent) as ContentType\n    const headers = content.filter(item =>\n      HEADERS.find(header => header === item.nodeType),\n    )\n    const minDepth = Math.min(\n      ...headers.map(({ nodeType }) =>\n        parseInt(nodeType.charAt(nodeType.length - 1)),\n      ),\n    )\n\n    return headers.map(({ nodeType, content }) => {\n      const title = content[0].value\n      const id = `${title.replaceAll(' ', '-')}_`\n      const depth = parseInt(nodeType.charAt(nodeType.length - 1)) - minDepth\n\n      return { id, title, depth }\n    })\n  }, [rawContent])\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries =>\n        setActiveId(prevId => {\n          // 스크롤을 아래로 내리는 경우\n          if (entries[0].boundingClientRect.top < 0) return entries[0].target.id\n          // 스크롤을 위로 올리는 경우\n          else {\n            const index = toc.findIndex(({ id }) => id === prevId)\n            return index > 0 ? toc[index - 1].id : null\n          }\n        }),\n      { rootMargin: '0% 0px -100% 0px' },\n    )\n\n    document\n      .querySelectorAll('#content > h1, h2, h3')\n      .forEach(element => observer.observe(element))\n\n    return () => observer.disconnect()\n  }, [toc])\n\n  return { toc, activeId }\n}","import { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Prism from 'prismjs'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-java';\nimport Comment from './Comment'\nimport TableOfContents from './TableOfContents'\nimport useRenderRichText from '../../hooks/useRenderRichText'\n\ntype PostBodyProps = {\n  content: Queries.ContentfulPostContent\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 220px;\n  grid-gap: 30px;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding-top: 100px;\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    padding-top: 60px;\n  }\n`\n\nconst Content = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  gap: 100px;\n  font-size: 16px;\n  line-height: 2;\n  word-break: break-all;\n  color: #313131;\n\n  p {\n    margin-bottom: 1.5em;\n  }\n\n  @media (max-width: 1024px) {\n    width: 100%;\n  }\n\n  @media (max-width: 768px) {\n    gap: 50px;\n    font-size: 14px;\n    line-height: 1.8;\n  }\n`\n\nexport default function PostBody({ content }: PostBodyProps) {\n  const richText = useRenderRichText(content)\n\n  useEffect(Prism.highlightAll, [])\n\n  return (\n    <Wrapper>\n      <Content>\n        <div id=\"content\">{richText}</div>\n      </Content>\n      <TableOfContents content={content} />\n      <Comment></Comment>\n    </Wrapper>\n  )\n}","import { HeadFC, HeadProps, PageProps, graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostHead from '../components/post/PostHead'\nimport PostBody from '../components/post/PostBody'\nimport SEO from '../components/common/Seo'\n\nexport default function Post({\n  data: { contentfulPost },\n}: PageProps<Queries.PostPageQuery>) {\n  return (\n    <>\n      <PostHead\n        title={contentfulPost?.title as string}\n        category={contentfulPost?.category as string[]}\n        date={contentfulPost?.date as string}\n        thumbnail={\n          contentfulPost?.thumbnail?.gatsbyImageData as IGatsbyImageData\n        }\n      />\n      <PostBody\n        content={contentfulPost?.content as Queries.ContentfulPostContent}\n      />\n    </>\n  )\n}\n\nexport const Head: HeadFC<Queries.PostPageQuery> = ({\n  data: { contentfulPost },\n}: HeadProps<Queries.PostPageQuery>) => {\n  return (\n    <SEO\n      title={contentfulPost?.title as string}\n      description={contentfulPost?.description?.description as string}\n      pathname={`/${contentfulPost?.slug}`}\n      image={contentfulPost?.thumbnail?.url as string}\n    />\n  )\n}\nexport const query = graphql`\n  query PostPage($slug: String!) {\n    contentfulPost(slug: { eq: $slug }) {\n      title\n      category\n      date\n      slug\n      thumbnail {\n        url\n        gatsbyImageData(width: 1000)\n      }\n      description {\n        description\n      }\n      content {\n        raw\n        references {\n          ... on ContentfulAsset {\n            contentful_id\n            title\n            description\n            gatsbyImageData\n            __typename\n          }\n        }\n      }\n    }\n  }\n`","(function (Prism) {\n\n\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n\t// full package (optional) + parent classes (optional)\n\tvar classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t// based on the java naming conventions\n\tvar className = {\n\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\./\n\t\t}\n\t};\n\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\t// variables, parameters, and constructor references\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// class names based on keyword\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t'function': [\n\t\t\tPrism.languages.clike.function,\n\t\t\t{\n\t\t\t\tpattern: /(::\\s*)[a-z_]\\w*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n\t});\n\n\tPrism.languages.insertBefore('java', 'string', {\n\t\t'triple-quoted-string': {\n\t\t\t// http://openjdk.java.net/jeps/355#Description\n\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t'annotation': {\n\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t},\n\t\t'import': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'static',\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'static': /\\b\\w+$/,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'namespace': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\n\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n"],"names":["Components","BLOCKS","HEADING_1","styled","h1","withConfig","displayName","componentId","HEADING_2","h2","HEADING_3","h3","Heading","_ref","type","children","props","createElement","List","ol","OrderedList","_jsx","ul","UnorderedList","Component","hr","HorizontalRule","blockquote","Blockquote","Wrapper","div","Content","GatsbyImage","Caption","p","Image","image","alt","_jsxs","a","Link","InlineCode","code","BlockCode","pre","Code","isBlock","HEADERS","CODE_METADATA_REGEX","options","renderMark","MARKS","CODE","text","_CODE_METADATA_REGEX$","test","toString","className","exec","replace","trimStart","renderNode","reduce","nodes","header","node","id","content","value","replaceAll","OL_LIST","_node","UL_LIST","HR","QUOTE","EMBEDDED_ASSET","gatsbyImageData","description","data","target","getImage","INLINES","HYPERLINK","href","uri","rel","useRenderRichText","raw","references","renderRichText","Title","Information","Category","Thumbnail","PostHead","thumbnail","title","category","date","map","item","ATTRIBUTES","src","repo","label","theme","crossorigin","async","Comment","ref","useRef","useEffect","_ref$current","current","utterances","document","Object","entries","forEach","key","setAttribute","appendChild","_ref$current2","hasChildNodes","removeChild","childNodes","Items","Item","to","_ref2","$depth","_ref3","$focused","_ref4","TableOfContents","_ref5","toc","activeId","rawContent","setActiveId","useState","useMemo","JSON","parse","headers","filter","find","nodeType","minDepth","Math","min","apply","_toConsumableArray","parseInt","charAt","length","depth","observer","IntersectionObserver","prevId","boundingClientRect","top","index","findIndex","rootMargin","querySelectorAll","element","observe","disconnect","useTableOfContents","_ref6","PostBody","richText","Prism","Post","_contentfulPost$thumb","contentfulPost","_Fragment","Head","_contentfulPost$descr","_contentfulPost$thumb2","SEO","pathname","slug","url","keywords","classNamePrefix","source","pattern","RegExp","lookbehind","inside","languages","java","extend","greedy","clike","function","insertBefore","alias","namespace","typescript","keyword","push","typeInside","ts","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","Array","isArray","o","prototype","call","slice","objId","obj","defineProperty","clone","deepClone","visited","hasOwnProperty","v","i","getLanguage","m","toLowerCase","parentElement","setLanguage","language","classList","add","currentScript","Error","err","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","highlightAllUnder","container","env","selector","hooks","run","elements","highlightElement","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","Worker","worker","filename","onmessage","evt","postMessage","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","next","tail","toArray","all","name","callbacks","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","reach","str","removeCount","from","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","g","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","getAttribute","extension","autoloader","loadLanguages","success","error","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","loadFile","range","start","Number","comma","end","undefined","parseRange","lines","split","max","String","fileHighlight","logged","console","warn","arguments"],"sourceRoot":""}