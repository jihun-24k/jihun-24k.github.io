{"version":3,"file":"component---src-pages-about-tsx-e60c8c4a65dd386f8728.js","mappings":"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","sources":["webpack://kjh-gatsby-blog/./src/hooks/node/Heading.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/OrderedList.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/UnorderedList.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/HorizontalRule.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Blockquote.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Image.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Link.tsx","webpack://kjh-gatsby-blog/./src/hooks/node/Code.tsx","webpack://kjh-gatsby-blog/./src/hooks/useRenderRichText.tsx","webpack://kjh-gatsby-blog/./src/pages/about.tsx"],"sourcesContent":["import { createElement, HTMLAttributes } from 'react'\nimport { BLOCKS } from '@contentful/rich-text-types'\nimport styled from 'styled-components'\n\ntype HeadingProps = {\n  type: BLOCKS.HEADING_1 | BLOCKS.HEADING_2 | BLOCKS.HEADING_3\n} & HTMLAttributes<HTMLHeadingElement>\n\nconst Components = {\n  [BLOCKS.HEADING_1]: styled.h1`\n    font-size: 30px;\n    font-weight: 700;\n\n    * + & {\n      margin-top: 80px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n  [BLOCKS.HEADING_2]: styled.h2`\n    font-size: 25px;\n    font-weight: 700;\n    padding-bottom: 0.2em;\n    border-bottom: 1px solid #CCEEFF;\n\n    * + & {\n      margin-top: 60px;\n      margin-bottom: 20px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n  [BLOCKS.HEADING_3]: styled.h3`\n    font-size: 20px;\n    font-weight: 700;\n\n    * + & {\n      margin-top: 40px;\n    }\n\n    hr + & {\n      margin-top: 0;\n    }\n  `,\n}\n\nexport default function Heading({ type, children, ...props }: HeadingProps) {\n  return createElement(Components[type], props, children)\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype ListProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLOListElement>\n\nconst List = styled.ol`\n  margin: 4px 0px 8px 20px;\n\n  ul p,\n  ol p,\n  li p {\n    margin-bottom: 0;\n  }\n`\n\nexport default function OrderedList({ children, ...props }: ListProps) {\n  return <List {...props}>{children}</List>\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype ListProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLUListElement>\n\nconst List = styled.ul`\n  margin: 4px 0px 8px 20px;\n  \n  ul p,\n  ol p,\n  li p {\n    margin-bottom: 0;\n  }\n`\n\nexport default function UnorderedList({ children, ...props }: ListProps) {\n  return <List {...props}>{children}</List>\n}","import { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\n\nconst Component = styled.hr`\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  margin: 80px 0;\n`\n\nexport default function HorizontalRule(props: HTMLAttributes<HTMLHRElement>) {\n  return <Component {...props} />\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype BlockquoteProps = {\n  children: ReactNode\n} & HTMLAttributes<HTMLQuoteElement>\n\nconst Component = styled.blockquote`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  padding: 0 1em;\n  border-left: 0.25em solid #dfe2e5;\n  color: #6a737d;\n`\n\nexport default function Blockquote({ children, ...props }: BlockquoteProps) {\n  return <Component {...props}>{children}</Component>\n}","import styled from 'styled-components'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype ImageProps = {\n  image: IGatsbyImageData\n  alt: string\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 30px 0;\n  max-width: 774px;\n`\n\nconst Content = styled(GatsbyImage)`\n  margin-top: 30px;\n  margin-bottom: 10px;\n\n  & + & {\n    margin: -20px 0 30px 0;\n  }\n`\n\nconst Caption = styled.p`\n  font-size: 13px;\n  color: #313131;\n  text-align: center;\n\n  @media(max-width: 768px) {\n    font-size: 11px;\n  }\n`\n\nexport default function Image({ image, alt }: ImageProps) {\n  return <Wrapper>\n      <Content image={image} alt={alt} />\n      {alt && <Caption>{alt}</Caption>}\n    </Wrapper>\n}","import { AnchorHTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype LinkProps = {\n  children: ReactNode\n} & AnchorHTMLAttributes<HTMLAnchorElement>\n\nconst Component = styled.a`\n  color: #3399FF;\n  text-decoration: underline;\n`\n\nexport default function Link({ children, ...props }: LinkProps) {\n  return <Component {...props}>{children}</Component>\n}","import { HTMLAttributes, ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype CodeProps = {\n  isBlock?: boolean\n  children: ReactNode\n} & HTMLAttributes<HTMLElement>\n\nconst InlineCode = styled.code`\n  padding: 2px 5px;\n  border-radius: 3px;\n  font-family: 'Nanum Gothic Coding', monospace;\n  color: #3399FF;\n  font-weight: 500;\n  background: #CCEEFF;\n`\n\nconst BlockCode = styled.pre`\n  margin: 30px 0 !important;\n  border-radius: 8px;\n\n  & * {\n    font-family: 'Nanum Gothic Coding', monospace !important;\n  }\n`\n\nexport default function Code({\n  isBlock = false,\n  children,\n  ...props\n}: CodeProps) {\n  if (!isBlock) return <InlineCode {...props}>{children}</InlineCode>\n  else\n    return (\n      <BlockCode>\n        <code {...props}>{children}</code>\n      </BlockCode>\n    )\n}","import {\n  ContentfulRichTextGatsbyReference,\n  renderRichText,\n} from 'gatsby-source-contentful/rich-text'\nimport { getImage } from 'gatsby-plugin-image'\nimport { NodeRenderer, Options } from '@contentful/rich-text-react-renderer'\nimport { BLOCKS, INLINES, MARKS, Text } from '@contentful/rich-text-types'\nimport {\n  Blockquote,\n  Heading,\n  Image,\n  HorizontalRule,\n  OrderedList,\n  UnorderedList,\n  Link,\n  Code,\n} from './node'\n\nexport const HEADERS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n] as const\nconst CODE_METADATA_REGEX = /^language::(\\w+)/\n\nconst options: Options = {\n  renderMark: {\n    [MARKS.CODE]: text => {\n      const isBlock = !!text && CODE_METADATA_REGEX.test(text.toString())\n\n      if (!isBlock) return <Code>{text}</Code>\n      else\n        return (\n          <Code\n            isBlock\n            className={`language-${CODE_METADATA_REGEX.exec(text.toString())?.[1]}`}\n          >\n            {text.toString().replace(CODE_METADATA_REGEX, '').trimStart()}\n          </Code>\n        )\n    },\n  },\n  renderNode: {\n    ...HEADERS.reduce<{ [block: string]: NodeRenderer }>((nodes, header) => {\n      nodes[header] = (node, children) => (\n        <Heading\n          type={header}\n          id={`${(node.content[0] as Text).value.replaceAll(' ', '-')}_`}\n        >\n          {children}\n        </Heading>\n      )\n\n      return nodes\n    }, {}),\n    [BLOCKS.OL_LIST]: (_node, children) => (\n      <OrderedList>{children}</OrderedList>\n    ),\n    [BLOCKS.UL_LIST]: (_node, children) => (\n      <UnorderedList>{children}</UnorderedList>\n    ),\n    [BLOCKS.HR]: () => <HorizontalRule />,\n    [BLOCKS.QUOTE]: (_node, children) => <Blockquote>{children}</Blockquote>,\n    [BLOCKS.EMBEDDED_ASSET]: node => {\n      const { gatsbyImageData, description } = node.data.target\n      const image = getImage(gatsbyImageData)\n\n      if (image) return <Image image={image} alt={description} />\n    },\n    [INLINES.HYPERLINK]: (node, children) => (\n      <Link\n        href={node.data.uri as string}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {children}\n      </Link>\n    ),\n  },\n}\n\nexport default function useRenderRichText({\n  raw,\n  references,\n}: Queries.ContentfulPostContent) {\n  if (!raw) return null\n\n  return renderRichText(\n    {\n      raw,\n      references: references as unknown as ContentfulRichTextGatsbyReference[],\n    },\n    options,\n  )\n}","import React from 'react';\nimport { HeadFC, graphql, useStaticQuery } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image'\nimport useRenderRichText from '../hooks/useRenderRichText';\nimport styled from 'styled-components';\nimport SEO from '../components/common/Seo'\n\nconst Wrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    margin-bottom: 40px;\n`\n\nconst ProfileImage = styled.div`\n  overflow: hidden;\n  width: 140px;\n  height: 140px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  line-height: 2;\n\n  a {\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nconst Title = styled.div`\n    font-size: 30px;\n    font-weight: 700;\n\n    @media (max-width: 1024px) {\n        font-size: 25px;\n    }\n\n    @media (max-width: 768px) {\n        font-size: 20px;\n    }\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  font-size: 16px;\n  line-height: 2;\n  word-break: break-all;\n  color: #313131;\n\n  a {\n    text-decoration: none;\n  }\n\n  p {\n    margin-bottom: 1.5em;\n  }\n\n  h3 {\n    margin: 0;\n  }\n\n  @media (max-width: 1024px) {\n    width: 100%;\n  }\n\n  @media (max-width: 768px) {\n    gap: 50px;\n    font-size: 14px;\n    line-height: 1.8;\n  }\n`\n\nexport const Head: HeadFC = () => <SEO\n  title='김지훈 | 백엔드 개발자'\n  description='이력서 입니다.'\n/>\n\nconst AboutPage: React.FC = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      contentfulAbout {\n        title\n        info {\n          raw\n        }\n        content {\n          raw\n        }\n      }\n    }\n  `);\n    \n    const info = useRenderRichText(data.contentfulAbout.info);\n    const richTextContent = useRenderRichText(data.contentfulAbout.content);\n\n  return (\n      <>\n          <Wrapper>\n              <div>\n                <ProfileImage>\n                    <StaticImage src=\"../images/thumbnail.jpeg\" alt=\"Profile Image\" />\n                </ProfileImage>\n                <Title>진심이 담긴 개발자, 김지훈입니다</Title>\n              </div>\n              <Info>{info}</Info>\n        </Wrapper>\n        <Content>{richTextContent}</Content>\n    </>\n  );\n};\n\nexport default AboutPage;"],"names":["Components","BLOCKS","HEADING_1","styled","h1","withConfig","displayName","componentId","HEADING_2","h2","HEADING_3","h3","Heading","_ref","type","children","props","createElement","List","ol","OrderedList","_jsx","ul","UnorderedList","Component","hr","HorizontalRule","blockquote","Blockquote","Wrapper","div","Content","GatsbyImage","Caption","p","Image","image","alt","_jsxs","a","Link","InlineCode","code","BlockCode","pre","Code","isBlock","HEADERS","CODE_METADATA_REGEX","options","renderMark","MARKS","CODE","text","_CODE_METADATA_REGEX$","test","toString","className","exec","replace","trimStart","renderNode","reduce","nodes","header","node","id","content","value","replaceAll","OL_LIST","_node","UL_LIST","HR","QUOTE","EMBEDDED_ASSET","gatsbyImageData","description","data","target","getImage","INLINES","HYPERLINK","href","uri","rel","useRenderRichText","raw","references","renderRichText","ProfileImage","Info","Title","Head","SEO","title","AboutPage","useStaticQuery","info","contentfulAbout","richTextContent","_Fragment","StaticImage","src","__imageData","require"],"sourceRoot":""}