{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allContentfulPost":{"nodes":[{"title":"쉘 스크립트로 자동 배포","category":["LINUX"],"slug":"shell-script-deploy","date":"2024-09-17","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=125&h=119&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=250&h=237&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=500&h=474&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=500&h=474&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=125&h=119&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=250&h=237&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41n9NZb83uhFkWVTpj4I9B/ab7bb35bc5a99571e2825749e5c60c12/___________2024-09-16______5.13.51.png?w=500&h=474&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":474}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"원격 서버에 자바 웹 애플리케이션을 배포하고자 한다. war 파일을 만들어 배포하는 방법과 디렉토리 자체를 배포하는 두 가지 방법이 있다. 여기 실습에선 톰캣에 디렉토리 자체를 배포하는 방식을 사용했다. 직접 배포를 해보면서 불편함을 해결하는 과정을 정리했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"수동으로 배포\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"git clone으로 github 저장소를 clone한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"배포할 브랜치를 변경한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"배포할 디렉토리에서 mvn clean package로 프로젝트를 빌드한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 루트 디렉토리 ROOT를 삭제한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"배포할 프로젝트 내부의 target에서 빌드된 프로젝트명 파일을 ROOT로 이동한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"startup.sh을 실행시켜 서버를 시작한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"서버ip:8080을 브라우저로 접속해 확인한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"수동 배포의 불편함\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"일련의 배포 과정을 살펴보면 불편함을 볼 수 있다. 바로 배포 때마다 앞선 과정들을 반복 해야한다. 하나의 과정이라도 실수 하면 실수하는 대로 시간과 인적 자원이 낭비된다. 이런 반복되는 과정을 자동으로 처리해 줄 수 있는 쉘 스크립트로 해결해보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘 스크립트란?\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"유닉스 또는 리눅스 운영 체제에서 쉘(Shell)이라는 명령어 해석기를 사용하여 실행할 수 있는 일련의 명령어를 작성한 스크립트 파일이다. 쉘 스크립트는 시스템 관리, 프로세스 자동화, 애플리케이션 배포, 데이터 백업 등 다양한 작업을 자동화하는 데 사용된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘에서 실행할 수 있는 명령어들을 하나의 파일에 작성한 것이 쉘 스크립트다. 파일 확장자는 일반적으로 .sh를 사용한다. 예시로 앞서 톰캣을 실행할 때 사용된 startup.sh 도 톰캣의 실행에 필요한 명령어들을 한 파일에 작성한 것이다. 쉘 스크립트는 명령어의 조합, 변수 사용, 제어 흐름(조건문, 반복문 등) 등을 포함해 복잡한 작업을 자동화할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘 스크립트 기본 구조\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"해시뱅(Shebang) 선언\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"스크립트의 첫 번째 줄은 보통 #!로 시작하는 해시뱅(Shebang)으로, 스크립트를 실행할 셸의 경로를 지정한다. 아래의 예시는 Bash 쉘을 사용하여 스크립트를 실행하도록 지정한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\n#!/bin/bash\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"명령어 작성\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"셸 명령어를 순서대로 작성한다. 예시로 만든 쉘 스크립트를 실행하게 되면 Hello World가 출력된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\n#!/bin/bash\\necho \\\"Hello, World!\\\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"ordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘 스크립트로 자동 배포\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"수동으로 했던 배포과정을 쉘 스크립트로 작성해 자동으로 배포해보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"계정 Home 디렉토리 deploy.sh 파일을 만들어 쉘 스크립트를 작성한다.\\n\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"FSY7HWHHbr9Mo8RMHAfMV\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"배포할 프로젝트 경로를 변수로 설정\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"git pull을 활용해 배포할 프로젝트 가져오기\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"ROOT 디렉토리 삭제 및 대체\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 실행\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘 스크립트 파일에 실행 권한을 부여한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\nchmod 755 deploy.sh\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"쉘 스크립트 파일을 실행한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\n./deploy.sh\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"6Oze5EZE6T3xdj0tbOHAvf\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"자동으로 톰캣 재시동 및 프로젝트 빌드 해주는 것을 확인 할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"ordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"마무리\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CI/CD 과정의 기본이라고 할 수 있다. 결국 쉘 파일을 여러개 자동으로 처리하는 과정이기 때문이다. 직접 쉘 스크립트를 작성하고 이용하면서 깨달을 수 있었다. 반복되는 작업을 사람이 하다보면 실수, 즉 휴먼 에러가 발생하기 마련이다. 쉘 스크립트 작성을 틈틈이 하면서 반복작업을 줄여보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"참고 자료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"박재성, 자바 웹 프로그래밍 Next Step, 로드북, 2016\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[{"contentful_id":"FSY7HWHHbr9Mo8RMHAfMV","title":"deploy.sh 작성","description":"수동으로 배포할 때 작성한 명령어를 하나의 파일에 작성","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=192&h=76&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=384&h=151&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=768&h=303&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=768&h=303&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=192&h=76&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=384&h=151&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FSY7HWHHbr9Mo8RMHAfMV/22660ff0887095867c81f89d557c1834/___________2024-09-16______5.00.45.png?w=768&h=303&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":305},"__typename":"ContentfulAsset"},{"contentful_id":"6Oze5EZE6T3xdj0tbOHAvf","title":"쉘 스크립트 완료","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=192&h=66&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=384&h=132&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=768&h=264&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=768&h=264&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=192&h=66&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=384&h=132&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6Oze5EZE6T3xdj0tbOHAvf/22e0f6169e82aff48ad27c5204fc2d0a/___________2024-09-16______5.04.24.png?w=768&h=264&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":266},"__typename":"ContentfulAsset"}]}},{"title":"톰캣 설치 및 기본 디렉토리 구조","category":["WEB"],"slug":"how-to-install-tomcat-and-directory-structure","date":"2024-09-16","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=75&h=53&q=50&fm=webp 75w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=150&h=106&q=50&fm=webp 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=300&h=212&q=50&fm=webp 300w","sizes":"(min-width: 300px) 300px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=300&h=212&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=75&h=53&q=50&fm=png 75w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=150&h=106&q=50&fm=png 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2TkrpNyxATBcID9xbIW67A/8b351eff4d34e53affdc0e39e5d2945a/___________2024-09-16______3.15.50.png?w=300&h=212&q=50&fm=png 300w","sizes":"(min-width: 300px) 300px, 100vw"}},"layout":"constrained","backgroundColor":"#e8e8e8","width":500,"height":353}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"서버에 웹 애플리케이션을 톰캣을 이용해 배포하고자 한다. 톰캣의 기본 구조와 설치, 설치 후 설정에 대해 간략하게 정리했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 설치\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 설치 환경\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"윈도우는 zip, 리눅스는 tar 파일로 다운 받는다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣의 버전과 JDK의 버전이 호환되는지 확인한다. \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"예를 들어 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Tomcat 9.0.x, 10.0.x, 8.5.x\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\": JDK 11과 호환된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"하지만 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Tomcat 8.0.x 및 그 이전 버전\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\": JDK 11과 호환되지 않으며, JDK 8 이하에서만 사용 가능하다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 설치 과정\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"리눅스에서 설치 방법에는 두 가지 방법이 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"wget으로 압축된 파일(tar.gz)을 받아와 풀기\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"wget 명령어를 사용해서 톰캣을 다운 받는다. 예를 들어 Tomcat 9.0.70 버전을 다운로드하려면 다음과 같이 입력한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\nwget <https://downloads.apache.org/tomcat/tomcat-9/v9.0.70/bin/apache-tomcat-9.0.70.tar.gz>\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"tar 파일 압축을 풀면 톰캣 설치가 완료된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"language::shell\\ntar -xvzf apache-tomcat-9.0.70.tar.gz\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"리눅스가 인터넷 연결이 되어있지 않으면 ftp로 받아와야함\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"ordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 설치 후 작업\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"JAVA_HOME 설정\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"JAVA_HOME을 설정하는 방법은 두 가지가 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"환경 변수 PATH로 java home을 설정하는 방법\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"각 스크립트에 넣어서 설정하는 방법\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"PATH와 script의 차이점\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"4OkiQI5m4TDqp86MiRkM3N\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"환경변수 PATH는 모든 자바 리소스가 동일한 자바 버전으로 동작하게 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"script는 각 리소스당 자바 버전을 설정해서 동작하게 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톰캣 디렉토리 구조\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"68DHlbkGlkYxJw7lBq3i8h\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"참고 자료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://www.youtube.com/watch?v=P3H-7G_Y3rI&list=PLQUXE_kb6KOj0mvxoAGrz3FT9EDL3fa1z&index=2&ab_channel=Great-Stone\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"https://www.youtube.com/watch?v=P3H-7G_Y3rI&list=PLQUXE_kb6KOj0mvxoAGrz3FT9EDL3fa1z&index=2&ab_channel=Great-Stone\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://www.youtube.com/watch?v=XvinTBrQ0ig&t=201s&ab_channel=Great-Stone\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"https://www.youtube.com/watch?v=XvinTBrQ0ig&t=201s&ab_channel=Great-Stone\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[{"contentful_id":"4OkiQI5m4TDqp86MiRkM3N","title":"tomcat path와 script 차이","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=192&h=67&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=384&h=134&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=768&h=268&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=768&h=268&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=192&h=67&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=384&h=134&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4OkiQI5m4TDqp86MiRkM3N/5663aa3e6bf02030efd47771f518e840/___________2023-08-29______1.37.22.png?w=768&h=268&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":270},"__typename":"ContentfulAsset"},{"contentful_id":"68DHlbkGlkYxJw7lBq3i8h","title":"톰캣 디렉토리 구조","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=192&h=207&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=384&h=413&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=768&h=827&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=768&h=827&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=192&h=207&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=384&h=413&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/68DHlbkGlkYxJw7lBq3i8h/e7c67e8a6f79eb551403f0451be42425/___________2023-08-29______2.25.18.png?w=768&h=827&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":833},"__typename":"ContentfulAsset"}]}},{"title":"PATH 환경변수","category":["LINUX"],"slug":"path-env","date":"2024-09-15","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=125&h=125&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=250&h=250&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=500&h=500&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=500&h=500&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=125&h=125&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=250&h=250&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/NkMZ2Yo67kXzA6nDFlW9u/1fed0b9927c57022038c6175d470cb6f/linux.png?w=500&h=500&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#38c8f8","width":500,"height":500}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"톰캣 환경변수를 설정한 뒤 환경변수를 계속 입력하는 불편함을 겪었다. 어디서든 “알아서” 쉘이 명령어를 찾아주길 바랬고 해답은 PATH였다. 여태 아무 것도 모른채 사용하던 PATH 환경변수 사용법 정리했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PATH 환경변수란?\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기본 개념\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PATH는 운영 체제의 쉘(예: bash, zsh)이 실행 파일을 찾는 데 사용하는 디렉토리 경로의 목록이다. 사용자가 터미널에서 명령어를 입력할 때, 쉘은 PATH에 나열된 디렉토리를 차례로 검색하여 해당 명령어와 일치하는 실행 파일을 찾는다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"형식\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PATH는 콜론(:)으로 구분된 디렉토리 경로의 목록으로 아래와 같은 예시처럼 구성된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이러한 경로들은 사용자가 명령어를 입력할 때 쉘이 실행 파일을 찾기 위해 검색하는 디렉토리들이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PATH 환경변수 적용\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"1. 쉘 초기화 파일 수정\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"현재 세션이나 특정 사용자에 대해 PATH에 경로를 추가하려면 .bashrc, .bash_profile, .zshrc와 같은 쉘 초기화 파일을 수정한다. 적용 예시는 bash_profile을 사용한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"OKGliDEdnmQD0oImF7cAQ\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"2. PATH에 경로 추가\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"원래 있던 JAVA_HOME에 TOMCAT_HOME을 추가한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\nexport PATH=$PATH:$JAVA_HOME/bin:$TOMCAT_HOME/bin\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"3. PATH 환경변수 영구적으로 설정\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\nsource ~/.bash_profile\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"환경변수 적용 결과\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"톰캣 하위 bin 디렉토리 안의 파일이 잘 실행되는 것을 확인할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"4xciNaUtLSYzyPvwVPuEuX\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"OKGliDEdnmQD0oImF7cAQ","title":"bash_profile","description":"쉘 초기화 파일 .bash_profile","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=175&h=97&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=350&h=194&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=700&h=387&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=700&h=387&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=175&h=97&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=350&h=194&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/OKGliDEdnmQD0oImF7cAQ/ee1e42ef664996b5eb14b81991488e48/___________2024-09-15______9.14.20.png?w=700&h=387&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":428},"__typename":"ContentfulAsset"},{"contentful_id":"4xciNaUtLSYzyPvwVPuEuX","title":"환경변수 적용 완료","description":"잘 적용된 PATH 환경변수","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=175&h=38&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=350&h=76&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=700&h=151&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=700&h=151&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=175&h=38&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=350&h=76&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4xciNaUtLSYzyPvwVPuEuX/0aa82871c6fbc8f28d2bc89e06758419/___________2024-09-15______9.55.53.png?w=700&h=151&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":167},"__typename":"ContentfulAsset"}]}},{"title":"GCP 방화벽 규칙 생성","category":["Cloud"],"slug":"how-to-make-gcp-cloud-firewall","date":"2024-09-15","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=125&h=77&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=250&h=155&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=1000&h=618&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=125&h=77&fl=progressive&q=50&fm=jpg 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=250&h=155&fl=progressive&q=50&fm=jpg 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&fl=progressive&q=50&fm=jpg 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=1000&h=618&fl=progressive&q=50&fm=jpg 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":309}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"GCP 서버에서 톰캣을 설치해 배포하는 중 브라우저에서 접속이 되지 않았다. 이유는 이전에 기본적인 HTTP, HTTPS 방화벽만 설정해기 때문이다. 톰캣의 기본 포트인 8080 포트를 방화벽에 추가 해줌으로서 브라우저 접속을 가능하게 해주는 과정을 정리했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"012xrp5Kn1dsCxLOzxbC0p\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"방화벽 규칙 생성\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"GCP 인스턴스 대시보드에 접속 후 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"VM인스턴스 > 방화벽\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 규칙 설정으로 들어간다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"2Uumt1kWj8x4BOnjoodfha\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"상단의 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"방화벽 규칙 생성\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"으로 새 규칙을 생성한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"76beNvjhwJ0tXeltjxppwG\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다음과 같은 세부 정보를 입력한다. 아래 설명 이외의 설정은 기본 값으로 설정한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이름:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 방화벽 규칙의 이름을 지정한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"예: allow-tomcat\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"필터링 기준: \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"IP 범위로 설정하고 0.0.0.0/0을 입력하여 모든 IP 주소로부터의 접근을 허용한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로토콜 및 포트: \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"지정된 프로토콜 및 포트를 선택하고, tcp 체크박스를 선택한 후 8080을 입력한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"브라우저로 접속\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"hello world로 설정한 페이지가 나타난다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"pFEbF8g27o2pYiEwlpFK1\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"012xrp5Kn1dsCxLOzxbC0p","title":"접속안됨","description":"서버ip:8080으로 접속이 막혔다","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=150&h=74&q=50&fm=webp 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=300&h=149&q=50&fm=webp 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=600&h=298&q=50&fm=webp 600w","sizes":"(min-width: 600px) 600px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=600&h=298&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=150&h=74&q=50&fm=png 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=300&h=149&q=50&fm=png 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/012xrp5Kn1dsCxLOzxbC0p/1d3ee998221c669b75796c3174aaab18/___________2024-09-15______12.41.54.png?w=600&h=298&q=50&fm=png 600w","sizes":"(min-width: 600px) 600px, 100vw"}},"layout":"constrained","backgroundColor":"#182828","width":774,"height":384},"__typename":"ContentfulAsset"},{"contentful_id":"2Uumt1kWj8x4BOnjoodfha","title":"gcp 대시보드","description":"좌측 메뉴바에서 찾을 수 있다","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=194&h=78&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=387&h=156&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=774&h=312&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=1548&h=624&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=774&h=312&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=194&h=78&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=387&h=156&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=774&h=312&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2Uumt1kWj8x4BOnjoodfha/e2e9d5e5bf1e076f76f31e6af9f22e5f/___________2024-09-15______12.37.47.png?w=1548&h=624&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":312},"__typename":"ContentfulAsset"},{"contentful_id":"76beNvjhwJ0tXeltjxppwG","title":"gcp 방화벽 생성","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=194&h=72&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=387&h=144&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=774&h=287&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=1548&h=574&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=774&h=287&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=194&h=72&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=387&h=144&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=774&h=287&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/76beNvjhwJ0tXeltjxppwG/8a30e2e5d45bfc000f7fd7b4096eeae5/___________2024-09-15______1.43.15.png?w=1548&h=574&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":287},"__typename":"ContentfulAsset"},{"contentful_id":"pFEbF8g27o2pYiEwlpFK1","title":"톰캣 접속 성공","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=150&h=68&q=50&fm=webp 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=300&h=137&q=50&fm=webp 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=600&h=274&q=50&fm=webp 600w","sizes":"(min-width: 600px) 600px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=600&h=274&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=150&h=68&q=50&fm=png 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=300&h=137&q=50&fm=png 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/pFEbF8g27o2pYiEwlpFK1/6d1a7f8dba8bd6b6c43624b403c4a8dc/___________2024-09-15______2.15.04.png?w=600&h=274&q=50&fm=png 600w","sizes":"(min-width: 600px) 600px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":353},"__typename":"ContentfulAsset"}]}},{"title":"MySQL 사용자 권한","category":["DB"],"slug":"mysql-user-permissions","date":"2024-09-08","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=84&h=56&q=50&fm=webp 84w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=167&h=111&q=50&fm=webp 167w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=334&h=222&q=50&fm=webp 334w","sizes":"(min-width: 334px) 334px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=334&h=222&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=84&h=56&q=50&fm=png 84w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=167&h=111&q=50&fm=png 167w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3xg6SGOTqvdbaErkzQB5Pl/977cc20e5b3b16ebe2829de391a0d089/___________2024-09-08______5.22.12.png?w=334&h=222&q=50&fm=png 334w","sizes":"(min-width: 334px) 334px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":332}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"MySQL 유저 생성 및 삭제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Root 유저로 접속\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"mysql 실행 파일이 있는 곳으로 이동\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\ncd /usr/local/mysql/bin\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"mysql root 사용자로 접속\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\n./mysql -u root -p\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 생성\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 추가\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\ncreate user 사용자ID; // 사용자 추가\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 추가 및 비밀번호\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\ncreate user 사용자ID@localhost identified by '비밀번호'; // 사용자 추가\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"userid 뒤에 오는 localhost 또는 %는 사용자 접근 허용 범위를 의미한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"localhost는 내부 접근만을 허용\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"%는 외부에서의 접근도 허용\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 삭제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"바로 삭제\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\ndrop user '사용자 ID'@localhost;\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"조회 후 삭제\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nselect * from user; // 등록된 모든 사용자id 조회\\ndelete from user where user = '사용자id'; // 해당 사용자 삭제\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 권한 부여 가이드\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 권한 부여\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"명령어 뒤에 붙은 비밀번호는 변경하지 않으려면 생략해도 무관하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nGRANT ALL PRIVILEGES ON DB명.테이블 TO 계정아이디@host IDENTIFIED BY '비밀번호';// 계정이 이미 존재 하는데 'identified by '비밀번호' 부분을 추가하면 비밀번호가 변경된다\\nGRANT ALL privileges ON DB명.* TO 계정아이디@locahost IDENTIFIED BY '비밀번호';\\nGRANT ALL privileges ON DB명.* TO 계정아이디@'%' IDENTIFIED BY '비밀번호';\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 권한 확인\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nSHOW GRANTS FOR test@localhost;  -- userid 와 host명까지 붙여서 검색해야 함\\nSHOW GRANTS FOR test@'%';\\nSHOW GRANTS FOR test@'200.100.100.50';\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 권한 삭제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 권한만 삭제하고 사용자 정보는 유지\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nrevoke all on DB명.테이블명 from 사용자ID;\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 계정 자체를 삭제\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\ndrop user userid@'%';\\ndrop user userid@localhost;\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[]}},{"title":"세션 구현하기","category":["Web"],"slug":"session","date":"2024-09-08","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=125&h=64&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=250&h=128&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=500&h=256&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=1000&h=512&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=500&h=256&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=125&h=64&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=250&h=128&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=500&h=256&q=50&fm=png 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=1000&h=512&q=50&fm=png 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":256}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자바 웹 프로그래밍 Next Step을 실습하는 과정 중 작성한 글이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요구사항\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"서블릿에서 지원하는 HttpSession API의 일부를 지원해야 한다. 아래 핵심 메서드 5개를 구현해야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"String getId()\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"void setAttribute(String name, Object value)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Object getAttribute(String name)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"void removeAttribute(String name)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"void invalidate()\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션(Session)이란?\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 세션이 무엇인지 알아야 한다. 세션을 어학사전에 검색해보면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"“(특정 활동을 위한) 시간”\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 이라고 나온다. 활동을 관련성 있는 처리로, 시간을 흐름으로 바꾸면 웹에서 세션을 말한다. 즉, 세션은 “일련의 관련성 있는 처리의 흐름”이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP는 상태가 없는 프토토콜이다. 같은 관련성이 있는 처리를 구별해 낼 수 없다. 하지만 장바구니에 상품을 담거나 다음 페이지로 넘어갈 때 로그인이 유지되는 것과 같은 상태를 유지하고 싶은 상황이 있다. 상태가 유지될 수 있게 해주는 것이 세션이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 관리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1bLJ5d8d4eoZzkpDZNBv3o\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"웹서버는 하나의 웹브라우저랑 통신하지 않는다. 여러 웹브라우저와 통신한다. 그래서 요청을 보내오는 여러 웹브라우저를 구별하기 위해 각 웹브라우저에 고유한 ID를 발급해준다. 이를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"세션 ID\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라 한다. 웹서버는 웹브라우저 별로 세션을 저장하고 세션 ID로 관리한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그림과 같이 장바구니에 어떤 물품을 넣었는가 같은 일련의 처리는 세션 데이터로 웹서버에 저장된다. 웹브라우저는 자신의 세션 ID를 통해 세션 데이터를 참조 할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 전달\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그렇다면 웹서버에서 생성된 세션 ID는 웹브라우저에 어떻게 전달할까? URL이나 폼(form) 형식으로 데이터를 주고 받을 수 도 있다. 하지만 보안상으로 더 안전한 쿠키로 전달한다. 여기서 엿볼 수 있는 것은 세션도 결국 쿠키를 이용한다는 것이다. 세션과 쿠키를 별개의 개념으로 오해하는 경우도 종종 있다. 하지만 세션도 쿠키를 이용한다. HTTP 통신에서 상태를 유지하기 위해선 쿠키가 필수라고 할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"쿠키로 전달하는 과정은 여느 쿠키 활용방식과 같다. 웹서버는 생성한 세션ID를 HTTP 응답 헤더에 “Set-Cookie” 속성을 이용해 넘겨준다. 세션 ID를 받은 웹브라우저는 다음 요청땐 HTTP 요청 헤더에 “Cookie” 의 값으로 세션 ID를 보내면서 세션 데이터를 참조한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요구사항 분석\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클라이언트와 서버 간에 주고 받을 고유한 아이디를 생성해야한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"JDK에서 제공하는 UUID를 활용한다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"UUID를 쿠키를 통해 전달해야한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답할 때 Set-Cookie 속성에 세션 ID 전달\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Java에서 세션 ID 쿠키 이름은 JSESSION\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"서버 측에서 모든 클라이언트의 세션 값을 관리하는 저장소 클래스를 추가한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HttpSession을 관리하는 클래스를 만들기 (HttpSessions)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Map<String, Session> 형태의 자료 구조 생성\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클라이언트별 세션 데이터를 관리할 수 있는 클래스를 추가한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Session 클래스 생성\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Map<String, Object> 형태의 자료 구조 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"여러 세션 데이터를 담아야 하기 때문이다.\",\"marks\":[],\"data\":{}}]}]}]}]}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 구현\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"고민 1. 세션 ID를 생성하고 전달하는 시기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"처음부터 고민이 생겼다. 세션 ID 생성하고 전달하는 시기를 언제로 해야 할지 말이다. 생각해낸 방법은 두 가지다. 첫 번째 방법은 클라이언트가 요청을 보내자 마자 세션 ID를 생성해 전달하는 것이다. 두 번째 방법은 로그인과 같은 상태 유지가 필요한 요청이 오면 그때 세션 ID를 생성해 전달하는 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"두 방법 중 고민하다 전자를 선택했다. 후자는 여러 상황마다 세션이 필요할 때 ID를 생성하게 하면 코드의 중복이 많이 일어나기 때문이다. 들어오는 요청에서 세션 ID를 확인해 다시 쿠키로 전달해주는 코드는 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 ID 생성 및 전달\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\n// RequestHandler.class\\n\\nif (getJSessionId(request.getHeader(\\\"Cookie\\\")) == null) {\\n\\t\\tUUID uuid = UUID.randomUUID();\\n\\t\\tresponse.addHeader(\\\"Set-Cookie\\\", \\\"JSESSIONID=\\\"+ uuid);\\n}\\n\\n...\\n\\nprivate String getJSessionId (String cookies) {\\n\\t\\treturn HttpRequestUtils.parseCookies(cookies).get(\\\"JSESSIONID\\\");\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"고민 2. UUID(세션 ID)를 생성하는 곳\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"외부에서 UUID를 생성해서 세션에 주입할지 아니면 세션이 생성될 때 세션 클래스 내부에서 UUID를 생성 할지 고민했다. 세션 저장소에서 세션을 생성해서 저장하기로 해서 UUID는 외부에서 주입 받기로 했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 저장소 클래스\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class HttpSessions {\\n    private static Map<String, HttpSession> sessions = new HashMap<>();\\n\\n    public static HttpSession getSession(String uuid) {\\n        if (sessions.get(uuid) == null) {\\n            addSession(uuid);\\n        }\\n        return sessions.get(uuid);\\n    }\\n\\n    private static void addSession(String uuid) {\\n        sessions.put(uuid, new HttpSession(uuid));\\n    }\\n    \\n    public static void remove(String uuid) {\\n        sessions.remove(uuid);\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어디에서든 세션 저장소에 접근할 수 있도록 static으로 생성\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"찾는 세션이 없다면 세션 ID로 새로운 세션을 생성해 저장하고 반환\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 클래스\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class HttpSession {\\n\\n    private final String uuid;\\n    private final Map<String, Object> attribute = new HashMap<>();\\n\\n    public HttpSession(String uuid) {\\n        this.uuid = uuid;\\n    }\\n\\n    public String getId() {\\n        return uuid;\\n    }\\n\\n    public void setAttribute(String name, Object value) {\\n        attribute.put(name, value);\\n    }\\n\\n    public Object getAttribute(String name) {\\n        return attribute.get(name);\\n    }\\n\\n    public void removeAttribute(String name) {\\n        attribute.remove(name);\\n    }\\n\\n    public void invalidate() {\\n        HttpSessions.remove(uuid);\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세션 적용 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이전에 로그인 된 사용자만이 사용자 리스트를 조회할 수 있게 작성했다. 이때 로그인을 쿠키 통해 확인하는 부분에 세션으로 바꿔 적용 시키자 한다. 쿠키에서 세션 ID를 조회하는 등 쿠키의 코드가 많아짐에 따라 따로 쿠키 클래스로 분리하는 리팩토링 작업 한다. 그 다음 쿠키와 세션을 요청 클래스에서 가져올 수 있도록 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 로그인 시 세션에 사용자 정보를 저장한다. 로그인 확인이 필요할 때 세션에서 사용자 정보가 있는지에 따라 로그인을 확인한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\n// LoginController.class\\n...\\nif (user != null && user.getPassword().equals(request.getParameter(\\\"password\\\"))) {\\n\\t\\tHttpSession session = request.getSession();\\n\\t\\tsession.setAttribute(\\\"user\\\", user);\\n\\t\\tresponse.sendRedirect(\\\"/index.html\\\");\\n} else {\\n\\t\\tresponse.sendRedirect(\\\"/user/login_failed.html\\\");\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\n// ListUserController.class\\n\\nHttpSession session = request.getSession();\\n\\nif (isLogin(session))) {\\n\\t...\\n}\\n\\n...\\n\\nprivate boolean isLogin(HttpSession session) {\\n\\t\\treturn session.getAttribute(\\\"user\\\") != null;\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마무리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"서버에서 사용자 데이터를 저장, 관리한다는 측면에서 세션은 쿠키보다 더 보안적으로 낫다고 할 수 있다. 주고 받는 정보는 세션 ID 뿐이기 때문이다. 하지만 보안적으로 완벽한 것은 아니다. 누군가 중간에서 세션 ID 자체를 가로채거나 하면 보안이 취약 해진다. 세션의 보안을 더 강화하고자 하면 domian, path, max-age, expires, secure 속성들도 알아보자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"박재성, 자바 웹 프로그래밍 Next Step, 로드북, 2016\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"코바야시 쿄헤이, 그림과 작동 원리로 쉽게 이해하는 웹의 기초, 교보문고, 2024\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1bLJ5d8d4eoZzkpDZNBv3o","title":"세션 동작과정","description":"전체적인 세션을 관리하는 과정을 나타낸 그림","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=194&h=99&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=387&h=198&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=774&h=396&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=774&h=396&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=194&h=99&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=387&h=198&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1bLJ5d8d4eoZzkpDZNBv3o/d2aa73a9b279cf45e8af35bf4567b4ce/___________2024-08-23______5.03.36.png?w=774&h=396&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":396},"__typename":"ContentfulAsset"}]}},{"title":"기수 정렬(radix-sort, bucket-sort)","category":["CS"],"slug":"radix-sort-bucket-sort","date":"2024-09-06","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=125&h=53&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=250&h=105&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=500&h=210&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=1000&h=420&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=500&h=210&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=125&h=53&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=250&h=105&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=500&h=210&q=50&fm=png 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=1000&h=420&q=50&fm=png 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":210}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"알고리즘에서 정렬을 공부하다 기수 정렬을 접하게 됐다. 다른 비교 정렬 알고리즘을 사용했는데 시간복잡도가 안됐다. 이론을 공부하는데 그냥 봐서는 이해가 잘 안돼 따로 글을 정리하며 이해하고자 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수 정렬이란?\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5ZunZMFT5wQcjWFBuFLyQr\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수 정렬은 숫자를 정렬하는 알고리즘으로, 정렬되지 않은 각 숫자를 정렬하기 위해 사용된다. 이는 각 숫자의 자릿수별로 정렬하기 때문에 기수 정렬(radix-sort)이라고 불린다. 또한 버킷 정렬(bucket-sort)이라고 불리는 다른 기수 정렬 방법도 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수 정렬은 각 숫자의 자릿수 별로 정렬하는 방식이며 배열 안의 숫자를 배열의 최하위 자릿수부터 정렬하는 과정을 반복하는 것이다. 자릿수가 높은 숫자부터 낮은 숫자로 정렬하는 과정은 이 정렬 알고리즘이 작동하는 방식이며, 이는 각 자릿수 별로 배열을 분류하는 버킷 정렬과 비슷하다. 버킷 정렬은 각 자릿수 별로 배열을 분류하여 각 버킷에 속하는 숫자를 정렬하는 방식으로 구현한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"0-9까지 자릿수를 담을 큐 10개 생성한 다음 1의 자릿수부터 정렬을 시작한다. 큐는 FIFO의 성질을 가지기 때문에 80, 71, 3, 23, 34, 16, 56, 77, 18 순서로 pop이 된다. 이어서 10의 자릿수를 기준으로 정렬하게 되면 정렬이 완료됨을 확인할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수 정렬의 특징과 사용하는 이유\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"값을 비교하지 않아 비교 정렬보다 빠르다. 선택 정렬, 합병 정렬 등은 두 개의 값을 비교해 정렬하는 방식을 택하고 있다. 하지만 기수 정렬은 매번 각 자릿수(십진수는 10개)로 정렬하기 때문에 입력값의 크기에 영향을 받지 않는다. 시간 복잡도를 계산한다면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"O(kn)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시간 복잡도 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"O(kn)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"장점 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"문자열, 정수 정렬에 용이\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"단점 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자릿수가 없는 것은 활용할 수 없다. (예시: 부동 소숫점)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"bucket이라는 배열을 사용해 메모리가 더 소모됨\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수 정렬 코드\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic static void radixSort(int[] arr) {\\n    int maxDigit = getMaxDigit(arr);\\n\\n    for(int k = 0; k < maxDigit; k++) {\\n        List<List<Integer>> buckets = new ArrayList<>();\\n        for(int i = 0; i < 10; i++) {\\n            buckets.add(new ArrayList<>());\\n        }\\n\\n        for(int i = 0; i < arr.length; i++) {\\n            int digit = getDigit(arr[i], k);\\n            buckets.get(digit).add(arr[i]);\\n        }\\n\\n        int j = 0;\\n        for(int i = 0; i < 10; i++) {\\n            for(int value : buckets.get(i)) {\\n                arr[j++] = value;\\n            }\\n        }\\n    }\\n}\\n\\npublic static int getMaxDigit(int[] arr) {\\n    int max = Integer.MIN_VALUE;\\n    for(int i = 0; i < arr.length; i++) {\\n        max = Math.max(max, arr[i]);\\n    }\\n\\n    int digit = 0;\\n    while(max != 0) {\\n        max /= 10;\\n        digit++;\\n    }\\n\\n    return digit;\\n}\\n\\npublic static int getDigit(int n, int k) {\\n    for(int i = 0; i < k; i++) {\\n        n /= 10;\\n    }\\n    return n % 10;\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"정리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기수정렬의 내부 코드를 공부해도 잘 이해가 안되었는데 알고보니 계수정렬을 바탕으로 더 확장된 알고리즘이다. 항상 정렬에서 O(nlogn)만이 최선일 것이라 생각했는데 다른 정렬도 많았는걸 알 수 있었다. 비록 범위가 한정적이긴 하지만 입력값이 많다면 기수정렬을 떠올려야겠다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://gyoogle.dev/blog/algorithm/Radix%20Sort.html\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"gyoogole님의 테크인터뷰 - 기수 정렬\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위키 백과 - 기수 정렬\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"김종관, Do it 알고리즘 코딩테스트 자바편(이지스 퍼블리싱, 2022)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"5ZunZMFT5wQcjWFBuFLyQr","title":"기수정렬","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=194&h=81&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=387&h=163&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=774&h=325&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=1548&h=650&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=774&h=325&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=194&h=81&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=387&h=163&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=774&h=325&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ZunZMFT5wQcjWFBuFLyQr/f331e2a5396fd1a7547e8b5513b7c8f5/__________.png?w=1548&h=650&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":325},"__typename":"ContentfulAsset"}]}},{"title":"가비지 컬렉션(Garbage Collection)","category":["CS"],"slug":"garbage-collection","date":"2024-09-02","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/K21ztbY0kywijJ7JfsL71/82f78979fa8fe9516cbf985a93b8926c/garbagecollecion.webp?w=125&h=57&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/K21ztbY0kywijJ7JfsL71/82f78979fa8fe9516cbf985a93b8926c/garbagecollecion.webp?w=250&h=114&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/K21ztbY0kywijJ7JfsL71/82f78979fa8fe9516cbf985a93b8926c/garbagecollecion.webp?w=500&h=229&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}]},"layout":"constrained","backgroundColor":"#d8e8f8","width":500,"height":228.99999999999997}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"메모리 주소 접근이 가능한 C언어는 Heap에서 불필요한 메모리를 차지하는 녀석들을 직접 free()란 명령어로 메모리 할당을 해제해줄 수 있다. 하지만 자바에선 개발자가 직접 메모리 할당을 해제해주는 명령어를 찾아볼 수 없다. 그 이유는 JVM은 가비지 콜렉터가 불필요한 메모리들을 해제시켜주기 때문이다. 이번 글에선 가비지 콜렉터가 수행하는 가비지 컬렉션을 다뤄볼까 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가비지(Garbage)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"말 그대로 쓰레기다! 프로그램에서 변수들은 각각의 정보를 저장할 주소를 할당받는다. 이때 지역변수처럼 Stack 지역 안에 있는 변수는 함수가 실행이 완료되면 그와 같이 변수들이 할당받은 메모리 공간을 해제 되는데 Heap 영역안에서 동적으로 메모리 공간을 할당받은 변수들은 그렇지 않는다. 이때 그 가비지, 즉 사용하지 않는 변수들을 가비지라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"7gX0CylzJFLZlT5DQcjZKd\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Stack 메모리 영역에서 Person 클래스로 person이란 참조 변수를 생성하면서 이름이 “John”인 객체를 힙에 만든다. 이때까지는 John 이름을 가진 객체는 누구에게 참조되어지고(가르켜지고) 있기 때문에 가비지가 없다. 하지만 후자처럼 “John”을 가르키고 있던 변수가 다른 객체를 가르키게되면 더이상 “John” 이름을 가진 객체는 사용되지 않는다. 이를 어떤 경로로도 닿지 않는 상태라고 하며 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Unreachable 상태\",\"marks\":[{\"type\":\"code\"},{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 라고 한다. 이런 객체들은 사용되지 않으며 메모리를 차지하고 있다고 판단돼 GC가 메모리 공간을 회수 한다. 아래는 GC 대상이 되는 오브젝트들이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"모든 객체 참조가 null인 경우\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체가 블럭 안에서 생성되고 블럭이 종료된 경우\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"부모 객체가 null이 된 경우, 자식 객체는 자동적으로 GC 대상\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체가 Weak 참조만 가지고 있을 경우\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체가 Soft 참조이지만 메모리 부족이 발생한 경우\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기본 GC 동작 과정\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Stop the world\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"GC(가비지 컬렉션) 실행을 하기 위해 JVM이 잠시 애플리케이션 샐행을 멈추는 동작을 말한다. 모든 GC가 하는 동작으로 GC를 실행하는 쓰레드를 제외한 모든 쓰레드의 작업을 멈춘다. 예를들어 카페에서 화장실 청소를 할 때, 입구 앞에 “청소 중\\\" 이란 팻말을 세워놓고 화장실 출입을 통제하고 청소를 진행하는 것과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"추후에 GC를 하는 방법은 여러 알고리즘이 있지만 stop the world 를 한 다음 여러 방법(알고리즘)을 진행한다. 대부분 JVM에서 GC 튜닝이라 함은 이 stop the world 시간을 줄이는 것을 뜻한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Marking\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"QHFZBXUcW37lipE6kkxhP\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마킹(Marking)이란 쉽게 말해 GC에 의해 삭제되지 않을 오브젝트들을 선택하는 것이다. GC에는 GC Root라는 것이 있는데 힙 외부에서 접근할 수 있는 변수나 오브젝트를 뜻한다. 프로세스는 GC Root가 참조하는 이 Root가 참조하는 모든 객체들을 탐색해 내려가면서 마킹을 하고 마킹된 객체들을 호출한다. 모든 오브젝트는 마킹 단계에서 결정을 위해 스캔되어지는데 이때 매우 많은 시간이 소모된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Normal Deletion\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"ktCWHuoxIMA6bEIH99SLS\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참조되지 않는 오브젝트를 제거하고, 메모리를 반환하는 과정이다. 메모리 Allocator는 반환되어 빈 블럭들의 참조 위치를 저장해 두었다가 새로운 오브젝트가 선언되면 할당되도록 해준다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Compacting\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6l6zRFxBadTRDH4aDix8IX\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"퍼포먼스를 향상시키기 위해, 남은 참조되어지는 오브젝트들을 묶는 과정이다. 이들을 묶음으로서 공간이 생기므로 새로운 메모리 할당 시에 더 쉽고 빠르게 진행 할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Generational Garbage Collection 배경\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위와 같은 과정을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Mark & Compact\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 칭하는데 이런 JVM은 비효율적이다. 다음과 같은 그래프를 보면 더 이해가 잘될 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"ULePy1JeRbkFHMZINS4D9\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Y축은 할당된 바이트의 수이고 X축은 바이트가 할당될 때의 시간이다. 보다시피 시간이 갈수록 적은 객체만이 남는 것을 알 수 있는데 이런 그래프에 기반한 것이 Week Generation Hypothesis이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Week Generation Hypothesis\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자바에서 GC는 두 가지 가설(전제 조건) 하에 만들어졌다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"대부분의 객체는 금방 접근 불가능 상태(unreachable)가 된다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"오래된 객체에서 젊은 객체로의 참조는 아주 적게 존재한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이러한 가설에 기반하여 자바는 Young 영역과 Old 영역으로 메모리를 분할하고, 신규로 생성되는 객체는 Young 영역에 보관하고, 오랫동안 살아남은 객체는 Old 영역에 보관한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Generational Garbage Collection\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3rIKnbXtGd4hWRnkRE955m\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Young 영역(Young Generation 영역)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"새롭게 생성한 객체의 대부분이 이 영역에 위치한다. 대부분의 객체가 금방 접근 불가능 상태가 되기 때문에 매우 많은 객체가 Young 영역에 생성되었다가 사라진다. 이 영역에서 객체가 사라질때 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Minor GC\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 가 발생한다고 말한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Old 영역(Old Generation 영역)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"접근 불가능 상태로 되지 않아 Young 영역에서 살아남은 객체가 여기로 복사된다. 대부분 Young 영역보다 크게 할당하며, 크기가 큰 만큼 Young 영역보다 GC는 적게 발생한다. 이 영역에서 객체가 사라질 때 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Major GC(혹은 Full GC)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 가 발생한다고 말한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Permanet 영역\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Method Area라고도 한다. JVM이 클래스들과 메소드들을 설명하기 위해 필요한 메타데이터들을 포함하고 있다. JDK8부터는 PermGen은 Metaspace로 교체된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Generational GC 동작 과정\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Generational Garbage Collection를 이해하기 위해서는 좀 더 Young 영역을 더 자세히 알아볼 필요가 있다. Young 영역은 3개의 영역으로 나뉜다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Eden 영역\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Survivor 영역(2개)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Survivor 영역이 2개이기 때문에 총 3개의 영역으로 나뉘는 것이다. 각 영역의 처리 절차를 순서에 따라서 기술하면 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어떠한 새로운 객체가 들어오면 Eden Space에 할당한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"46KwBREiW3M7VUmSHUA6Xc\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Eden Space가 가득차게 되면, Minor GC가 시작된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6pQ8of1by9yPOuEHcG91C0\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참조되는 객체들은 첫번째 Survivor(S0)로 이동되어지고, 비 참조 객체는 Eden 공간이 clear 될 때 반환된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"7gjFT0CLg3fJa1o7HeWaYl\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Minor GC 때, Eden Space에서는 다음과 같은 일이 일어난다. 비 참조 객체는 삭제되고 참조 객체는 survivor space로 이동한다. 그러나 이 케이스에서는 참조 객체는 두 번째 survivor space로 이동하게 된다. 게다가 최근 Minor GC에서 첫 번째 survivor space로 이동된 객체들도 age가 증가하고 S1 공간으로 이동하게 된다. 한번 모든 surviving 객체들이 S1으로 이동하게 되면 S0와 Eden 공간은 clear 된다. 주의해야할 점은 이제 우리는 다른 age를 가진 객체들을 survivor 공간에 가지게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"4p7zvSruSlr8Kn49B7uRBY\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다음 minor GC 때, 같은 과정이 반복 된다. 그러나 이 번엔 survivor space들은 switch 된다. 참조되는 객체들은 S0로 이동한다. 살아남은 객체들은 aged 되게 된다. 그리고 Eden과 S1 공간은 clear 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6bKHaBcMni5QoC0rIBJJku\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"아래 그림은 promotion을 보여준다. Minor GC 후 aged 오브젝트들이 일정한 age threshold(문지방)을 넘게 되면 그들은 young generation에서 old로 promotion 되어진다. 여기서는 8을 예로 들었다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5elaK9kPpXgq0S8AbwCs8E\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Minor GC가 계속되고 계속해서 객체들이 Old Generation으로 이동된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"exhdzcNYsuXVzMJDvRB5O\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"아래 그림은 전 과정을 보여주고 있다. 결국 Major GC가 Old Generation에 시행되고, Old Generation은 clear 되고, 공간이 compact 되어진다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6VA6DPMlVaD7MNCq2L48Am\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://imasoftwareengineer.tistory.com/103\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"가비지 컬렉터(Garbage Collector)와 Mark & Sweep\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://d2.naver.com/helloworld/1329\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"NAVER D2\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"http://oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Java Garbage Collection Basics\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"7gX0CylzJFLZlT5DQcjZKd","title":"가비지 컬렉션","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=194&h=61&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=387&h=122&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=774&h=244&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=774&h=244&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=194&h=61&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=387&h=122&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gX0CylzJFLZlT5DQcjZKd/34fa8bc3b15b64254a8a1166e6a4be66/garbage1.png?w=774&h=244&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":244},"__typename":"ContentfulAsset"},{"contentful_id":"QHFZBXUcW37lipE6kkxhP","title":"gc1","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=187&h=128&q=50&fm=webp 187w,\nhttps://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=374&h=256&q=50&fm=webp 374w,\nhttps://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=748&h=512&q=50&fm=webp 748w","sizes":"(min-width: 748px) 748px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=748&h=512&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=187&h=128&q=50&fm=png 187w,\nhttps://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=374&h=256&q=50&fm=png 374w,\nhttps://images.ctfassets.net/w6wmczdusxy8/QHFZBXUcW37lipE6kkxhP/c072b1ca3dd644626c910892963085a0/gc1.png?w=748&h=512&q=50&fm=png 748w","sizes":"(min-width: 748px) 748px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":530},"__typename":"ContentfulAsset"},{"contentful_id":"ktCWHuoxIMA6bEIH99SLS","title":"gc2","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=194&h=115&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=387&h=229&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=774&h=458&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=774&h=458&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=194&h=115&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=387&h=229&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ktCWHuoxIMA6bEIH99SLS/09dfc05a6fcf5a756836275ccf99ca14/gc2.png?w=774&h=458&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":458},"__typename":"ContentfulAsset"},{"contentful_id":"6l6zRFxBadTRDH4aDix8IX","title":"gc3","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=190&h=117&q=50&fm=webp 190w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=380&h=233&q=50&fm=webp 380w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=760&h=466&q=50&fm=webp 760w","sizes":"(min-width: 760px) 760px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=760&h=466&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=190&h=117&q=50&fm=png 190w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=380&h=233&q=50&fm=png 380w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6l6zRFxBadTRDH4aDix8IX/29ba354573d9b2e3bde16c0666144e28/gc3.png?w=760&h=466&q=50&fm=png 760w","sizes":"(min-width: 760px) 760px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":475},"__typename":"ContentfulAsset"},{"contentful_id":"ULePy1JeRbkFHMZINS4D9","title":"gc4","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=194&h=133&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=387&h=265&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=774&h=530&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=774&h=530&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=194&h=133&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=387&h=265&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/ULePy1JeRbkFHMZINS4D9/32dc9a862053d10b84c13bd42d36359d/gc4.png?w=774&h=530&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":530},"__typename":"ContentfulAsset"},{"contentful_id":"3rIKnbXtGd4hWRnkRE955m","title":"gc5","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=194&h=59&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=387&h=117&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=774&h=234&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=774&h=234&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=194&h=59&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=387&h=117&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3rIKnbXtGd4hWRnkRE955m/bac13a2c7e5d06793a6ae59551ed1a19/gc5.png?w=774&h=234&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":234.00000000000003},"__typename":"ContentfulAsset"},{"contentful_id":"46KwBREiW3M7VUmSHUA6Xc","title":"gc6","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=194&h=119&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=387&h=238&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=774&h=476&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=774&h=476&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=194&h=119&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=387&h=238&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/46KwBREiW3M7VUmSHUA6Xc/b193f2ed7c9c3db35807e46bda762b38/gc6.png?w=774&h=476&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":476},"__typename":"ContentfulAsset"},{"contentful_id":"6pQ8of1by9yPOuEHcG91C0","title":"gc7","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=183&h=119&q=50&fm=webp 183w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=365&h=238&q=50&fm=webp 365w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=730&h=476&q=50&fm=webp 730w","sizes":"(min-width: 730px) 730px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=730&h=476&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=183&h=119&q=50&fm=png 183w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=365&h=238&q=50&fm=png 365w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6pQ8of1by9yPOuEHcG91C0/11215bace64eb8406b52e96a9fe50e2c/gc7.png?w=730&h=476&q=50&fm=png 730w","sizes":"(min-width: 730px) 730px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":505},"__typename":"ContentfulAsset"},{"contentful_id":"7gjFT0CLg3fJa1o7HeWaYl","title":"gc8","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=194&h=116&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=387&h=232&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=774&h=464&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=774&h=464&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=194&h=116&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=387&h=232&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gjFT0CLg3fJa1o7HeWaYl/9a4ca357e31e100cd67561a61e95bdb6/gc8.png?w=774&h=464&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":464},"__typename":"ContentfulAsset"},{"contentful_id":"4p7zvSruSlr8Kn49B7uRBY","title":"gc9","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=194&h=124&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=387&h=248&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=774&h=495&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=774&h=495&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=194&h=124&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=387&h=248&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4p7zvSruSlr8Kn49B7uRBY/5984fd6e5c09f6c9fb78eb54498ab9f5/gc9.png?w=774&h=495&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":495},"__typename":"ContentfulAsset"},{"contentful_id":"6bKHaBcMni5QoC0rIBJJku","title":"gc10","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=194&h=123&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=387&h=246&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=774&h=492&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=774&h=492&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=194&h=123&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=387&h=246&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6bKHaBcMni5QoC0rIBJJku/d7d8422c48875447381cf8bf657dcb6b/gc10.png?w=774&h=492&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":492},"__typename":"ContentfulAsset"},{"contentful_id":"5elaK9kPpXgq0S8AbwCs8E","title":"gc11","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=194&h=143&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=387&h=285&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=774&h=570&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=774&h=570&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=194&h=143&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=387&h=285&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5elaK9kPpXgq0S8AbwCs8E/ae7467135559d7f228410ffd8385cd12/gc11.png?w=774&h=570&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":570},"__typename":"ContentfulAsset"},{"contentful_id":"exhdzcNYsuXVzMJDvRB5O","title":"gc12","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=189&h=140&q=50&fm=webp 189w,\nhttps://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=378&h=280&q=50&fm=webp 378w,\nhttps://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=756&h=560&q=50&fm=webp 756w","sizes":"(min-width: 756px) 756px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=756&h=560&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=189&h=140&q=50&fm=png 189w,\nhttps://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=378&h=280&q=50&fm=png 378w,\nhttps://images.ctfassets.net/w6wmczdusxy8/exhdzcNYsuXVzMJDvRB5O/b5ee1baaec9d854ebfce288f105ba894/gc12.png?w=756&h=560&q=50&fm=png 756w","sizes":"(min-width: 756px) 756px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":573},"__typename":"ContentfulAsset"},{"contentful_id":"6VA6DPMlVaD7MNCq2L48Am","title":"gc13","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=194&h=156&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=387&h=311&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=774&h=621&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=774&h=621&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=194&h=156&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=387&h=311&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6VA6DPMlVaD7MNCq2L48Am/cbff1b7610c4b71fe30d7122321e2d9a/gc13.png?w=774&h=621&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":621},"__typename":"ContentfulAsset"}]}},{"title":"데이터베이스 인덱스(DB Index)","category":["CS"],"slug":"database-index","date":"2024-09-01","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=125&h=94&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=250&h=188&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=500&h=375&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=500&h=375&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=125&h=94&fl=progressive&q=50&fm=jpg 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=250&h=188&fl=progressive&q=50&fm=jpg 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5InjCoQnGBmPMgDx5TH0nQ/04bebb69d0016a3a4d8dbf3619e69fa1/note-box-8907986_640.jpg?w=500&h=375&fl=progressive&q=50&fm=jpg 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#784818","width":500,"height":375}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Index란?\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"인덱스는 현실에서 가장 많이 쓰이는 곳은 아마 책의 목차일 것이다. 책의 소제목을 보고 몇 페이지에 원하는 내용이 있는지 알려준다. 이를 데이터베이스에서 적용한다면 인덱스란 원하는 데이터를 빠르게 찾아내는 자료구조다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Index의 특징\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"데이터베이스의 테이블은 사용자가 원하는 순서대로 정렬되어 있지 않다. 예를 들어 age라는 칼럼(column)이 있다면 테이블은 나이 순서대로 데이터를 저장하고 정렬해주지 않는다. 따라서 age가 20인 데이터를 찾으려면 테이블 내 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"모든 데이터를 확인(Full Scan)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"해서 반환해 줘야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 인덱스를 활용하면 풀 스캔을 하지 않고 빠르게 원하는 데이터만 가져올 수 있다. 인덱스를 만듦으로써 처음부터 끝까지 데이터를 조회하지 않는다. 여러 기준을 가지고 조회할 데이터 군을 소거해가며 원하는 데이터를 빠르게 가져올 수 있게 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"앞서 적었던 것처럼 인덱스를 사용하게 되면 장점이 많지만 단점도 존재한다. 데이터를 삽입, 삭제, 수정을 할 때 인덱스를 만들지 않았을 때보다 시간이 오래걸린다. 그 이유는 인덱스는 항상 정렬된 순서로 데이터를 유지하는데 변동이 생기게되면 다시 정렬을 해야하기 때문이다. 또한 인덱스는 결국 본래 데이터 테이블의 일부분을 복사하여 정렬하고 따로 저장하는 자료구조라 DBMS의 저장공간도 일부 차지하게 된다. 모든 테이블을 인덱스로 만들게 되면 메모리만 차지하고 오히려 성능을 저하시킬 수도 있다. 인덱스의 특징을 정리하면 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"원하는 데이터를 빠르게 검색 가능\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"삽입, 삭제, 수정 쿼리는 시간이 오래걸린다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"DBMS 일부분의 메모리를 차지한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Index 실습\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"실습 환경\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시작하기 전 테이블은 아래와 같다. 생성 시간과 로그인에 필요한 아이디, \\b비밀번호, 사용자 이름으로 구성된 테이블을 생성한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::sql\\nCREATE TABLE `member` (\\n    id INT UNSIGNED NOT NULL AUTO_INCREMENT,\\n    PRIMARY KEY(id),\\n    regDate DATETIME NOT NULL,\\n    loginId CHAR(50) NOT NULL,\\n    loginPw VARCHAR(100) NOT NULL,\\n    `name` CHAR(100) NOT NULL\\n);\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1oHJh4L5x1ok2CgbgFxToU\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"테이블을 생성한 이후에 UUID를 사용해 사용자 데이터를 백만개 생성해준다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Index 생성 시 속도 비교\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::sql\\nSELECT SQL_NO_CACHE *\\nFROM `member`\\nWHERE loginId = 'user1';\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"mysql 자체적으로 캐싱을 해서 속도가 높아지는 것을 대비해 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"SQL_NO_CACHE\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 를 걸어주어 캐싱 없이 순수 조회 속도를 비교해보고자 한다. 먼저 인덱스를 생성하지 않고 그대로 조회하면 아래와 같이 약 0.5초정도의 쿼리 수행 시간이 걸린다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"2eLIuwNb2btk4qEudZTQqM\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이번에는 Member 테이블에 인덱스를 생성해 조회를 해보자. 인덱스는 아래와 같은 SQL문으로 생성한다. 여기서 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"UNIQUE\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"는 중복이 제거된 인덱스를 생성하는 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::sql\\nALTER TABLE `member` ADD UNIQUE INDEX (`loginId`);\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"인덱스를 생성하고 조회했더니 0.00초로 수행되며 소숫점 2자리로도 수행속도를 나타낼 수 없을만큼 빨라졌다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5cbHlsqA9VPBL2tvhToysh\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Index 자료구조\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"데이터들을 저장하기 위해서는 어떤 자료구조를 사용할까? 링크드 리스트나 배열 같은 자료구조도 있지만 실제 DBMS에서 Index는 트리 구조로 이루어져있다. 트리 자료구조를 기반으로 데이터들을 정렬하면서 범위를 절반씩 줄여나갈 수 있는 이진 탐색트리가 먼저 고안됐다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이진 탐색 트리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3JMrIUJmz5ivz5sDapOLqd\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이진 탐색 트리는 부모 노드를 기준으로 값이 작다면 왼쪽 자식 노드로 값이 크다면 오른쪽 자식 노드로 이루어져 있는 자료구조다. \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"원하는 데이터를 찾고 싶을때 절반씩 소거해가며 찾을 수 있는 장점\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"을 지니고 있다. 하지만 이진 탐색 트리를 확장해 하나의 노드에 여러값을 넣은 뒤, 절반 이상씩 소거할 수 있는 B Tree가 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"B Tree\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1ubHmGuoux5VvI5ZnwfQI5\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"B Tree란 데이터베이스에서 자주 사용되는 자료구조 중 하나로, \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"탐색 시간을 최소화하기 위한 키-벨류 구조의 트리다.\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" B Tree는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"균형 이진 트리의 변형\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"으로 트리의 깊이를 최소화하면서 빠른 탐색을 가능하게 한다. 트리의 높이가 낮기 때문에 탐색 시간이 빠르며, 인덱스 검색 시 가장 많이 사용된다. B Tree는 각 노드마다 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"다수의 자식 노드를 가질 수 있으며, 각 노드가 가지는 자료의 수에 제한이 없다.\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 이런 B Tree를 좀 더 개선한 자료구조가 B+Tree다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"B+Tree\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3lVCH0TdiPZFly0Pr0guxN\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"B+Tree는 B Tree와 유사하지만, \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"모든 레코드는 리프 노드에만 저장\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"된다. 리프 노드 이외의 노드들에는 범위에 대한 정보를 가진다. 또한 마지막 리프 노드끼리 연결되어 있어서 더 빠른 탐색을 지원한다.\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1oHJh4L5x1ok2CgbgFxToU","title":"인덱스1","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=194&h=20&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=387&h=40&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=774&h=80&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=1548&h=160&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=774&h=80&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=194&h=20&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=387&h=40&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=774&h=80&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1oHJh4L5x1ok2CgbgFxToU/2deb9cffe3ff1ee1050f3fbd05ab7d82/index1.png?w=1548&h=160&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":80},"__typename":"ContentfulAsset"},{"contentful_id":"2eLIuwNb2btk4qEudZTQqM","title":"인덱스2","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=194&h=46&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=387&h=93&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=774&h=185&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=774&h=185&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=194&h=46&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=387&h=93&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2eLIuwNb2btk4qEudZTQqM/4e2f51b910a96875d47627c9474f272d/index2.png?w=774&h=185&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":185},"__typename":"ContentfulAsset"},{"contentful_id":"5cbHlsqA9VPBL2tvhToysh","title":"인덱스3","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=194&h=44&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=387&h=88&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=774&h=176&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=774&h=176&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=194&h=44&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=387&h=88&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5cbHlsqA9VPBL2tvhToysh/19c88d2b681540f42ff239a84afaab58/index3.png?w=774&h=176&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":176},"__typename":"ContentfulAsset"},{"contentful_id":"3JMrIUJmz5ivz5sDapOLqd","title":"이진트리","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=111&h=90&q=50&fm=webp 111w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=221&h=180&q=50&fm=webp 221w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=442&h=360&q=50&fm=webp 442w","sizes":"(min-width: 442px) 442px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=442&h=360&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=111&h=90&q=50&fm=png 111w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=221&h=180&q=50&fm=png 221w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3JMrIUJmz5ivz5sDapOLqd/8fadc3948587b4eb66cd8fde4e748ec6/binarytree.png?w=442&h=360&q=50&fm=png 442w","sizes":"(min-width: 442px) 442px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":630},"__typename":"ContentfulAsset"},{"contentful_id":"1ubHmGuoux5VvI5ZnwfQI5","title":"비트리","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=194&h=55&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=387&h=111&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=774&h=221&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=774&h=221&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=194&h=55&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=387&h=111&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1ubHmGuoux5VvI5ZnwfQI5/0cea9d80021cfd7017018c5074e28d51/btree.png?w=774&h=221&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":221},"__typename":"ContentfulAsset"},{"contentful_id":"3lVCH0TdiPZFly0Pr0guxN","title":"비플러스트리","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=194&h=89&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=387&h=178&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=774&h=356&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=774&h=356&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=194&h=89&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=387&h=178&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3lVCH0TdiPZFly0Pr0guxN/3095561d69e15e5e2033ff06fbf90938/b_tree.png?w=774&h=356&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":356},"__typename":"ContentfulAsset"}]}},{"title":"교착상태(DeadLock)","category":["CS"],"slug":"deadlock","date":"2024-09-01","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=125&h=88&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=250&h=175&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=500&h=350&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=500&h=350&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=125&h=88&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=250&h=175&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1iG6KZrs6Y9tc1pzFdszEe/60df56dd8ab0595ca0d1715ca48ff859/deadlock.png?w=500&h=350&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":350}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"특히 사거리 도로에서 꼬리물기를 하게되면 교차로에서 모든 차들의 진행방향이 막혀 교통마비가 되는 경우가 있다. 어느 차선에서도 다른 차선으로 가기 위해서는 가고자하는 차선이 비어있어야하는데 차선이 이미 차있어 가지 못하는 교착상태에 빠진다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다중 프로그래밍 환경에서도 비슷한 일이 일어날 수 있다. A 스레드가 자원을 요청했는데 그 자원을 다른 B 스레드가 점유하고 있고 마찬가지로 점유하고 있는 B 스레드가 자원을 요청했는데 A 스레드가 점유하고 있다면 이도 저도 못하는 상황을 교착상태, \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"데드락(DeadLock)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 발생 조건\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그렇다면 교착상태는 어떤 상황일 때 발생할까? 아래 4가지 필요조건을 모두 만족해야지 데드락이 발생하게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"상호 배제(mutual exclusion)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"점유하며 대기(hold and wait)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"비선점(no preemption)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"순환 대기(circular wait)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자원 할당 그래프\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"47smr1SMeai1W1TDv2guyv\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그림과 같은 그래프를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"자원 할당 그래프\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라고 한다. 교착 상태를 방향 그래프로 시각화하여 더 정확하게 기술할 수 있다. P는 프로세스를 뜻하고 R은 자원 유형을 뜻하며 R 안의 점은 자원의 개수를 뜻한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자원 할당 그래프에서 사이클(cycle)의 유무를 명확하게 확인할 수 있다. 사이클 유무의 정보로 사이클이 없다면 교착 상태가 아니다. 라고 정의할 수 있고 사이클이 있다면 교착 상태를 의심해봐야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 처리 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"문제를 무시하고, 교착 상태가 시스템에서 절대 발생하지 않게 한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템이 결코 교착 상태가 되지 않도록 보장하기 위하여 교착 상태를 예방하거나 회피하는 프로토콜을 사용 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 예방 (prevention)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"교착 상태 회피 (avoid)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템이 교착 상태가 되도록 허용한 다음 교착 상태가 된다면 복구 시키는 방법\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착상태 예방 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착상태를 예방하려면 네 가지 필요조건이 다 만족해야하는데 이 말인 즉 최소 하나가 성립하지 않도록 보장하면 교착상태를 예방할 수 있다는 말이 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"상호배제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사실상 불가능하다. 이미 동기화문제를 처리하면서 근본적으로 공유가 불가능한 자원도 있기 때문이다. 예를들어 Mutex 락은 동시에 여러 스레드가 공유할 수 없다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"점유하며 대기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드가 자원을 요청할 때마다 다른 자원을 보유하지 않도록 보장해주면 된다. 이 문제를 해결하기 위해 2가지 프로토콜이 존재한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"각 스레드가 실행을 시작하기 전에 모든 자원을 요청하고 할당\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드가 자원을 전혀 갖고 있지 않을때만 자원을 요청\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 이 프로토콜은 두 가지 단점을 지니고 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자원이 할당 되었지만 장기간 사용하지 않을 수 있기 때문에 자원 이용률이 낮을 수 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기아가 발생할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"비선점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드가 선점 당할 수 있도록 해준다. 그렇다면 이런 프로토콜을 생각할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드가 반드시 대기해야한다면 현재 점유하고 있는 모든 자원이 선점된다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드는 자신이 요청하고 있는 새로운 자원은 물론 이미 점유했던 옛 자원들을 다시 얻어야만 시작할 수 있게된다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"비선점 방법은 CPU 레지스터나 데이터베이스 트랜잭션처럼 그 상태가 쉽게 저장되고 후에 복원될 수 잇는 자원에 종종 적용된다. 하지만 교착상태가 자주 발생하는 mutex 락과 세마포어 같은 자원에는 적용이 불가능하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"순환 대기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이전 세가지 필요조건들 보다 실용적인 해결책을 제공해준다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"모든 자원 유형에 전체적인 순서를 부여하여, 각 프로세스가 열거된 순서대로 오름차순으로 자원을 요청하도록 요구\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 순환 대기를 해결해줘도 문제점이 발생한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다른 스레드가 계속 중간에 열거된 자원을 점유하고 있다면 기아가 발생할 확률이 높아진다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"락 순서로 인한 교착 상태가 발생할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 회피\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 예방 방법은 장치의 이용률을 저하 시키거나 시스템 총 처리율(throughput)를 감소시킨다. 이렇게 된다면 멀티 스레드 환경을 사용하는 이유가 무색 해진다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 예방 방법 대안으로 교착 상태 회피가 제안됐다. 교착 상태를 회피하려면 어떤 방식을 사용해야할까? 각 스레드가 요청할 자원들의 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"최대 수\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 를 미리 파악해서 교착 상태에 빠지지 않도록 알고리즘을 작성하면된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 회피 알고리즘은 시스템에 순환 대기 상황이 발생하지 않도록 자원할당 상태인 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"가용 자원 수\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"할당된 자원의 수\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 그리고 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"스레드의 최대 요구 수\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"에 따라 작성된다. 회피 알고리즘에는 대표적으로 자원 할당 그래프 알고리즘과 뱅커스 알고리즘이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 탐지\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태를 방치하고 교착 상태가 일어나게 되면 다음 알고리즘들을 반드시 수행해야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 발생했는지 탐지하는 알고리즘\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태로부터 회복하는 알고리즘\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 탐지 알고리즘\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"대기 그래프 Wait - for graph\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"각 자원이 하나의 인스턴스만 가지고 있을 때 사용하는 그래프이다. 자원 할당 그래프로부터 자원 유형 노드를 제거하고 적절한 간선들을 결합함으로써 얻을 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1KgbHsDVQa9NaUOa2ENG2Y\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"각 자원의 인스턴스가 여러개 일때\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"뱅커스 알고리즘과 같이 available, allocation, request를 바탕으로 가능한 모든 할당 순서를 조사하는 방식이다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 탐지 알고리즘 사용하는 시기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 얼마나 자주 발생하는가\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 일어나면 통상 몇 개의 스레드가 원인이 되는가\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 자주 일어난다면 탐지 알고리즘을 자주 돌려야한다. 반대로 너무 늦게 탐지 알고리즘을 돌리게 되면 교착 상태에 연관된 스레드가 늘어나기 때문에 적절히 돌려야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 회복 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"탐지 알고리즘이 교착 상태가 존재한다고 하면, 여러 대안의 처리 방법이 있다. 운영자가 수작업으로 처리하거나 시스템이 자동으로 처리하게 된다. 교착 상태를 깨뜨리는 데는 한 개 이상의 스레드를 중지하거나 하나 이상의 스레들로부터 자원을 선점하는 두 가지 방법이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스와 스레드 종료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태 프로세스를 모두 중지\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"확실한 교착 상태의 사이클을 깨주지만 비용이 크다. 기존에 계산중이던 결과들을 모두 내려놓고 다시 계산해야하기 때문이다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 제거될 때까지 한 프로세스씩 중지\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하나씩 제거 할때 마다 교착 상태 탐지 알고리즘을 호출해 상당한 오버헤드를 일으킨다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자원 선점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"교착 상태가 깨질 때까지 프로세스로부터 자원을 계속 선점해 이들을 다른 프로세스에 주어야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"희생자 선택 selection of a victim\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"비용을 최소화할 수 있는 선점 순서를 결정해야한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"후퇴 rollback\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"결정된 프로세스를 안전한 상태로 롤백 시켜야한다. 일반적으로 완전히 롤백시킨다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기아 상태 starvation\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기아 상태가 일어날 수 있는데 이를 방지하기 위해 롤백 횟수를 기억하는 방법이 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"47smr1SMeai1W1TDv2guyv","title":"자원할당그래프","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=63&h=91&q=50&fm=webp 63w,\nhttps://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=125&h=180&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=250&h=360&q=50&fm=webp 250w","sizes":"(min-width: 250px) 250px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=250&h=360&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=63&h=91&q=50&fm=png 63w,\nhttps://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=125&h=180&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/47smr1SMeai1W1TDv2guyv/efcf7758d9145be280214555b3f46866/deadlock1.png?w=250&h=360&q=50&fm=png 250w","sizes":"(min-width: 250px) 250px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":1115},"__typename":"ContentfulAsset"},{"contentful_id":"1KgbHsDVQa9NaUOa2ENG2Y","title":"대기 할당","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=143&h=90&q=50&fm=webp 143w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=286&h=181&q=50&fm=webp 286w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=571&h=361&q=50&fm=webp 571w","sizes":"(min-width: 571px) 571px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=571&h=361&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=143&h=90&q=50&fm=png 143w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=286&h=181&q=50&fm=png 286w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1KgbHsDVQa9NaUOa2ENG2Y/952a74843346a00d71776c1f8b16d480/deadlock3.png?w=571&h=361&q=50&fm=png 571w","sizes":"(min-width: 571px) 571px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":489},"__typename":"ContentfulAsset"}]}},{"title":"동기화 문제 및 해결책","category":["CS"],"slug":"sync-issues-and-solutions","date":"2024-08-26","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=115&h=118&q=50&fm=webp 115w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=231&h=237&q=50&fm=webp 231w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=461&h=473&q=50&fm=webp 461w","sizes":"(min-width: 461px) 461px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=461&h=473&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=115&h=118&q=50&fm=png 115w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=231&h=237&q=50&fm=png 231w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1yggoVKMc4eGqSdA5mJ4o9/83a1202cd4febb3c4690a452f06dffdb/img.png?w=461&h=473&q=50&fm=png 461w","sizes":"(min-width: 461px) 461px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":513}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"유한 버퍼 문제 (Bounded buffer)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Bounded buffer는 제한된 크기를 가지는 유한 버퍼를 의미한다. 즉, 프로세스간의 공유 메모리를 뜻한다. 프로세스 간의 역할을 소비자와 생산자로 나누어 소비자는 버퍼를 비워내고 생산자는 버퍼를 채우는 역할이라 생각 해보자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"유한 버퍼 문제는 생산자와 소비자 간의 동기화 문제를 해결하는 것이다. 버퍼는 크기가 제한되어 있어서, 생산자는 버퍼를 채울 수 없는 경우에는 기다려야 하고, 소비자는 버퍼가 비어 있을 경우에는 기다려야 한다. 이러한 상황에서, 생산자와 소비자 간의 상호작용을 조율해주는 것이 필요하다. 아래의 예제는 유한 버퍼 문제를 구조화 시킨 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\nint n;\\nsemaphore mutex = 1;\\nsemaphore empty = n;\\nsemaphore full = 0;\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"n → 사이즈가 n인 버퍼\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"mutex → 버퍼에 접근하기 위한 락을 제공한다. 이진 세마포\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"empty → 버퍼가 비어있는지 기록. 카운팅 세마포 (감소 시킨다.)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"full → 버퍼가 꽉 찼는지 기록. 카운팅 세마포 (증가 시킨다.)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이렇게 자료구조가 주어지게 되면 생산자, 소비자 간의 유한버퍼 구조는 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\n// 생산자 프로세스 구조\\nwhile (true) {\\n\\t// 소비자가 버퍼를 다 비울 때까지 대기\\n\\twait(empty);\\n\\t// 소비자가 버퍼를 다 비웠으면 mutex락을 획득해 임계구역(버퍼)로 접근\\n\\twait(mutex);\\n\\t...\\n\\t// 버퍼를 채운다.\\n\\t...\\n\\t// 임계구역에서 작업을 끝냈다면 mutex락을 반납\\n\\tsignal(mutex);\\n\\t// 소비자 프로세스에게 버퍼를 다 채웠다고 알림\\n\\tsignal(full);\\n}\\n\\n// 소비자 프로세스 구조\\nwhile (true) {\\n\\t// 생산자가 버퍼를 다 채워줄 때까지 대기\\n\\twait(full);\\n\\t// 생산자가 버퍼를 다 채웠으면 mutex락을 획득해 버퍼로 접근\\n\\twait(mutex);\\n\\t...\\n\\t// 버퍼를 비운다.\\n\\t...\\n\\t// 버퍼에서 작업을 끝냈다면 mutex락을 반납\\n\\tsignal(mutex);\\n\\t// 생산자 프로세스에게 버퍼를 다 비웠다고 알림\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"생산자와 소비자간의 대칭적인 구조는 동기화 문제를 발생시키기 쉽다. 간혹 wait 또는 signal의 명령어 순서가 바뀌는 문제같이 말이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Readers-writers 문제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Readers-writers 문제는 공유 자원에 대해 자원을 읽어오는 reader와 자원을 갱신하는 writer 간에서 생기는 동기화 문제다. 대표적인 예로는 데이터베이스 예시가 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"만약 하나의 데이터 베이스가 공유된다고 하자. 여기서 여러개의 readers가 데이터베이스를 조회하는 동시에 하나의 writer가 데이터베이스에 접근해 수정하는 경우가 있을 수 있다. 그렇다면 어느 readers는 수정 전 데이터를 보게되고 또 다른 readers들은 수정된 데이터를 보게되는 혼란이 야기된다. 이런 동기화 문제를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"readers-writers 문제\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라 한다. readers-writers 문제는 변형이 두 가지 있는데 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"writer와 reader 중 락을 먼저 획득하는 프로세스에게 접근하도록 해준다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"writer가 대기한다고 해서 먼저 락을 쥐어주는 것이 아니라 기다리고 있는 reader들과 같이 락을 얻기 위해 경쟁해야한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 이 과정에서 writer의 기아 문제(starvation)가 발생할 수도 있다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"writer가 우선순위를 높게 가지게 한다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다른 reader들은 writer 때문에 접근하지 못한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"따라서 이 과정에서 reader의 기아 문제가 발생할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"두 가지 문제들 중 첫 번째 readers-writers 문제의 해결책 예시는 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\nsemaphore rw_mutex = 1;\\nsemaphore mutex = 1;\\nint read_count = 0;\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"rw_mutex: reader와 writer가 모두 공유하는 이진 세마포\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"mutex: read_count 변수를 갱신할 때 상호 배제를 보장하기 위한 이진 세마포\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"read_count: 현재 몇 개의 프로세스들이 객체를 읽고 있는지 알려줌\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위와 같이 자료구조를 바탕으로 writer 프로세스의 구조는 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\n// writer 프로세스 구조\\nwhile (true) {\\n\\twait(rw_mutex);\\n\\t...\\n\\t/* writer 프로세스의 동작 */\\n\\t...\\n\\tsignal(rw_mutex);\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"writer 프로세스는 rw_mutex만을 확인하다 락을 획득해 reader과의 동기화 문제를 해결해준다. reader 프로세스의 구조는 writer보단 좀 더 복잡하게 짜여있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\n// reader 프로세스 구조\\nwhile (true) {\\n\\twait(mutex);\\n\\tread_count++;\\n\\tif (read_count == 1)\\n\\t\\twait(rw_mutex);\\n\\tsignal(mutex);\\n\\t...\\n\\t/* reader 프로세스의 동작 */\\n\\t...\\n\\twait(mutex);\\n\\tread_count--;\\n\\tif (read_count == 0)\\n\\t\\tsignal(rw_mutex);\\n\\tsignal(mutex);\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 reader 프로세스는 read 프로세스들 간의 동기화를 위해 mutex 락을 획득할 때까지 기다린다. reader 프로세스는 read_count의 값을 변경해야하기 때문이다. mutex를 획득한 하나의 reader 프로세스는 rw_mutex를 통해 writer와 경쟁하게 된다. reader 프로세스들의 작업이 끝나고 read_count가 0이 되는 순간 rw_mutex 락이 반납되며 설명된 일련의 과정들이 반복된다. 여기서 중요한 부분은 n개의 reader 프로세스들이 있다면 rw_mutex 관련된 큐에 하나의 reader만이 삽입되고 나머지 n-1의 reader들은 mutex 관련 큐에서 대기한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"식사하는 철학자들 문제\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"식사하는 철학자들 문제는 다섯 명의 철학자가 원형 테이블에 앉아서 식사를 하는데, 각자의 앞에는 젓가락이 하나씩 놓여있다. 이 철학자들은 다음과 같은 행동을 반복한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"생각한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"왼쪽 젓가락을 집어들어서 식사를 시작한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"오른쪽 젓가락을 집어들어서 식사를 계속한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"식사를 마치고 왼쪽 젓가락과 오른쪽 젓가락을 모두 놓는다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"모든 철학자가 동시에 오른쪽 젓가락과 왼쪽 젓가락을 먹으려고 할 경우, 둘 중 하나가 먼저 젓가락을 들어서 다른 철학자는 기다려야 한다. 이 때, 두 개의 젓가락을 들어 놓은 철학자는 식사를 마칠 때까지 젓가락을 내려놓지 않기 때문에 다른 철학자들은 영원히 기다리게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이 문제를 해결하기 위해서는 상호배제와 교착상태를 피하기 위한 기법들이 필요하다. 일반적으로, 일부 철학자들이 식사를 하다가 다른 철학자들이 젓가락을 들어놓을 때까지 기다리는 것을 방지하기 위해, 최대 n-1명의 철학자만이 동시에 식사를 할 수 있도록 하는 방법을 사용한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::C\\nsemaphore chopstick[n];\\nsemaphore mutex = 1;\\n\\nvoid philosopher (int i) {\\n\\twhile (true) {\\n\\t\\tthink(); // 생각 중\\n\\n\\t\\twait(mutex);\\n\\t\\twait(chopstick[i]); // 왼쪽 젓가락을 집어들기\\n\\t\\twait(chopstick[(i+1)%n]); // 오른쪽 젓가락을 집어들기\\n\\t\\t\\n\\t\\teat(); // 식사 중\\n\\n\\t\\tsignal(chopstick[(i+1)%n]); \\n\\t\\tsignal(chopstick[i]);\\n\\t\\tsignal(mutex);\\n\\t}\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\n\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위의 코드에서, 철학자 i는 i번째 젓가락과 (i+1)%n번째 젓가락을 사용하여 식사한다. wait(chopstick[i])는 i번째 젓가락이 사용 가능할 때까지 기다리고, wait(chopstick[(i+1)%n])는 (i+1)%n번째 젓가락이 사용 가능할 때까지 기다린다. 그리고 젓가락을 내려놓을 때는 signal(chopstick[(i+1)%n])와 signal(chopstick[i])를 호출한다. 또한 그냥 젓가락을 집는 행위는 철학자들간의 상호배제를 지킬 수 없어 mutex 락으로 한번 상호배제를 시켜준다. 하지만 이또한 교착 상태를 예방 해줄뿐 기아문제는 발생할 수 있어 따로 확인을 해줘야한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[]}},{"title":"가상 메모리","category":["CS"],"slug":"virtual-memory","date":"2024-08-23","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=125&h=123&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=250&h=246&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=500&h=491&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=500&h=491&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=125&h=123&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=250&h=246&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=500&h=491&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":491}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이전 메모리 관리 방법들은 메모리에 얼마나 많은 프로세스를 동시에 유지할 수 있는지에 관한 방법들이다. 하지만 프로세스 전체가 메모리로 올라가는 것을 전제하고 있다. 메모리 크기에 의존하지 않고 자유로워지기 위해 쓰는 기법이 있는데 이를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"가상 메모리\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 메모리 배경\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사실 생각해보면 실제 프로그램들을 살펴보면 많은 경우에 프로그램 전체가 한꺼번에 메모리에 늘 올라오지 않아도 되는 것을 알 수 있다. 예를 들어 몇 가지를 설명하자면 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"많이 사용되지 않는 코드가 있다. 예를 들어 잘 발생하지 않는 오류 상황을 처리하는 코드라던지 평소에 잘 사용되지 않는 기능에 관한 코드들이 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"배열, 리스트, 테이블등 필요 이상으로 많은 공간을 점유 할 수 있다. 실제로는 10x10를 사용하는 배열이 있는데 100x100으로 선언된 경우 같이 말이다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 메모리를 사용해 프로그램을 일부분만 메모리에 올려놓고 실행할 수 있다면 다음과 같이 많은 이점이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로그램은 물리 메모리 크기에 제약 받지 않는다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"각 프로그램이 더 작은 메모리를 차지하므로 더 많은 프로그램을 동시에 수행할 수 있다. 이에 따라 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"응답시간\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"은 늘어나지 않고 CPU \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이용률\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"과 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"처리율\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 높아진다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스왑(swap)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"하는 데 필요한 I/O 횟수가 줄어들면서 프로그램들이 빨리 실행된다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 메모리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 메모리는 실제 물리 메모리 개념과 개발자의 논리 메모리 개념을 분리한 것이다. 분리 함으로써 작은 메모리를 가지고도 얼마든지 큰 가상 주소 공간을 프로그래머에게 제공할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1xTVd3IXNWFB2de97atRA5\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 주소 공간\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"은 한 프로세스가 메모리에 저장되는 논리적인 모습을 말한다. 일반적으로 그림과 같이 특정 논리 주소에서 0번지로 시작하여 연속적인 공간을 차지한다. heap은 동적 할당 메모리를 사용함에 따라 위로 확장, stack은 함수 호출을 거듭함에 따라 아래로 확장한다. 중간의 성긴(sparse) 주소 공간은 heap, stack의 확장 및 프로그램이 동작할때 필요한 라이브러리를 동적으로 할당해줄 때 사용된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가상 메모리는 이뿐만이 아니라 페이지 공유를 통해 프로세스간의 공유를 가능하게 해준다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템 라이브러리를 여러 프로세스에게 공유\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"메모리를 공유\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지는 fork()를 통한 프로세스 생성 과정에서 공유되는 것을 가능하게 함으로써 프로세스 생성 속도를 높여준다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요구 페이징 Demand Paging\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로그램 실행 시작 시 프로그램 전부를 물리 메모리에 적재하는 것이 아닌, 필요한 페이지만을 적재하는 것이 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"요구 페이징\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 기법이다. 페이지 테이블에 유효-무효(valid - invalid) 비트 기법으로 메모리 안의 페이지 유무를 판단한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스가 메모리에 올라오지 않은 페이지에 접근하기 위해서는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"페이지 폴트 트랩\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 을 발생시킨다. 페이지 폴트 트랩은 페이징 하드웨어가 페이지 테이블에서 무효 비트를 발견하고 운영체제에게 트랩을 거는 현상이다. 페이지 폴트를 처리하는 과정은 아래의 그림과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이렇게 페이지 폴트가 발생하면서 프로세스에 필요한 모든 페이지가 메모리에 올라왔을 때 더이상 페이지 폴트가 일어나지 않는다. 이것을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"순수 요구 페이징(pure demand paging)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"2gHBlE0BcgvALqIFwDp9LV\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 교체\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다중 프로그래밍 정도를 더 올리면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"메모리 과할당(over-allocating)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 발생한다. 즉 프로세스들이 필요로한 페이지가 메모리의 가용 프레임보다 많게 된다. 메모리 과할당이 되면 운영체제는 프로세스를 종료하는 등의 몇 가지 방법을 선택할 수 있다. 그 중에서 대부분 운영체제가 선택하는 방법이 페이지 교체다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기본적인 페이지 교체\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용하지 않는 프레임을 찾아 교체하는 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"디스크(보조저장장치)에서 필요한 페이지 위치를 찾는다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 페이지 프레임을 찾는다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 프레임이 있다면 사용한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 프레임이 없다면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"희생될(victim) 프레임\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"을 선정한다. (선정할 때 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"교체 알고리즘\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"들을 사용)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"희생될 페이지를 디스크에 기록하고, 관련 테이블을 수정한다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빼앗은 프레임에 새 페이지를 읽어오고 테이블을 수정한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 폴트가 발생한 지점에서부터 프로세스를 계속한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 교체의 특징\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 프레임이 없는 경우 디스크를 두번 접근해야한다.\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"한 번은 프레임을 비울 때, 다른 한 번은 읽어 들일 때\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"변경 비트(modify bit 또는 dirty bit)를 사용해 감소시킬 수 있다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"성능 개선을 위한 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"프레임 할당 알고리즘과 페이지 교체 알고리즘 사용\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프레임 할당 알고리즘: 여러 프로세스가 있을 경우 각 프로세스에 얼마나 많은 프레임을 할당해야하는지\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 교체 알고리즘: 희생될 프레임을 어떻게 선정하는지\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 교체 알고리즘 종류\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"FIFO(First-In-First-Out)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 먼저 들어온 페이지를 먼저 교체하는 알고리즘이다. 큐(Queue)를 사용하여 페이지를 저장하고, 새로운 페이지가 들어오면 가장 먼저 들어온 페이지를 교체한다. 간단하지만, 교체 후 페이지를 다시 사용하지 않더라도 메모리에 그대로 존재하게 된다는 단점이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최적 페이지 교체(Optimal Page Replacement)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"앞으로 가장 오랫동안 사용하지 않을 페이지를 교체하는 알고리즘이다. 최적 페이지 교체 알고리즘은 미래를 예측하여 가장 오랫동안 사용하지 않을 페이지를 교체하기 때문에, 이론적으로 최소 페이지 부재를 보장하지만 구현하기 어렵다는 단점이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"LRU(Least Recently Used)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 최근에 사용되지 않은 페이지를 교체하는 알고리즘이다. 모든 페이지에 접근 시점을 기록하고, 교체할 페이지를 선택할 때, 가장 오랫동안 사용되지 않은 페이지를 교체한다. LRU 알고리즘은 최적 페이지 교체 알고리즘과 비슷한 성능을 보이기 때문에 가장 많이 사용되는 알고리즘이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"계수-기반 페이지 교체 Counting-Based Page Replacemen\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 교체의 다른 알고리즘들은 페이지가 참조될 때마다 참조 비트를 1로 설정하고, 주기적으로 0으로 초기화한다. 이러한 방식으로 최근에 참조된 페이지를 추적하는데 이용한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"계수-기반 페이지 교체 알고리즘은 참조 비트 대신에 각 페이지에 대한 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"참조 계수(reference count)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"를 유지한다. 참조 계수는 페이지에 대한 참조가 일어날 때마다 1씩 증가한다. 교체할 페이지를 결정할 때, 가장 작은 참조 계수를 가진 페이지를 교체한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"LFU(Least Frequently Used)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 적게 사용된 페이지를 교체하는 알고리즘이다. 페이지를 사용할 때마다 카운터를 증가시키고, 교체시 가장 적게 사용된 페이지를 교체한다. LFU 알고리즘은 최적 페이지 교체 알고리즘과 유사한 성능을 보이지만, 페이지를 사용하는 패턴이 자주 바뀌는 경우 성능이 저하될 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"MFU(Most Frequently Used)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 많이 사용된 페이지를 교체하는 알고리즘이다. LFU와 반대로, 페이지를 사용할 때마다 카운터를 증가시키고, 교체 시 가장 많이 사용된 페이지를 교체한다. MFU 알고리즘은 최적 페이지 교체 알고리즘과 유사한 성능을 보이지만, 페이지를 사용하는 패턴이 자주 바뀌는 경우 성능이 저하될 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1xTVd3IXNWFB2de97atRA5","title":"메모리 공간","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=69&h=100&q=50&fm=webp 69w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=138&h=200&q=50&fm=webp 138w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=276&h=400&q=50&fm=webp 276w","sizes":"(min-width: 276px) 276px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=276&h=400&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=69&h=100&q=50&fm=png 69w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=138&h=200&q=50&fm=png 138w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1xTVd3IXNWFB2de97atRA5/8ff17182c293a9dea93fdd769b931202/___________2023-04-18______1.51.43.png?w=276&h=400&q=50&fm=png 276w","sizes":"(min-width: 276px) 276px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":1122},"__typename":"ContentfulAsset"},{"contentful_id":"2gHBlE0BcgvALqIFwDp9LV","title":"요구 페이징","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=186&h=182&q=50&fm=webp 186w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=371&h=364&q=50&fm=webp 371w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=742&h=728&q=50&fm=webp 742w","sizes":"(min-width: 742px) 742px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=742&h=728&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=186&h=182&q=50&fm=png 186w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=371&h=364&q=50&fm=png 371w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2gHBlE0BcgvALqIFwDp9LV/c0c752027afca6304538030023032005/Untitled.png?w=742&h=728&q=50&fm=png 742w","sizes":"(min-width: 742px) 742px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":758.9999999999999},"__typename":"ContentfulAsset"}]}},{"title":"메모리 관리 방법","category":["CS"],"slug":"memory-allocation-paging","date":"2024-08-22","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=125&h=45&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=250&h=90&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=500&h=179&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=1000&h=358&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=500&h=179&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=125&h=45&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=250&h=90&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=500&h=179&q=50&fm=png 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=1000&h=358&q=50&fm=png 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":179}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스를 수용하기 위해서는 프로그램을 메모리에 할당시켜줘야한다. 하나의 프로세스 뿐만 아니라 여러 사용자의 프로세스도 각각 목적에 맞도록 효율적으로 관리되어야한다. 이에 초기 메모리 할당법인 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"연속 메모리 할당\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"과 현대적인 메모리 할당법인 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"페이징\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"을 정리해볼까 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"연속 메모리 할당\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"27G03WUUe7YaNLDbIKuM1r\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"메모리를 할당하는 가장 간단한 방법 중 하나는 프로세스를 메모리 가변 크기 파티션에 할당하는 것이다. 처음에는 모든 메모리를 효율적으로 사용할 수 있지만 프로세스가 종료되고 새로운 프로세스가 들어오는 과정에서 사용할 수 있는 빈공간인 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"가용공간(hole)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 생긴다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스들을 다양한 크기의 가용공간 집합에서 적절한 크기의 가용공간을 찾아야하는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"동적 메모리 할당 문제\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"가 생긴다. 이러한 문제에 대한 해결책으로 다양한 기법이 있는데 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최초 적합(first-fit) \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"첫번째 사용 가능한 가용 공간을 할당\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최적 적합(best-fit) \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용 가능한 공간 중에서 가장 작은 것을 선택\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최악 적합(worst-fit) \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 큰 가용 공간을 선택\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"단편화 Fragmentation\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스들이 메모리에 적재되고 제거되는 일이 반복되다 보면, 어떤 가용 공간은 너무 작은 조각이 되는 현상을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"단편화\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라고 한다. 단편화의 종류는 2가지로 나뉜다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"외부 단편화 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"메모리의 유휴공간들을 모두 합치면 충분한 공간이 되지만 너무 분산되어 있을 때 발생\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내부 단편화 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스가 사용하는 메모리 공간에 존재하는 남는 부분이다. 예를 들어 메모리를 2,000B로 분할해줬는데 어느 한 프로세스가 1,998B를 요구하면 2B의 가용 공간이 남는 현상을 말한다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"압축 compaction\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5mZKkY8UA7YQGnpeAXvr22\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"외부 단편화를 해결하는 한 가지 방법으로 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"압축\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 있다. 압축은 메모리 모든 내용을 한 군데로 몰고 모든 가용공간을 다른 한군데로 몰아서 큰 블록으로 만드는 것이다. 그러나 압축을 항상 사용할 수 없다. 재배치가 어셈블 또는 적재 시 정적으로 행해진다면 불가능하다. 또한 압축을 하면서 드는 비용이 매우 많이 든다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"은 연속 메모리 할당과 달리 프로세스의 물리 주소 공간이 연속되지 않아도 되는 기법이다. 페이징은 연속 메모리 할당에서의 문제점인 단편화와 압축의 필요성을 피한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"물리 메모리는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"프레임(frame)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라는 같은 크기의 블록으로 나뉘어진다. 논리 메모리는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"페이지(page)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라 불리는 같은 크기의 블록으로 나누어진다. CPU는 모든 주소를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"페이지 번호와 페이지 오프셋(offset)\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"으로 내보낸다. 그렇다면 아래와 같이 MMU를 통해서 페이지 번호로 페이지 테이블을 조회해 프레임 번호를 알아내고 오프셋을 더해 물리 메모리에 접근할 수 있게된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3KdiKc2VhNWPVgCBoQPMyU\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징 특징\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징 자체는 일종의 동적 재배치이다. 모든 논리 주소는 페이징 하드웨어에 의해 실제 주소로 바인딩 된다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"외부 단편화가 발생하지 않는다. 모든 놀고 있는 프레임이 프로세스에 할당될 수 있기 때문이다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내부 단편화가 발생한다. 할당은 항상 프레임의 정수배로 할당되기 때문이다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"예를들어 페이지 크기가 2,048B이고 프로세스가 72,766B를 요구한다면 35개의 페이지 프레임이 할당하고 1,086B가 남는다. (72,766B - 2,048B*35 = 1,086B) 마지막 36번째로 할당되는 페이지 프레임은 2,048B - 1,086B = 962B이므로 내부 단편화가 발생한다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"⭐️ 메모리에 대한 프로그래머의 인식과 실제 내용이 서로 다르다는 것이다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로그래머는 메모리가 하나의 연속적인 공간이라고 인식하지만 실제 프로그램은 여러 곳에 프레임 단위로 분산되어있다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이징 테이블를 저장하는 하드웨어 종류\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PTBR(page table base register)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"페이지 테이블을 메인 메모리에 저장하고 PTBR를 페이지 테이블로 가리키게 한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다른 페이지 테이블을 사용하려면 PTBR 만 변경하면 되어 문맥교환 시간을 줄일 수 있다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"TLB(translation look-aside buffers)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"특수한 소형 하드웨어 캐시다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PTBR는 메모리 엑세스 시간이 느려지기 때문에 TLB라는 해결책이 나왔다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PTBR 오프셋 값을 사용해 페이지 테이블 항목을 찾는다. → 메모리 엑세스 1번\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"얻은 프레임 번호와 오프셋을 결함해 실제 주소로 접근한다. → 메모리 엑세스 1번\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"TLB는 key, value로 이뤄져있으며 페이지 번호를 캐싱하고 있다. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"찾고자 하는 페이지 번호가 TLB 안에 있으면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"TLB hit\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"찾고자 하는 페이지 번호가 없다면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"TLB miss\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]}]}]}]}]}]}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5kI97YPp1mEaga0IkOTLoq\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가변 파티션, 페이징 하드웨어 이미지 출처: 운영체제 10판 중\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"27G03WUUe7YaNLDbIKuM1r","title":"메모리 관리","description":"프로세스 메모리 할당","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=194&h=69&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=387&h=138&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=774&h=276&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=774&h=276&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=194&h=69&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=387&h=138&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/27G03WUUe7YaNLDbIKuM1r/24e5b0fe75cb51f06cac6707dc25f3a4/Untitled.png?w=774&h=276&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":276},"__typename":"ContentfulAsset"},{"contentful_id":"5mZKkY8UA7YQGnpeAXvr22","title":"메모리 압축","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=194&h=69&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=387&h=138&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=774&h=275&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=774&h=275&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=194&h=69&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=387&h=138&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5mZKkY8UA7YQGnpeAXvr22/53c8aaedc6f1d22a9ea051b8bc66aa57/Untitled2.png?w=774&h=275&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":275},"__typename":"ContentfulAsset"},{"contentful_id":"3KdiKc2VhNWPVgCBoQPMyU","title":"페이징","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=188&h=110&q=50&fm=webp 188w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=376&h=220&q=50&fm=webp 376w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=752&h=440&q=50&fm=webp 752w","sizes":"(min-width: 752px) 752px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=752&h=440&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=188&h=110&q=50&fm=png 188w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=376&h=220&q=50&fm=png 376w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3KdiKc2VhNWPVgCBoQPMyU/5484d84fdb509f1850a57189e2c719c6/___________2023-04-13______1.52.18.png?w=752&h=440&q=50&fm=png 752w","sizes":"(min-width: 752px) 752px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":453},"__typename":"ContentfulAsset"},{"contentful_id":"5kI97YPp1mEaga0IkOTLoq","title":"TLB","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=194&h=145&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=387&h=290&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=774&h=579&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=774&h=579&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=194&h=145&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=387&h=290&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5kI97YPp1mEaga0IkOTLoq/78a8cea65a207c9e45bf5fdac2148d57/Untitled3.png?w=774&h=579&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":579},"__typename":"ContentfulAsset"}]}},{"title":"서블릿/JSP 없이 HTTP 웹서버 구현하기","category":["Web"],"slug":"without-jsp-servlet-java-web-programming","date":"2024-08-19","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=125&h=78&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=250&h=156&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=500&h=311&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=1000&h=622&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=500&h=311&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=125&h=78&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=250&h=156&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=500&h=311&q=50&fm=png 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=1000&h=622&q=50&fm=png 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":311}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자바 웹 프로그래밍 Next Step을 실습하는 과정 중 작성한 글이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"실습 환경\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6sjKx5PLZ2Yssdvx256IN1\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기존 코드 중 핵심이 되는 코드는 webserver 패키지의 WebServer와 RequestHandler 클래스이다. WebServer 클래스는 웹서버를 시작하고, 사용자의 요청이 있을 때까지 대기 상태로 있는다. 사용자 요청이 들어오면 RequestHandler 클래스에 요청 처리를 위임한다. 사용자의 요청이 있을 때까지 대기할 수 있도록 지원하는 ServerSocket 클래스를 이용한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"RequestHandler 클래스는 Thread를 상속하고 있다. 사용자의 요청에 대한 처리와 응답을 담당하는 가장 중요한 클래스다. RequestHandler의 run() 메서드에서 사용자의 요청에 대한 처리와 응답을 구현해야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\n// RequestHandler 클래스\\npublic void run() {\\n\\tlog.debug(\\\"New Client Connect! Connected IP : {}, Port : {}\\\", connection.getInetAddress(),\\n\\tconnection.getPort());\\n\\n\\ttry (InputStream in = connection.getInputStream(); OutputStream out = connection.getOutputStream()) {\\n\\t\\tDataOutputStream dos = new DataOutputStream(out);\\n\\t\\tbyte[] body = \\\"Hello World\\\".getBytes();\\n\\t\\tresponse200Header(dos, body.length);\\n\\t\\tresponseBody(dos, body);\\n\\t\\t} catch (IOException e) {\\n\\t\\t\\t\\tlog.error(e.getMessage());\\n\\t\\t}\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 요청, 응답 처리하기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 형식으로 들어오는 요청인 InputStream을 처리해야 한다. 응답은 HTTP 형식으로 OutputStream을 세팅해 내보내야 한다. \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://jihun-24k.github.io/http-structure/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 통신 구조\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"에 맞춰 필요한 데이터를 추출하고 사용한다. HTTP 메서드(GET, POST)에 따라 다른 응답, url 뒤에 쿼리가 붙었을 때의 응답 등을 처리해서 run 메서드를 구현했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 요청 처리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\ntry (InputStream in = connection.getInputStream(); OutputStream out = connection.getOutputStream()) {\\n\\n\\tBufferedReader bufferIn = new BufferedReader(new InputStreamReader(in));\\n\\n\\tString line = bufferIn.readLine();\\n\\tString[] tokens = line.split(\\\" \\\");\\n\\n\\tString httpMethod = tokens[0];\\n\\tString url = tokens[1];\\n\\tUser createdUser;\\n\\tMap<String, String> userInfo = null;\\n\\n\\tint index = url.indexOf(\\\"?\\\");\\n\\tString requestUrl = url;\\n\\tif (index > 0) {\\n\\t\\trequestUrl = url.substring(0, index);\\n\\t\\tString params = url.substring(index + 1);\\n\\t\\tuserInfo = HttpRequestUtils.parseQueryString(params);\\n\\n\\t\\tcreatedUser = new User(\\n\\t\\t\\t\\tuserInfo.get(\\\"userId\\\"),\\n\\t\\t\\t\\tuserInfo.get(\\\"password\\\"),\\n\\t\\t\\t\\tuserInfo.get(\\\"name\\\"),\\n\\t\\t\\t\\tuserInfo.get(\\\"email\\\")\\n\\t\\t);\\n\\t\\t\\tDataBase.addUser(createdUser);\\n\\t}\\n\\n\\tMap<String, String> httpHeader = new HashMap<>();\\n\\n\\tlog.debug(\\\"HTTP RequestLine Info = {}\\\", line);\\n\\t\\twhile (!\\\"\\\".equals(line) && line != null) {\\n\\t\\t\\tline = bufferIn.readLine();\\n\\t\\t\\tlog.debug(\\\"HTTP Header Info = {}\\\", line);\\n\\t\\t\\tif (line == null || \\\"\\\".equals(line)) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tString[] info = line.split(\\\": \\\");\\n\\t\\t\\thttpHeader.put(info[0], info[1]);\\n\\t}\\n\\n\\tif (httpMethod.equals(\\\"POST\\\")) {\\n\\tint contentLength = Integer.parseInt(httpHeader.get(\\\"Content-Length\\\"));\\n\\tString httpBody = IOUtils.readData(bufferIn, contentLength);\\n\\n\\tuserInfo = HttpRequestUtils.parseQueryString(httpBody);\\n\\n\\tif (requestUrl.equals(\\\"/user/create\\\")) {\\n\\t\\t\\tcreatedUser = new User(\\n\\t\\t\\tuserInfo.get(\\\"userId\\\"),\\n\\t\\t\\tuserInfo.get(\\\"password\\\"),\\n\\t\\t\\tuserInfo.get(\\\"name\\\"),\\n\\t\\t\\tuserInfo.get(\\\"email\\\")\\n\\t\\t);\\n\\t\\tDataBase.addUser(createdUser);\\n\\t\\t}\\n\\t}\\n\\t...\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"run 메서드 상단 부분에서 HTTP 요청을 처리하는 코드다. 요청 라인에서 HTTP 메서드, URL 데이터를 추출해 그에 맞는 기능을 실행한다. 마찬가지로 요청 헤더, 요청 본문에 데이터도 따로 추출해 관리한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 응답 처리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\n...\\n\\nDataOutputStream dos = new DataOutputStream(out);\\nbyte[] body = new byte[0];\\n\\nif (requestUrl.equals(\\\"/user/create\\\")) {\\n\\tresponse302Header(dos);\\n\\tresponseBody(dos, body);\\n\\t}\\n\\telse if (requestUrl.equals(\\\"/user/login\\\")) {\\n\\t\\tif (httpMethod.equals(\\\"POST\\\")) {\\n\\t\\t\\tString userId = userInfo.get(\\\"userId\\\");\\n\\t\\t\\tUser user = DataBase.findUserById(userId);\\n\\n\\t\\t\\tif (user != null && user.getPassword().equals(userInfo.get(\\\"password\\\"))) {\\n\\t\\t\\t\\tresponseSetCookieHeader(dos, \\\"/index.html\\\",\\\"logined=true\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tresponseSetCookieHeader(dos, \\\"/user/login_failed.html\\\", \\\"logined=false\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\telse if(requestUrl.equals(\\\"/user/list\\\")) {\\n\\t\\tMap<String, String> cookies = HttpRequestUtils.parseCookies(httpHeader.get(\\\"Cookie\\\"));\\n\\t\\tboolean isLogined = Boolean.parseBoolean(cookies.get(\\\"logined\\\"));\\n\\t\\tif (isLogined) {\\n\\t\\t\\tStringBuilder userList = new StringBuilder();\\n\\n\\t\\t\\tfor (User user : DataBase.findAll()) {\\n\\t\\t\\t\\t\\tuserList.append(\\\"<tr>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"<th scope='row'>\\\").append(index++).append(\\\"</th>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"<td>\\\").append(user.getUserId()).append(\\\"</td>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"<td>\\\").append(user.getName()).append(\\\"</td>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"<td>\\\").append(user.getEmail()).append(\\\"</td>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"<td><a href='#' class='btn btn-success' role='button'>수정</a></td>\\\");\\n\\t\\t\\t\\t\\tuserList.append(\\\"</tr>\\\");\\n\\t\\t\\t}\\n\\t\\n\\t\\t\\tbody = userList.toString().getBytes();\\n\\t\\t\\tresponse200Header(dos, body.length);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tresponse302Header(dos);\\n\\t\\t}\\n\\t}\\n\\telse if (requestUrl.equals(\\\"/css/styles.css\\\")) {\\n\\t\\tbody = Files.readAllBytes(new File(\\\"./webapp\\\" + requestUrl).toPath());\\n\\t\\tresponseCSSHeader(dos, body.length);\\n\\t}\\n\\telse {\\n\\t\\tbody = Files.readAllBytes(new File(\\\"./webapp\\\" + requestUrl).toPath());\\n\\t\\tresponse200Header(dos, body.length);\\n\\t}\\nresponseBody(dos, body);\\n...\\n// 응답 헤더, 응답 본문을 다루는 메서드\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"URL에 맞는 HTTP 응답을 생성해서 보내주는 역할을 한다. 여기서는 로그인을 했는지 안했는지에 따라서도 응답을 어떻게 생성할지 if-문 분기로 나눠 동작한다. 제각기 다른 응답을 보내야 하기에 응답 헤더와 응답 본문을 만드는 메서드를 따로 만들어 구현했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"리팩토링\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"고민 1. 너무 많은 처리를 run 메서드에서 담당한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청과 응답을 모두 담당하면서 run 메서드가 매우 커졌다. 기능이 추가되면서 이 양은 더 불어날게 분명하다. 요청 따로 처리하는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"HttpRequest\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 와 응답을 따로 처리하는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"HttpResponse\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 클래스를 만들어 리팩토링을 진행 했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HttpRequest\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class HttpRequest {\\n    private static final Logger log = LoggerFactory.getLogger(HttpRequest.class);\\n    private String method;\\n    private String path;\\n    private Map<String, String> params = new HashMap<>();\\n    private Map<String, String> header = new HashMap<>();\\n\\n    public HttpRequest(InputStream in) throws IOException {\\n        BufferedReader bufferIn = new BufferedReader(new InputStreamReader(in));\\n\\n        String line = bufferIn.readLine();\\n        extractRequestLine(line);\\n\\n        log.debug(\\\"HTTP RequestLine Info = {}\\\", line);\\n        while (line != null && !\\\"\\\".equals(line)) {\\n\\n            line = bufferIn.readLine();\\n            if (line == null || \\\"\\\".equals(line)) {\\n                break;\\n            }\\n            extractHeader(line);\\n        }\\n\\n        if (method.equals(\\\"POST\\\")) {\\n            int contentLength = Integer.parseInt(header.get(\\\"Content-Length\\\"));\\n            String body = IOUtils.readData(bufferIn, contentLength);\\n            params = HttpRequestUtils.parseQueryString(body);\\n        }\\n    }\\n\\n    private void extractHeader(String line) {\\n        log.debug(\\\"HTTP Header Info = {}\\\", line);\\n\\n        String[] info = line.split(\\\": \\\");\\n        header.put(info[0], info[1]);\\n    }\\n\\n    private void extractRequestLine(String line) {\\n        String[] tokens = line.split(\\\" \\\");\\n\\n        method = tokens[0];\\n        extractPathAndParams(tokens[1]);\\n    }\\n\\n    private void extractPathAndParams(String url) {\\n        if (url.startsWith(\\\"/user/create?\\\")) {\\n            int index = url.indexOf(\\\"?\\\");\\n            path = url.substring(0, index);\\n            params = HttpRequestUtils.parseQueryString(url.substring(index + 1));\\n        }\\n        else {\\n            path = url;\\n        }\\n    }\\n\\n    public String getMethod() {\\n        return method;\\n    }\\n\\n    public String getPath() {\\n        return path;\\n    }\\n\\n    public String getParameter(String key) {\\n        return params.get(key);\\n    }\\n\\n    public String getHeader(String key) {\\n        return header.get(key);\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HttpResponse\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class HttpResponse {\\n    private static final Logger log = LoggerFactory.getLogger(HttpResponse.class);\\n    private DataOutputStream dos;\\n    private Map<String, String> header = new HashMap<>();\\n\\n    public HttpResponse(OutputStream out) {\\n        dos = new DataOutputStream(out);\\n    }\\n\\n    public void forward(String path) throws IOException {\\n        byte[] body = Files.readAllBytes(new File(\\\"./webapp\\\" + path).toPath());\\n\\n        if (path.endsWith(\\\".css\\\")) {\\n            addHeader(\\\"Content-Type\\\", \\\"text/css;\\\");\\n        }\\n        if (path.endsWith(\\\".html\\\")) {\\n            addHeader(\\\"Content-Type\\\", \\\"text/html;charset=utf-8;\\\");\\n        }\\n        if (path.endsWith(\\\".js\\\")) {\\n            addHeader(\\\"Content-Type\\\", \\\"application/javascript;\\\");\\n        }\\n        addHeader(\\\"Content-Length\\\", body.length + \\\"\\\");\\n        response200Header();\\n        responseBody(body);\\n    }\\n    public void forwardBody(String body) {\\n        byte[] contents = body.getBytes();\\n        addHeader(\\\"Content-Type\\\", \\\"text/html;charset=utf-8;\\\");\\n        addHeader(\\\"Content-Length\\\", contents.length + \\\"\\\");\\n        response200Header();\\n        responseBody(contents);\\n    }\\n\\n    public void sendRedirect(String path) {\\n        try {\\n            dos.writeBytes(\\\"HTTP/1.1 302 Found \\\\\\\\r\\\\\\\\n\\\");\\n            processHeaders();\\n            dos.writeBytes(\\\"Location: <http://localhost:8080>\\\" + path + \\\"\\\\\\\\r\\\\\\\\n\\\");\\n            dos.writeBytes(\\\"\\\\\\\\r\\\\\\\\n\\\");\\n        } catch (IOException e) {\\n            log.error(e.getMessage());\\n        }\\n    }\\n\\n    public void addHeader(String key, String value) {\\n        header.put(key, value);\\n    }\\n\\n    private void response200Header() {\\n        try {\\n            dos.writeBytes(\\\"HTTP/1.1 200 OK \\\\\\\\r\\\\\\\\n\\\");\\n            processHeaders();\\n            dos.writeBytes(\\\"\\\\\\\\r\\\\\\\\n\\\");\\n        } catch (IOException e) {\\n            log.error(e.getMessage());\\n        }\\n    }\\n\\n    private void responseBody(byte[] body) {\\n        try {\\n            dos.write(body, 0, body.length);\\n            dos.flush();\\n        } catch (IOException e) {\\n            log.error(e.getMessage());\\n        }\\n    }\\n\\n    private void processHeaders() {\\n        try {\\n            for (Entry<String, String> keyValue : header.entrySet()) {\\n                dos.writeBytes(keyValue.getKey() + \\\": \\\" + keyValue.getValue() + \\\"\\\\\\\\r\\\\\\\\n\\\");\\n            }\\n        } catch (IOException io) {\\n            log.error(io.getMessage());\\n        }\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"고민 2. 너무 많은 분기문으로 복잡하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"URL에 따라서 응답을 다르게 해주면서 if 분기문이 많이 생겼다. 이런 분기문을 추상화를 통해 리팩토링하면 깔끔하게 처리 할 수 있다. Controller라는 인터페이스로 추상화한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Controller 인터페이스로 추상화\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\\n\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"language::java\\npublic interface Controller {\\n    void service(HttpRequest request, HttpResponse response);\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Controller를 구현하는 클래스들을 만든다. Controller 인터페이스를 그대로 상속받아 구현할 수도 있다. 하지만 안에서 GET과 POST 같은 HTTP 요청 메서드에 따라서 분기가 생긴다. 분기를 없애기 위해 Controller 인터페이스를 상속한 추상 클래스를 만들어 준다. 직접 구현 코드는 추상 클래스를 상속함으로써 요청 메서드에 따른 분기문을 해결 할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class AbstractController implements Controller{\\n    @Override\\n    public void service(HttpRequest request, HttpResponse response) {\\n        if (request.equalsMethod(\\\"GET\\\")) {\\n            doGet(request, response);\\n        }\\n        if (request.equalsMethod(\\\"POST\\\")) {\\n            doPost(request, response);\\n        }\\n\\n    }\\n    protected void doGet(HttpRequest request, HttpResponse response) {}\\n    protected void doPost(HttpRequest request, HttpResponse response) {}\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"RequestMapping 클래스에 Controller 연결 역할 위임\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"모든 URL과 Controller를 관리해주는 클래스를 추가한다. 요청 URL에 맞는 Controller를 반환하는 역할을 담당한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class RequestMapping {\\n    private static Map<String, Controller> controllers = new HashMap<>();\\n\\n    static {\\n        controllers.put(\\\"/user/create\\\", new CreateUserController());\\n        controllers.put(\\\"/user/login\\\", new LoginController());\\n        controllers.put(\\\"/user/list\\\", new ListUserController());\\n    }\\n\\n    public static Controller getController(String requestUrl) {\\n        return controllers.get(requestUrl);\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"리팩토링 결과\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"역할에 따른 클래스를 만든 후 run 메서드는 다음과 같이 깔끔해졌다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::java\\npublic class RequestHandler extends Thread {\\n    private static final Logger log = LoggerFactory.getLogger(RequestHandler.class);\\n\\n    private Socket connection;\\n\\n    public RequestHandler(Socket connectionSocket) {\\n        this.connection = connectionSocket;\\n    }\\n\\n    public void run() {\\n        log.debug(\\\"New Client Connect! Connected IP : {}, Port : {}\\\", connection.getInetAddress(),\\n                connection.getPort());\\n\\n        try (InputStream in = connection.getInputStream(); OutputStream out = connection.getOutputStream()) {\\n\\n            HttpRequest request = new HttpRequest(in);\\n            HttpResponse response = new HttpResponse(out);\\n\\n            Controller controller = RequestMapping.getController(request.getPath());\\n            if (controller == null) {\\n                String path = getDefaultPath(request.getPath());\\n                response.forward(path);\\n            } else {\\n                controller.service(request, response);\\n            }\\n\\n        } catch (IOException e) {\\n            log.error(e.getMessage());\\n        }\\n    }\\n\\n    private String getDefaultPath(String path) {\\n        if (path.equals(\\\"/\\\")) {\\n            return \\\"/index.html\\\";\\n        }\\n        return path;\\n    }\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마무리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"웹 서버를 직접 구현하고 리팩토링 했다. 이 과정을 통해 다음과 같은 한계가 드러났다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"간단한 요청, 응답을 처리하는데도 많은 시간이 걸렸다. 그래서 정작 중요한 비즈니스 로직을 작성할 시간이 빼앗겼다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"동적인 HTML을 지원하는 데 한계가 있다. 너무나 많은 코딩량을 필요로 하기 때문이다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자가 입력한 데이터가 영구적으로 적용되지 않는다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"여기서 앞선 두 한계는 서블릿 컨테이너와 서블릿/JSP로 해결이 가능하다. 다음엔 서블릿과 JSP를 이용해 웹 사이트 구현 해보고자 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"박재성, 자바 웹 프로그래밍 Next Step, 로드북, 2016\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"6sjKx5PLZ2Yssdvx256IN1","title":"서블릿/JSP 없는 실습환경","description":"전체적인 실습 환경 구조","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=194&h=121&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=387&h=241&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=774&h=482&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=774&h=482&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=194&h=121&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=387&h=241&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6sjKx5PLZ2Yssdvx256IN1/99a08466e380d3429db00cf73a15573b/___________2024-08-18______11.48.55.png?w=774&h=482&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":482},"__typename":"ContentfulAsset"}]}},{"title":"프로세스 동기화 및 도구들","category":["CS"],"slug":"process-synchronization-tools","date":"2024-08-18","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=125&h=52&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=250&h=104&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=500&h=207&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=1000&h=414&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=500&h=207&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=125&h=52&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=250&h=104&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=500&h=207&q=50&fm=png 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=1000&h=414&q=50&fm=png 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":207}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"CPU 등의 성능향상을 위해 거의 모든 프로세스와 스레드들이 병행,병렬 실행된다는 것을 알고 있다. 하지만 공유된 데이터를 동시에 접근하면 데이터의 일관성이 지켜지지 않을 수 있다. 이처럼 동시에 여러 개의 프로세스가 동일한 자료를 접근하여 조작하고, 그 실행 결과가 접근이 발생한 특정 순서에 의존하는 상황을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"경쟁 상황(race condition)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 이라고 한다. 이런 동기화 문제들을 해결하는 도구들과 관련된 개념들을 정리해보고자 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"임계구역 Critical Section\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스나 스레드가 공유 자원을 사용하는 경우, 동시에 해당 자원에 접근하면 문제가 발생할 수 있다. 이때, 문제가 발생할 가능성이 있는 코드 영역을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"임계구역(Critical section)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"임계구역 문제를 해결하기 위해서는 다음 세 가지 요구조건이 충족되어야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"상호 배제(Mutual exclusion)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\": 한 프로세스가 임계구역을 사용 중일 때, 다른 프로세스는 그 구역에 접근할 수 없어야 한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"진행(Progress)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\": 임계구역에 없는 프로세스가 임계구역에 들어가길 기다리고 있는 프로세스들 중 하나는 언젠가는 들어갈 수 있어야 한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"한정된 대기(Bounded waiting)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\": 임계구역에 들어가기 위해 대기하는 프로세스들은 유한 시간 안에 들어갈 수 있어야 한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Peterson의 해결안 (고전적인 소프트웨어적 해결방법)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Peterson의 해결안은 두 개의 프로세스가 공유 자원을 사용하는 경우, 서로 자원 사용 여부를 확인하고 일정 시간 동안 대기하도록 하는 방법입니다. 이를 위해 Peterson은 두 개의 변수 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"turn\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"과 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"flag\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"를 사용합니다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nwhile (true) {\\n  flag[i] = true;\\n  turn = j;\\n  while (flag[j] && turn == j);\\n  // critical section\\n  flag[i] = false;\\n  // remainder section\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\n\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Perterson의 문제점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그러나 Peterson의 해결안에는 상호 배제가 보장되지 않는 경우가 있다. 예를 들어, 두 개의 프로세스가 동시에 flag[i]와 flag[j]를 true로 설정하면, 두 프로세스 모두 임계 구역에 접근할 수 있게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nregister = count\\nregister = register + 1\\ncount = register\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"위 같이 count++ 라는 한 줄을 예로 들자면 3줄의 기계어로 나뉠 수 있다. 프로그래밍 언어적으로는 한 줄의 코드로 보이지만 기계어로는 여러줄의 코드로 구현되어 있다는 사실이다. 그렇다면 기계어를 수행하는 가운데 문맥 교환이 일어나게 되면 동기화 문제가 발생할 수 밖에 없다. 즉 원자성(atomic)이 안지켜진다는 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하드웨어적인 동기화 해결법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"동기화를 위한 하드웨어 지원은 몇 가지가 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"TestAndSet()\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\" 명령어: 하드웨어적으로 상호 배제를 지원하는 명령어다. 이 명령어는 변수를 하나 받아와서 그 변수의 값을 반환하면서 동시에 그 변수의 값을 true나 false로 바꿔준다. 따라서 이 명령어를 사용하면 변수의 값을 안전하게 바꿀 수 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Swap()\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\" 명령어: TestAndSet()과 비슷한 명령어로, 변수 두 개를 받아와서 두 변수의 값을 서로 바꿔준다. 이 명령어를 사용하면 두 변수의 값을 안전하게 바꿀 수 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"인터럽트 비활성화\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\": 인터럽트를 비활성화하면 현재 실행 중인 프로세스가 종료될 때까지 다른 프로세스가 실행되지 않는다. 이를 이용하여 상호 배제를 구현할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 응용 프로그래머가 하드웨어적인 동기화 해결법으로 해결하기엔 복잡하기에 사용할 수가 없다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"동기화 문제를 해결해줄 도구들\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"동기화 문제를 해결하기 위해선 임계 구역 문제를 해결해야한다. 물론 상호배제, 진행, 한정된 대기 3가지 모두 해결하면 완벽한 도구이지만 현실적으로 불가능에 가깝다. 그래서 가장 해결하기 쉬운 상호 배제 문제를 해결하는 방식들이 나왔고 뮤텍스(mutex), 세마포어(semaphores), 모니터(monitors)가 그 방식들이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Mutex locks\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1zQPo1DIoNOFyE2GwxTyEh\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 간단한 도구가 뮤텍스 락이다. 뮤텍스 락은 임계구역을 보호하기 위해 임계구역에 들어가기 전 반드시 락을 얻어야하고 임계구역을 빠져 나올 때 락을 반환해야한다. acqurie() 함수가 락을 획득하고 release() 함수가 락을 반환한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"뮤텍스 락은 available이라는 boolean 변수를 가지는데 해당 변수를 통해 락의 가용여부를 표시한다. 락이 가용하면 acquire() 호출을 한다음 바로 사용불가 상태로 바꿔준다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nacquire() {\\n\\twhile (!available); // busy wait\\n\\tavailable = false;\\n}\\nwhile (true) {\\n\\t// acquire lock\\n\\tcritical section\\n\\t// release lock\\n\\tremainder section\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Mutex locks의 문제점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"한 프로세스가 임계구역에 있는 동안 다른 프로세스들은 임계구역에 들어가기 위해 acquire() 함수를 계속 호출해야하는 현상을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"바쁜 대기(busy waiting)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 한다. 이러한 루프는 하나의 CPU 코어가 여러 프로세스에게 공유되는 실제 다중 프로그래밍 시스템에서 문제가 된다. 바쁜 대기는 다른 프로세스가 사용할 수 있는 CPU 주기를 낭비시킨다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Mutex locks == Spinlock\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"뮤텍스 락을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"스핀락(spinlock)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고도 부른다. 락을 사용할 수 있을때까지 프로세스가 회전을 하기 때문이다. 스핀락이라고 따로 명칭한 이유는 바쁜 대기의 장점도 존재하기 때문이다. 다중 코어에서는 한 프로세스가 락을 획득하고 있는 가운데 다른 프로세스나 스레드는 다른 CPU에서 바쁜 대기를 하고 있을 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"만일 하나의 CPU 코어만 있다면 다른 프로세스들은 대기 큐로 들어갔다가 락이 반환됐을 때 다시 준비 큐로 돌아가서 CPU를 점유해야한다. 이렇게 되면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"CPU → 대기 큐\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"로, \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"대기큐 → 준비큐\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"로 총 2번의 문맥교환이 일어나기 때문에 상당한 시간이 소요될 수 있는데 바쁜 대기는 이런 문제를 해결해줄 수 있다. 최신 다중 코어 컴퓨팅 시스템에서 스핀락은 많은 운영체제에서 쓰이고 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Semaphores\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"뮤텍스 락에서 더 정교해진 기법이 세마포어이다. 세마포어 S는 뮤텍스의 avaliable 변수와 달리 정수 변수다. 초기화를 제외하고는 wait()와 signal() 로만 접근이 가능하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::bash\\nwait(S) {\\n\\twhile (S <= 0); // busy wait\\n\\tS--;\\n}\\n\\nsignal(S) {\\n\\tS++;\\n}\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"세마포어는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"유한한 개수를 가진 자원에 대한 접근을 제어\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"하는 데 사용된다. 가용한 자원의 개수로 S를 초기화하며 각 자원을 사용하려는 프로세스는 세마포어에 wait() 연산으로 감소 시키고, 자원을 방출하면 signal() 연산으로 증가 시킨다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"여기서 가용한 자원이 하나라고 하면 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이진 세마포어\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"로 부르며 이는 뮤텍스 락과 유사하게 동작한다. 이외의 많은 자원들을 가지는 세마포어를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"카운팅 세마포어\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라고 부른다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Semaphores의 단점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"뮤텍스에서 다중처리에 용이하게 구현된 것이 세마포어이기에 뮤텍스의 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"바쁜대기\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 단점을 공유한다. 프로세스가 wait() 연산을 실행하고 세마포어 값이 양수가 아님을 확인하면 계속 대기해야한다.(wait() 안의 while 문)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그러나 바쁜 대기 대신 프로세스는 자신을 일시 중지 시킬 수 있다. 일시 중지 연산은 프로세스를 세마포어에 연관된 대기 큐에 넣고, 프로세스의 상태를 대기 상태로 전환한다. 그렇다면 제어가 CPU 스케쥴러에게 넘어가고, 바쁜 대기로써 생기는 시간 낭비 문제가 해결된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"또한 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"교착상태 (Deadlock)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 문제가 생길 수 있다. 세마포어가 준비큐를 가지고 있고, 둘 이상의 프로세스가 임계 구역 진입을 무한정 기다리고 있으면, 임계구역에서 실행되는 프로세스는 기다리고 있는 프로세스가 실행되어야만 빠져나올 수 있는 상황이 발생할 수 있기 때문이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Monitors\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"고급언어에서 사용되는 동기화 문제 해결 도구다. 결국 뮤텍스와 세마포어는 직접 lock을 얻고 반납하는 것을 설정해줘야하는데 모니터는 이러한 문제를 자동으로 처리해준다.(추상화된 데이터)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1zQPo1DIoNOFyE2GwxTyEh","title":"뮤택스","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=194&h=80&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=387&h=160&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=774&h=320&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=1548&h=640&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=774&h=320&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=194&h=80&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=387&h=160&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=774&h=320&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1zQPo1DIoNOFyE2GwxTyEh/759d2cad76dc2db217152635fe98bdde/___________2023-03-07______1.55.15.png?w=1548&h=640&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":320},"__typename":"ContentfulAsset"}]}},{"title":"유시민의 글쓰기 특강을 읽고","category":["Book"],"slug":"book-review-yusimin-writing-lecture","date":"2024-08-17","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=100&h=138&q=50&fm=webp 100w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=200&h=275&q=50&fm=webp 200w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=400&h=550&q=50&fm=webp 400w","sizes":"(min-width: 400px) 400px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=400&h=550&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=100&h=138&fl=progressive&q=50&fm=jpg 100w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=200&h=275&fl=progressive&q=50&fm=jpg 200w,\nhttps://images.ctfassets.net/w6wmczdusxy8/FxIpSpJ6dB5XWVqGTZ590/49ef168566f787036aee420909ece61f/_________________.jpg?w=400&h=550&fl=progressive&q=50&fm=jpg 400w","sizes":"(min-width: 400px) 400px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":688}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이번 블로그를 만든 후 욕심이 났다. 글을 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"‘잘’\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 쓰고 싶다는 욕심..! 그래서 이전부터 눈여겨 보던 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"유시민의 글쓰기 특강\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 책을 빌려 봤다. 느낀 점부터 먼저 말하자면 나의 갈증을 채워준 좋은 책이다. 글쓰기에 대한 마음가짐과 여러 기법이 실려있다. 그 중에서 내게 많은 깨달음과 도움을 준 것을 위주로 글로 정리했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"논리적이려면 지켜야하는 3가지\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"취향을 두고 논쟁하면 안된다\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"한마디로 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"취향 존중\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"을 해야 한다. 다른 사람의 취향을 가지고 가치를 판단하면 안된다는 말이다. 책에서는 귀고리와 피어싱에 관련된 예시를 들며 얘기했다. A란 사람이 피어싱을 10개 하고 왔다. B는 A의 모습을 보고 “저 피어싱 할 돈으로 어려운 사람을 도와줄 것이지” 하며 혀를 찼다. A는 미적 취향을 들어냈을 뿐이다. 하지만 B는 그 모습을 보고 도덕적 가치 판단을 했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"가치 판단을 하는 순간 그에 대한 근거를 댈 의무가 있다. 그저 B가 “나는 저렇게 피어싱한 사람은 싫더라”라고 취향을 들어냈다면 상관없다. 그저 B는 피어싱이 싫어하는 사람일 뿐이다. 하지만 도덕적 가치 판단을 함으로써 그 가치 판단에 관한 근거를 대야 한다. A가 “그렇다면 당신이 하고 있는 귀고리는 괜찮냐” 라고 반문했다 해보자. B는 반문할 수 없어진다. 왜냐하면 A의 주장이 아닌 취향에 대한 가치 판단을 했기 때문이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이렇게 다른사람에 피해가 가지 않는 취향에 대해 가치 판단을 하면 안된다. 그 가치 판단에 근거를 대야하기 때문이다. 또한 취향이기에 논리적으로 패할 수 밖에 없다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"주장은 반드시 논증해야 한다\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"말과 글로 다른 사람과 소통하려면 사실과 주장을 구별해야 한다. 사실은 사실 그대로 적으면 된다. 하지만 주장은 반드시 뒷받침 할 근거를 제시해 옳은 주장인 것을 논증해야 한다. 아니면 주장은 다른 사람에게 받아 들여지지 않는다. 예를 들어 어떤 개발자가 이렇게 말했다고 하자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"개발 블로그에 적합한 최고 플랫폼은 Github Pages다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이 말은 사실인가? 아니다. 형식은 사실을 기술한 것 같지만 사실이 아니다. 그렇다면 주장인가? 엄밀히 말하면 주장도 아니다. 단지 주관적 취향을 고백한 것 뿐이다. 단순히 취향을 고백하는 것이 아니라 무언가 주장하고 싶다면 주장에 어울리는 형식을 갖추어야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"나는 Github Pages가 개발 블로그에 적합한 최고 플랫폼이라고 생각한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이것은 주장이다. 따라서 논증해야 한다. 개발 블로그에 적합한 플랫폼 기준을 제시한다. 그리고 Github Pages가 다른 플랫폼보다 기준에 더 부합한다고 증명한다. 이렇게 되면 다른 사람은 동의하거나 반박할 수 있다. 기준 자체에 대해 이의제기하고 다른 기준을 제시하는 방법이 있다. 아니면 기준은 받아들이고 다른 플랫폼이 Github Pages보다 기준에 더 부합한다는 사실을 증명할 수도 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이런 반박도 논증이 있는 주장이기에 반박이 가능하다. 논증없는 주장은 근거를 밝히라고 요구만 할 수 있다. 반박을 할 수 없다. 주장은 반드시 논증해야 논리적이다. 논증도 논리적으로 타당한 주장인가 데이터로 검토해야 비로소 논리적인 글쓰기가 가능하다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"주제에 집중하라\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글 주제와 관련 없는 정보나 문제를 끌고 오면 안된다. 주제와 상관없는 다른 정보를 끼워 넣으면 글의 논리가 흐트러지고, 독자는 혼란에 빠질 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"예를들어 “코딩 교육의 중요성”이라는 주제로 글을 쓰고 있다고 가정해 보자. 이 글의 목적은 독자에게 코딩 교육이 왜 필요한지, 그 이점을 설명하는 것이다. 그런데 글을 쓰는 도중에 주제와 관련 없는 정보를 포함시킨다면 어떻게 될까?\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"코딩 교육은 현대 사회에서 필수적이다. 아이들이 어릴 때부터 코딩을 배우면 문제 해결 능력과 논리적 사고력이 향상된다. 요즘 아이들은 스마트폰 게임을 많이 즐긴다. 게임 중독은 아이들의 학습에 부정적인 영향을 미칠 수 있다. 따라서 게임 시간을 조절하는 것이 중요하다. 코딩 교육은 아이들이 창의력을 기르고, 미래의 직업 시장에서 경쟁력을 갖추는 데 큰 도움이 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"위의 문장에서는 “코딩 교육의 중요성”이라는 주제에서 벗어나 “게임 중독”이라는 다른 문제를 언급하고 있다. 이로 인해 글의 흐름이 끊기고, 독자는 글의 주제가 무엇인지 헷갈리게 된다. 주제에 집중하려면 불필요한 내용을 과감히 삭제해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"코딩 교육은 현대 사회에서 필수적이다. 아이들이 어릴 때부터 코딩을 배우면 문제 해결 능력과 논리적 사고력이 향상된다. 코딩 교육은 또한 아이들이 창의력을 기르고, 미래의 직업 시장에서 경쟁력을 갖추는 데 큰 도움이 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이렇게 수정된 예시는 주제에 집중하여 논리적으로 일관된 글을 유지하고 있다. 주제와 관련된 핵심 정보만을 제공함으로써 독자는 글의 내용을 명확하게 이해할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이와 같이 글을 쓸 때는 주제에서 벗어난 내용이 포함되지 않도록 주의하며, 주제에 집중하여 핵심적인 정보를 전달하는 것이 중요하다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글쓰기 철칙\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"발췌와 요약부터 시작하자\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글쓰기에는 비법이나 왕도가 없다 그래서 다들 비슷비슷한 이야기를 할 수 밖에 없다. 개발 관련으로 검색해 블로그글을 봐도 그렇다. 다들 비슷한 얘기를 비슷하게 풀어나가고 있다. 이런 글쓰기를 잘하려면 발췌와 요약부터 시작 해보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"발췌는 텍스트에서 중요한 부분을 가려 뽑아내는 것이다. 어떤 텍스트를 선택해서 글을 쓸 것인지 선택하는 거다. 요약은 텍스트의 핵심을 추려내는 것이다. 즉 글을 압축하는 것이다. 두 가지를 이용해야 하는 대표적인 예시가 이력서, 자기소개서다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이력서, 자기소개서 쓰기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이력서와 자기소개서는 자기 인생을 요약해야 하는 글이다. 자신이 어떤 사람이고 어떻게 살아왔으며 무엇을 잘하는지 알려주는 정보를 적어야 한다. 내 인생에서 중요하다 생각되는 부분을 발췌하고, 핵심만 추려 요약해야 하는 글이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그렇지만 이력서와 자기소개서 쓰는 방향은 다르다. 이력서는 사실만 적어야 한다. 그러나 어떤 사실을 적을지는 쓰는 사람이 아닌 읽는 사람이다. 지원하는 회사에서 필요로 하는 기술, 경력 등을 적어야 하기 때문이다. 자기소개서는 쓰는 사람이 원하는 대로 쓸 수 있다. 인생을 텍스트로 삼아 핵심을 요약하는 글이 자기소개서기 때문이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"자기소개서는 자기가 누구이며 어떻게 살았는지, 잘하는 게 무엇인며 어떻게 살고 싶은지를 적어야 한다. 그렇지만 아무렇게나 요약하면 안되고 목표를 의식하고 요약해야 한다. 각 기업마다 내세우는 회사 이념 같은 것을 기준으로 삼아서 말이다. 그렇게 요약한 부분의 객관적인 정보는 이력서와 부속서류(포트폴리오 같은)를 확인하게 하면 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"자기소개서를 받는 이유는 지원자의 인간적 특성을 알아보기 위해서다. 솔직, 정직, 성실, 긍정적, 창의성, 열정, 남을 배려, 인내심과 도전정신 같은 인간적 미덕을 가진 사람을 좋게 본다. 자기소개서를 작성하면서 내가 그런 사람이라고 상상하고 써야 한다. 그러기 위해서는 이력서에 적은 객관적 사실을 해석하고 자신의 장단점을 살펴야 한다. 또한 과거와 현재를 평가하고 미래를 설계해야 한다. 기업 입사원서를 내는 사람이라면 자신이 회사의 발전에 크게 기여할 수 있는 사람이라 믿고 그 근거를 제공하는 사실을 중심으로 인생을 요약해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글쓰기 철칙\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"잘 썼다고 하는 논리글은 쉽게 읽고 명확하게 이해할 수 있는 글이다. 또한 논리적으로 반박하거나 동의할 근거가 있다. 이런 논리글을 쓰려면 아래 네 가지를 유념해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"무슨 이야기를 하는지 주제가 분명해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그 주제를 다루는 데 꼭 필요한 사실과 중요한 정보를 담아야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그 사실과 정보 사이에 어떤 관계가 있는지 분명하게 나타나야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"주제와 정보와 논리를 적절한 어휘와 문장으로 표현해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글 잘쓰는 법은 결국 텍스트를 많이 읽고 꾸준히 글 쓰는 연습을 하는 방법밖에 없다. 그렇게 연습하다보면 아래와 같이 글 잘쓰는 능력이 길러질 것이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"텍스트 독해\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"텍스트 요약\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"사유와 토론\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"못난 글 피하기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"행복한 가정은 다 비슷하지만 불행한 가정은 저마다 이유가 다르다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"톨스토이의 소설, ‘안나 카레리나’의 첫문장이다. 이 말을 글에 빗대면 다음과 같이 바꿀 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"못난 글은 다 비슷하지만 훌륭한 글은 저마다 이유가 다르다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"blockquote\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"역설적이게도 훌륭한 글을 쓰려면 훌륭하게 쓰려고 하지말고 못나게 적는 것을 피해야 한다. 그렇다면 못난 글을 어떻게 가려낼 수 있을까?\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"못난 글 알아보기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"텍스트를 소리 내어 읽어보자. 소리 내어 읽기 어렵고, 귀로 듣기 안좋고, 뜻을 파악하기 힘들다면 잘못 쓴 글이다. 어려운 한문을 오남용 했는지 검토해보자. 또한 일본말이나 서양 말에 오염되지 않았는지도 확인해보자. 필요하지도 않은 어려운 단어나 외래어가 남용되는 것은 못난 글이다. 판별하는 방법은 책에 자세히 기술 되어 있어 넘어 가겠다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"단문 쓰기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"글은 단문이 좋다. 문장이 길어도 주어와 술어가 하나씩만 있으면 단문이다. 주어와 술어가 둘이 넘는 문장을 복문이라고 한다. 단문은 뜻을 분명하게 전하는데 편리하다. 게다가 복문보다 쓰기가 편하다. 하지만 복문은 읽다가 문장이 무엇을 말하는지 잃을 때가 종종 있다. 읽기 편하지 않다는 말이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"거시기 화법\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"단문 쓰기만큼 중요한 것 어휘 선택이다. 문맥에 꼭 맞는 단어를 써야 한다. 이것이 곧 어휘력이다. 포괄적인 거시기, 그거란 지칭단어만을 가지고 문장을 만들면 이해하기 어렵다. 같은 포괄적인 단어만 사용해서 설명하는 것은 어휘가 적어서 그렇다. 적절한 어휘를 넣어서 문장을 쓰는 연습을 해야 한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"마무리\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"어떤 책을 독서해야하는지, 독해력을 기르기 위해선 어떻게 해야하는지 등 다양한 정보를 다 담아내진 못했다. 더 궁금한 부분이 있다면 유시민의 글쓰기 특강 책을 읽어 보시는 것을 권한다. 이 글에선 내게 더 와닿고 공감되는 글을 내 방식으로 정리했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"이 책을 읽으면서 내가 썼던 글을 돌아 볼 수 있었고, 앞으로 어떻게 글을 써갈지 방향을 제시 해준 거 같아 좋은 책이라 느껴졌다. 단문으로 글 작성, 불필요한 글은 없는지 검토하는 부분은 당장 내 삶에 적용해 보기로 했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[]}},{"title":"CPU 스케쥴링 정리","category":["CS"],"slug":"cpu-scheduling","date":"2024-08-12","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1a7UK20ufCma4qD0C71yLG/a526e0804bd76638cbec01cab9901d49/what-is-cpu-scheduling.webp?w=125&h=69&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1a7UK20ufCma4qD0C71yLG/a526e0804bd76638cbec01cab9901d49/what-is-cpu-scheduling.webp?w=250&h=138&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1a7UK20ufCma4qD0C71yLG/a526e0804bd76638cbec01cab9901d49/what-is-cpu-scheduling.webp?w=500&h=275&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1a7UK20ufCma4qD0C71yLG/a526e0804bd76638cbec01cab9901d49/what-is-cpu-scheduling.webp?w=1000&h=550&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}]},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":275}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 스케쥴링\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 스케쥴링은 멀티태스킹 환경에서 여러 프로세스들이 CPU를 사용하는 방식을 관리하는 것이다. 다양한 알고리즘들이 존재하며 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"준비 큐(Ready Queue)에서 대기하는 프로세스들을 대상\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"으로 진행된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"스케쥴링 기준\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그렇다면 효율적인 스케쥴링 알고리즘을 선택하는 기준은 무엇일까? 아래 기준들을 고려하며 선택한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 이용률 (utilization)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"처리량 (throughput)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"⭐️ 총처리 시간 (turnaround time) \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"대기시간을 포함한 I/O 시간, CPU 실행 시간을 합친 모든 시간\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"⭐️ 대기 시간 (waiting time) \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"준비 큐에서 대기한 총시간\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"응답 시간 (response time)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 이용률과 처리량이 최대이고 시간들을 줄일 수 있다면 최적의 알고리즘이겠지만 보통 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"총처리 시간\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 과 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"대기 시간\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 을 얼마나 줄일 수 있는지에 대해 고민한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 스케쥴링 알고리즘 종류\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"FCFS(First - Come - First - Served)\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"개념\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"FCFS (First-Come-First-Serve) 스케쥴링 알고리즘은 도착한 순서대로 프로세스를 실행하는 가장 기본적인 알고리즘이다. 즉, 먼저 도착한 프로세스가 먼저 실행된다. 이 알고리즘은 구현이 간단하고 공정한 스케쥴링이 가능하다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"문제점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"호의 효과 (convoy effect)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"실행 시간이 긴 프로세스가 먼저 도착하면 대기 시간이 길어지는 문제가 있습니다. 이를 해결하기 위해 SJF 스케쥴링 알고리즘 등이 개발됐다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"SJF(Shortest - Job - First)\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"개념\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Shortest-Job-First (SJF) 스케쥴링 알고리즘은 실행 시간(CPU burst)이 가장 짧은 프로세스를 먼저 실행하는 방식이다. 앞선 convoy effect를 완전히 해소 시킬 수 있는 알고리즘이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"문제점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"실행 시간을 미리 알 수 없는 상황에서는 사용이 어렵다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"프로세스들의 실행 시간을 미리 정확하게 예측하는 방법이 불가능하기에 사용이 어렵다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"starvation\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"SJF는 극단적으로 CPU 사용이 짧은 job을 선호하기에 사용시간이 긴 프로세스는 거의 영원히 CPU를 할당받을 수 없는 문제가 생긴다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"해결책\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"다음 CPU burst 시간 근사값 추정\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"일반적으로 측정된 이전의 CPU 버스트들의 길이를 지수 평균한 것으로 예측한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"RR이나 다른 알고리즘을 활용해 모든 프로세스가 CPU에 할당할 수 있도록 해준다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"선점형 스케쥴링 vs 비선점형 스케쥴링 (preemptive vs Non-preemptive)\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"여태까지 설명한 스케쥴링은 비선점형 스케쥴링이다. CPU 스케쥴링엔 크게 두가지 유형인 선점형과 비선점형이 존재한다. 아래는 각각의 개념을 적어봤다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"선점형 스케쥴링\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" \\n현재 실행 중인 프로세스를 중단시키고, 다른 프로세스가 CPU를 사용할 수 있도록 하는 방식이다. 선점형 스케쥴링 알고리즘에는 Round Robin, Priority-based Scheduling 등이 있습니다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"비선점형 스케쥴링\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"현재 실행 중인 프로세스가 종료되거나 입출력 등의 이유로 대기 상태로 들어갈 때까지 CPU를 계속 사용한다. 비선점형 스케쥴링 알고리즘에는 First-Come-First-Serve, Shortest-Job-First 등이 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"SRTF (Shortest Remaining Time First)\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"개념\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"SRTF는 실행중인 프로세스 중에 남은 실행 시간이 가장 짧은 프로세스를 먼저 실행하는 선점형 스케줄링 알고리즘이다. 프로세스의 도착 시간, 실행 시간, 남은 실행 시간을 고려하여 다음 실행할 프로세스를 결정한다. 만약 실행 중인 프로세스보다 더 짧은 실행 시간을 가진 새로운 프로세스가 도착하면, 실행 중인 프로세스를 중단하고 새로운 프로세스를 실행한다. SRTF는 SJF 알고리즘의 선점형 버전이라고 생각할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"문제점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"starvation\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"SRTF도 마찬가지로 SJF와 같은 문제점을 공유한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"CPU 사용시간(CPU burst time)을 측정할 수 없다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"새로운 프로세스가 올 때마다 스케쥴링을 다시하기 때문이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Round Robin\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"개념\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Round Robin은 각 프로세스에 일정한 시간할당량(time quantum)이 순환적으로 할당되는 선점형 스케줄링 알고리즘이며 가장 현대적인 스케쥴링 기법이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"특징\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"각 프로세스는 정해진 시간할당량만큼 CPU를 사용할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"시간 안에 다 끝내지 못한 프로세스는 ready queue의 제일 뒤에서 다시 대기한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"CPU 사용시간이 랜덤한 프로세스들이 있을 때 효율적이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"RR이 가능한 이유는 프로세스의 context를 save할 수 있기 때문이다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"장점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"Response time\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"이 빨라진다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"준비 큐에 n개의 프로세스가 있고 시간 할당량 q이면, 각 프로세스는 최대 q 시간 단위로 CPU시간을 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"italic\"}],\"value\":\"1 / n\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 을 얻는다. 각 프로세스는 자신의 다음 시간 할당량이 할당될 때까지 (n-1) X q 시간 이상을 기다리지 않는다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"프로세스가 기다리는 시간이 CPU를 사용할 만큼 증가한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"주의할 점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"적당한 시간 할당량 크기 설정을 해줘야한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"시간 할당량을 너무 크게 설정할 시에 FCFS와 같은 성능이 나오게 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그렇다고 시간할당량을 너무 작게 줄시에 Context Switch가 많이 일어나서 overhead가 발생하며 오히려 성능이 더 낮아진다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"우선순위 기반 스케쥴링 (Priority - based Scheduling)\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"개념\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"우선순위 기반 스케줄링은 각 프로세스에 우선순위를 할당하여 우선순위가 높은 프로세스가 먼저 실행되도록 하는 방식이다. 이 우선순위는 프로세스의 중요도, 긴급성, 처리 시간 등에 따라 결정된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"예를 들어, 우선순위가 높은 프로세스는 CPU를 먼저 할당받으며, 우선순위가 낮은 프로세스는 CPU를 할당받기까지 대기해야 한다. 이 알고리즘은 시스템의 응답 시간을 빠르게 하기 위해 사용할 수 있으며, 실시간 시스템에서도 사용될 수 있습니다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"특징\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"선점형 스케쥴링 방식\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"더 높은 우선순위의 프로세스가 도착하면 실행중인 프로세스를 멈추고 CPU 를 선점한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"비선점형 스케쥴링 방식\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"더 높은 우선순위의 프로세스가 도착하면 Ready Queue 의 Head 에 넣는다.****\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"문제점\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"starvation\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"무기한 봉쇄(Indefinite blocking)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"실행 준비는 되어있으나 CPU 를 사용못하는 프로세스를 CPU 가 무기한 대기하는 상태\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"해결책\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"aging\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"아무리 우선순위가 낮은 프로세스라도 오래 기다리면 우선순위를 높여준다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"참고 자료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[]}},{"title":"프로세스와 스레드의 차이","category":["CS"],"slug":"process-thread-different","date":"2024-08-11","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=125&h=50&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=250&h=100&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=500&h=200&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=500&h=200&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=125&h=50&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=250&h=100&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=500&h=200&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":200}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스는 실행 중인 프로그램을 말한다. 각각의 프로세스는 독립적으로 실행되며, 다른 프로세스의 영향을 받지 않는다. 각 프로세스는 운영체제로부터 자신만의 주소 공간, 메모리, 파일 등을 할당받는다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스 상태\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1m37MdzsJTg08tEZCeGeXr\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"new: 프로세스 생성\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"running: 명령어들이 실행\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"waiting: 프로세스가 어떤 이벤트(예를들어 입출력)가 일어나기 기다림\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ready: 프로세스가 CPU에 할당되기전 대기\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"terminated: 프로세스의 실행이 종료\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스 제어 블록(PCB)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스 제어 블록(Process Control Block, PCB)은 운영체제가 각각의 프로세스를 관리하기 위해 정보를 저장하는 자료구조다. PCB는 프로세스의 상태, 프로세스가 사용하는 자원, 프로세스의 우선순위 등의 정보를 저장하고 있다. 이런 프로세스의 정보들을 이용해 문맥교환(Context switch)같은 작업을 수행한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"문맥교환(Context Switch)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"문맥교환(Context Switch)은 운영체제가 여러 프로세스를 동시에 실행하도록 하는 매커니즘이다. 각 프로세스는 독립적으로 실행되기 때문에, CPU가 어떤 프로세스에게 할당될지 결정하는 작업이 필요하다. 이때, 현재 실행 중인 프로세스의 상태를 저장하고, 다음 실행될 프로세스의 상태를 불러와 실행하는 작업을 문맥교환(Context Switch)이라고 한다. 이때, 프로세스 제어 블록(Process Control Block, PCB)에 저장되어 있는 정보를 사용하여 상태를 저장하고 불러온다. 이 작업은 CPU의 시간을 많이 소모하는 작업이므로, 문맥교환이 빈번하게 일어나면 시스템 성능이 저하될 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드(threads)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드는 프로세스 내에서 실행되는 실행 흐름 단위다. 즉, 프로세스 내에서 동작하는 여러 개의 스레드가 존재하면, 각각의 스레드는 독립적으로 실행된다. 스레드는 프로세스 내에서 생성된 모든 스레드가 동일한 메모리 주소 공간을 공유하기 때문에, 프로세스 내에서 자원을 공유하여 효율적인 처리가 가능하다. 이러한 특징으로 인해, 스레드는 프로세스에 비해 경량화되어 있으며, 병렬 처리에 활용된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 스레드, 커널 스레드\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 스레드(User Thread)와 커널 스레드(Kernel Thread)는 스레드의 실행 방법에 따라 구분된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자 스레드: 사용자 수준에서 스레드를 관리하는 방식으로, 스레드 라이브러리에서 관리된다. 운영체제는 사용자 스레드를 인식하지 못하고, 스케줄링 대상이 아니므로, 스레드 생성 및 관리에 대한 비용이 적다. 하지만, 스레드 블로킹(blocking)이 발생하면, 해당 프로세스 내의 모든 스레드가 블로킹 상태가 되어, 전체적인 성능이 저하될 수 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"커널 스레드: 운영체제 수준에서 스레드를 관리하는 방식으로, 커널에서 직접 스케줄링 대상으로 인식된다. 따라서, 스레드 생성 및 관리에 대한 비용이 높고, 스레드 블로킹이 발생하더라도, 다른 스레드는 정상적으로 실행될 수 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스와 스레드의 차이점\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로세스는 독립적으로 실행되는 반면, 스레드는 프로세스 내에서 실행된다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"각각의 프로세스는 자신만의 주소 공간, 메모리, 파일 등을 가지고 있지만, 스레드는 프로세스 내에서 자원을 공유한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"스레드는 프로세스 내에서 생성된 모든 스레드가 동일한 메모리 주소 공간을 공유한다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"운영체제 Operating System Concepts 10판(퍼스트북, 2020)\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1m37MdzsJTg08tEZCeGeXr","title":"프로세스 주기","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=163&h=65&q=50&fm=webp 163w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=325&h=130&q=50&fm=webp 325w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=650&h=260&q=50&fm=webp 650w","sizes":"(min-width: 650px) 650px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=650&h=260&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=163&h=65&q=50&fm=png 163w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=325&h=130&q=50&fm=png 325w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1m37MdzsJTg08tEZCeGeXr/1128d436d318571f12077a0c102b0a7e/____________.png?w=650&h=260&q=50&fm=png 650w","sizes":"(min-width: 650px) 650px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":310},"__typename":"ContentfulAsset"}]}},{"title":"HTTP 통신과 데이터 구조","category":["Web"],"slug":"http-structure","date":"2024-08-05","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=125&h=45&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=250&h=90&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=500&h=180&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=500&h=180&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=125&h=45&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=250&h=90&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=500&h=180&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":180}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 통신\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"웹프로그램은 대부분 HTTP 통신 통해 데이터를 주고 받는다. 이렇게 HTTP 통신을 하자고 하면 통신 규약이 있어야 하는데 그것을 프로토콜, 즉 HTTP 통신 프로토콜이라고 부른다. 여러 규약 중 요청(Request), 응답(Response) 데이터를 어떤 구조로 통신을 하는지 알아보자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"InputStream & OutputStream\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5IbAECofd2cDlX4SXu4OjD\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 HTTP 요청/응답 데이터 구조를 알아보기 전에 클라이언트와 서버 사이에 일어나는 통신은 어떤 데이터 형태로 주고 받는지 알면 더 좋을 것 같아 먼저 짚고 넘어가고자 한다. 웹서버는 브라우저에서 오는 데이터를 Stream으로 변환해서 주고 받는다. 이때 브라우저에서 요청하는 데이터는 InputStream 형태로 받고 내보낼때는 OutputStream 형태로 변환해서 처리한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 요청 데이터 구조\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"7bD7EIqP2YZJZxS6BfptqQ\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 InputStream으로 받는 HTTP 요청 데이터는 위의 그림과 같이 구성되어있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청 라인 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청 라인은 HTTP 메서드, 경로(url), http 버전으로 구성 되어있다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청 헤더 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청에 대한 추가 정보들을 담는 공간이다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 공백 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"헤더와 본문을 구분하기 위한 공백열이다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요청 본문 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"POST 또는 PUT 요청과 함께 전송되는 데이터이며 선택적이다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"HTTP 응답 데이터 구조\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"5VnxhDUgL0NoLkVLTeKHff\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"OutputStream으로 내보내는 HTTP 응답 데이터도 요청 데이터와 마찬가지인 구조를 갖지만 응답 라인의 구조가 살짝 다르다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답 라인 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답 라인은 http 버전, 상태코드, 상태 메시지로 구성 되어있다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답 헤더 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답에 대한 추가 정보를 담는 공간이다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"빈 공백 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"헤더와 본문을 구분하기 위한 공백열이다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답 본문 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"응답으로 전송되는 데이터이다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"여기 예시로는 Hello World가 표시되는 html 파일을 담아서 보내준다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"박재성, 자바 웹 프로그래밍 Next Step, 로드북, 2016\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"5IbAECofd2cDlX4SXu4OjD","title":"In & OutStream","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=163&h=169&q=50&fm=webp 163w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=325&h=336&q=50&fm=webp 325w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=650&h=673&q=50&fm=webp 650w","sizes":"(min-width: 650px) 650px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=650&h=673&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=163&h=169&q=50&fm=png 163w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=325&h=336&q=50&fm=png 325w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5IbAECofd2cDlX4SXu4OjD/bb88143e9889a7741880fc5c33f61f2b/___________2023-06-08______2.15.23.png?w=650&h=673&q=50&fm=png 650w","sizes":"(min-width: 650px) 650px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":801},"__typename":"ContentfulAsset"},{"contentful_id":"7bD7EIqP2YZJZxS6BfptqQ","title":"Http Request 구조","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=175&h=63&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=350&h=126&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=700&h=252&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=700&h=252&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=175&h=63&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=350&h=126&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7bD7EIqP2YZJZxS6BfptqQ/5bce60777d2ef180da03d2ba5be74df3/___________2023-06-06______2.23.53.png?w=700&h=252&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":279},"__typename":"ContentfulAsset"},{"contentful_id":"5VnxhDUgL0NoLkVLTeKHff","title":"Http Response 구조","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=194&h=56&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=387&h=112&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=774&h=224&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=1548&h=448&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=774&h=224&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=194&h=56&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=387&h=112&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=774&h=224&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5VnxhDUgL0NoLkVLTeKHff/f3bfde72910e8aeaf78f9756b2f9128c/___________2023-06-06______2.28.40.png?w=1548&h=448&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":224},"__typename":"ContentfulAsset"}]}},{"title":"SSH로 GCP 원격 서버 접속하기","category":["Cloud"],"slug":"ssh-gcp","date":"2024-08-04","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/70fBgB9Z4716SAwvZjzBg2/7bc7af243aba762c377ef979241b91a2/SSH_Illustration.png?w=125&h=125&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/70fBgB9Z4716SAwvZjzBg2/7bc7af243aba762c377ef979241b91a2/SSH_Illustration.png?w=250&h=250&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/70fBgB9Z4716SAwvZjzBg2/7bc7af243aba762c377ef979241b91a2/SSH_Illustration.png?w=500&h=500&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/70fBgB9Z4716SAwvZjzBg2/7bc7af243aba762c377ef979241b91a2/SSH_Illustration.png?w=1000&h=1000&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}]},"layout":"constrained","backgroundColor":"#b8d8b8","width":500,"height":500}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클라우드에서 가상 머신(VM)을 만들면 그 원격지에 있는 서버에 접근해 사용해야 한다. 요즘은 예전에 주로 사용되던 텔넷(Telnet)을 대체해 SSH 통신방법을 이용한다. SSH가 무엇인지, SSH를 통해 원격 서버에 어떻게 접속이 가능한지 정리했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH란?\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"S\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ecure \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"SH\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ell의 줄임말로 원격지에 있는 컴퓨터를 안전하게 제어하기 위한 프로토콜 또는 그 프로토콜을 사용하는 응용 프로그램을 뜻한다. 기본적으로 22번 포트를 통해 통신한다. 암호화 방법으로 통신하기 때문에 이전 텔넷이 가지고 있던 보안 취약점을 해결했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH 클라이언트\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"리눅스와 Mac 같은 유닉스(Unix) 계열의 운영체제는 기본적으로 SSH 클라이언트가 설치되어 있기에 SSH를 그냥 사용할 수 있다. 윈도우 운영체제는 윈도우 10과 윈도우 서버 2019 이후 버전부터 Power Shell과 OpenSSH를 지원한다. 하지만 그 이전 버전은 SSH가 지원되지 않아 SSH 클라이언트를 따로 설치해야한다. 대표적으로 윈도우에서 설치해 사용하는 SSH 클라이언트는 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"PuTTY\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"xShell\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH 서버\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"유닉스 계열의 운영체제는 OpenSSH를 가장 많이 사용된다. OpenSSH는 SSH 클라이언트와 서버가 포함되어있다. 대체로 유닉스 계열의 운영체제는 이미 설치가 되어있어 SSH를 위해 할 것은 없다. 윈도우 운영체제는 앞선 클라이언트와 마찬가지로 윈도우 10과 윈도우 서버 2019 이후 버전부터 OpenSSH가 기본으로 지원된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH로 GCP 원격 서버 접속 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH는 암호화 방법으로 클라이언트와 서버 간 통신한다. 따라서 서로가 안전한지 인증할 수 있어야 한다. 이때 인증을 키(Key)를 통해서 진행한다. GCP 원격 서버에 접속하기 위해 다양한 방법이 있다. 하지만 암호화 키를 생성해 GCP 원격 서버에 등록한 뒤 접속하는 과정은 동일하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Google Cloud 콘솔로 접속\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6G1dwHp9MJ14WkSfqDrB9k\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"VM 인스턴스 페이지에 접속해 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"SSH\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"을 누르면 접속이 가능하다. GCP가 자동으로 키를 생성해 인증해주기 때문에 다른 설정은 필요 없다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"gcloud CLI로 접속\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 아래와 같이 상단의 Cloud Shell 버튼을 누른다. \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1tn2KwfgCUHha6jjyvbbwY\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cloud Shell은 이미 gcloud CLI이 설치되어 있어 바로 명령어 사용이 가능하다. 로컬 환경에서 접속하려면 gcloud CLI를 따로 설치한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"아래 명령어를 실행시킨다. 각 옵션은 아래 조건에 맞게 작성한다. \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\ngcloud compute ssh --project=[프로젝트 ID] --zone=[영역] [인스턴스 이름]\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로젝트 ID \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"접속하고자 하는 인스턴스가 포함된 프로젝트의 ID\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"영역 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"접속하고자 하는 인스턴스가 속한 영역\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"인스턴스 이름 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"접속하고자 하는 인스턴스의 이름\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"프로젝트 ID와 영역은 환경변수로 설정하면 따로 작성할 필요없이 인스턴스 이름만으로도 접속이 가능하다. 나에게 맞는 조건을 작성한 예시는 다음과 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\ngcloud compute ssh --project=steel-aria-343404 --zone=us-central1-a instance-1\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"7zRtbTkbnYS7Km4KeIa0vs\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Google Cloud에 명령어를 처음 실행시키면 SSH 키를 만들 것인지 질문한다. 앞선 콘솔과는 달리 SSH 키를 수동으로 만들어야 한다. SSH 키를 생성한다고 입력하고 비밀번호를 설정해주면 원격 서버와 연결된다. 비밀번호는 공란도 가능하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"로컬에서 접속\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ssh-keygen 프로그램을 이용해서 SSH 키를 만든다. 해당 로컬은 Mac, 즉 유닉스 계열에서 키를 생성하는 방법이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"SSH 키 생성하기\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\nssh-keygen -t rsa -f ~/.ssh/[키 파일명] -C [사용자 이름]\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 암호화 키를 생성한다. SSH 키를 암호화할 방법(rsa), 생성될 키 파일명, 인스턴스 접속시 사용되는 사용자 이름을 설정해준다. 이때 키 파일명을 지정해주지 않으면 다른 SSH 키가 중복될 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3yhgDBScIzllU4RIWziGUT\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"passphrase 를 입력한다. passphrase는 일종의 비밀번호로 비공개키를 입력한 값으로 암호화한다. 권장 값은 10~30 문자이고 생략 가능하다. 자동 로그인을 원한다면 생략해야 한다. \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ls -al ~/.ssh/\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 명령어로 SSH 키가 잘 생성 됐는지 확인이 가능하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6zjtAwUZIaSnsgSstDXo8O\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"생성된 공개키를 GCP 원격 서버에 등록\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1By9QA8Yw8phoRtnJO4rAZ\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"앞선 공개키 파일의 내용을 복사해 인스턴스 세부정보 페이지에 추가한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"터미널에서 원격 서버 접속\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"language::shell\\nssh -i [비공개키 파일 경로] [사용자 이름]@[외부 IP 주소]\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"명령어를 입력하면 ssh 접속이 되는 것을 확인할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 자료\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://opentutorials.org/module/432/3738\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"https://opentutorials.org/module/432/3738\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://cloud.google.com/compute/docs/instances?hl=ko\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"https://cloud.google.com/compute/docs/instances?hl=ko\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://cloud.google.com/compute/docs/connect/standard-ssh?hl=ko\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"https://cloud.google.com/compute/docs/connect/standard-ssh?hl=ko\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://medium.com/google-cloud-apac/gcp-ssh-%EB%A1%9C-gce-vm-%EC%A0%91%EC%86%8D%EB%B0%A9%EB%B2%95-%EC%A2%80-%EB%8D%94-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-cb37dce39f87\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"https://medium.com/google-cloud-apac/gcp-ssh-로-gce-vm-접속방법-좀-더-알아보기-cb37dce39f87\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://wildeveloperetrain.tistory.com/169\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"https://wildeveloperetrain.tistory.com/169\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"6G1dwHp9MJ14WkSfqDrB9k","title":"브라우저 콘솔 로그인","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=194&h=29&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=387&h=58&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=774&h=115&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=1548&h=230&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=774&h=115&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=194&h=29&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=387&h=58&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=774&h=115&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6G1dwHp9MJ14WkSfqDrB9k/510336b1e6924b644f943111f4f90a93/___________2024-08-04_______8.10.11.png?w=1548&h=230&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":115},"__typename":"ContentfulAsset"},{"contentful_id":"1tn2KwfgCUHha6jjyvbbwY","title":"클라우드 셸 클릭","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=194&h=39&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=387&h=79&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=774&h=157&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=1548&h=314&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=774&h=157&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=194&h=39&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=387&h=79&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=774&h=157&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1tn2KwfgCUHha6jjyvbbwY/bea506a35559515ef42e694ae8dd616c/shell.png?w=1548&h=314&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":157},"__typename":"ContentfulAsset"},{"contentful_id":"7zRtbTkbnYS7Km4KeIa0vs","title":"ssh 명령어 입력","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=175&h=52&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=350&h=103&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=700&h=206&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=700&h=206&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=175&h=52&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=350&h=103&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7zRtbTkbnYS7Km4KeIa0vs/89d71d0ef749c23032a9ae15551a0b0b/___________2024-08-04_______9.53.59.png?w=700&h=206&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#282828","width":774,"height":228},"__typename":"ContentfulAsset"},{"contentful_id":"3yhgDBScIzllU4RIWziGUT","title":"ssh-keygen","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=175&h=15&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=350&h=30&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=700&h=61&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=700&h=61&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=175&h=15&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=350&h=30&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3yhgDBScIzllU4RIWziGUT/5dce4e2b6c5b84534bcbe2b1bb21c6c6/___________2024-08-04_______10.58.08.png?w=700&h=61&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":67},"__typename":"ContentfulAsset"},{"contentful_id":"6zjtAwUZIaSnsgSstDXo8O","title":"ssh 권한 확인","description":"각 파일의 권한을 잘 설정해야 한다.","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=175&h=38&q=50&fm=webp 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=350&h=76&q=50&fm=webp 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=700&h=153&q=50&fm=webp 700w","sizes":"(min-width: 700px) 700px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=700&h=153&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=175&h=38&q=50&fm=png 175w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=350&h=76&q=50&fm=png 350w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6zjtAwUZIaSnsgSstDXo8O/93458e74dd93aedaecad986a8fdf7aa8/___________2024-08-04_______11.13.05.png?w=700&h=153&q=50&fm=png 700w","sizes":"(min-width: 700px) 700px, 100vw"}},"layout":"constrained","backgroundColor":"#081818","width":774,"height":169},"__typename":"ContentfulAsset"},{"contentful_id":"1By9QA8Yw8phoRtnJO4rAZ","title":"ssh 키 추가","description":"VM 인스턴스 설정에서 SSH public key 등록","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=194&h=63&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=387&h=125&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=774&h=250&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=774&h=250&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=194&h=63&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=387&h=125&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1By9QA8Yw8phoRtnJO4rAZ/a122e559f1ac8c6873dbe4af8085a3d7/___________2024-08-04______2.56.39.png?w=774&h=250&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":250},"__typename":"ContentfulAsset"}]}},{"title":"DispatcherServlet 사용하기","category":["Web"],"slug":"dispatcher-servlet","date":"2024-08-04","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=125&h=82&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=250&h=163&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=500&h=326&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=500&h=326&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=125&h=82&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=250&h=163&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=500&h=326&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":326}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"DispatcherServlet이 없다면\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"6LtrbOrHUQO43hWgAVCCIQ\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"여러 상황(로그인, 유저 목록 조회 등)을 처리하기 위해서 각각의 상황에 맞는 컨트롤러(서블릿)가 필요하다. 새로운 상황이 생기면 또 다른 컨트롤러를 생성해야한다. 이렇게 많아지는 컨트롤러를 관리하는데 불편함이 생기진 않을까 하는 의문이 들기 시작한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"불편함이 발생\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"컨트롤러들은 일반적인 애플리케이션이 하는 작업들을 하고 있다. 이런 공통된 애플리케이션 로직들이 각 컨트롤러마다 존재하게 됨으로써 코드의 중복이 발생한다. 코드의 중복은 결국 유지-보수가 힘들어진다는 뜻이다. 이를 해결할 방안으로 DispatcherServlet(디스페처 서블릿)이 등장했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"DispatcherServlet이란\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Dispatch를 직역하면 ‘보내다’라는 뜻이다. 그렇다면 무엇을 보낸다는걸까? 디스페처 서블릿은 클라이언트에서 들어오는 모든 HTTP 요청들을 적절한 서블릿으로 보내고 처리된 반환값을 클라이언트로 보내준다. 즉, 디스페처 서블릿은 웹 애플리케이션의 전체 흐름을 조정하고, 요청-응답 라이프사이클을 관리한다. Front Controller 패턴이라고도 볼 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"DispatcherServlet 동작 과정\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"1jCBuQAGAwoK2gAVhL7Pcr\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"DispatcherServlet과 HandlerMapping\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"처음 디스페처 서블릿을 구현할때 이런 의문이 들었다. HandlerMapping(핸들러 매핑)이랑 차이점이 무엇인지 구분이 안되었기 때문이다. 디스페처 서블릿 내부적으로 컨트롤러 매핑을 관리하는 것이라 생각을 했다. 하지만 객체지향적인 관점으로 따로 클래스를 분리했구나 라고 이해하며 넘어갔다. 클래스 다이어그램을 그려보면서 각 클래스의 연관관계를 표현했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"클래스 다이어그램\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"3UPDVmGgAKwtKh7kNZtQwC\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"참고 자료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"헤드 퍼스트 서블릿, JSP, 2005\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://mangkyu.tistory.com/18\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"https://mangkyu.tistory.com/18\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[{"contentful_id":"6LtrbOrHUQO43hWgAVCCIQ","title":"DispatcherServlet","description":"페이지가 많아짐으로써 컨트롤러도 많이 필요해진다.","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=192&h=61&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=384&h=121&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=768&h=242&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=768&h=242&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=192&h=61&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=384&h=121&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6LtrbOrHUQO43hWgAVCCIQ/553650a9931a5a22555ac7255af95bb7/___________2023-08-10______1.44.40.png?w=768&h=242&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":244},"__typename":"ContentfulAsset"},{"contentful_id":"1jCBuQAGAwoK2gAVhL7Pcr","title":"디스패치 서블릿 전체","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=192&h=125&q=50&fm=webp 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=384&h=251&q=50&fm=webp 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=768&h=501&q=50&fm=webp 768w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=768&h=501&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=192&h=125&q=50&fm=png 192w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=384&h=251&q=50&fm=png 384w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1jCBuQAGAwoK2gAVhL7Pcr/a9f7c033a146bb0d79ce1ff7ca1695fb/___________2023-08-10______2.18.00.png?w=768&h=501&q=50&fm=png 768w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":505},"__typename":"ContentfulAsset"},{"contentful_id":"3UPDVmGgAKwtKh7kNZtQwC","title":"클래스 다이어그램","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=194&h=140&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=387&h=279&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=774&h=558&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=774&h=558&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=194&h=140&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=387&h=279&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3UPDVmGgAKwtKh7kNZtQwC/2ea9811f5bf2bc5e357ae6f3757afb33/___________2023-08-10______4.09.11.png?w=774&h=558&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":558},"__typename":"ContentfulAsset"}]}},{"title":"개발/테스트용 GCP 무료 서버 생성하기","category":["Cloud"],"slug":"gcp-free-compute-engine-guide","date":"2024-07-30","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=125&h=77&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=250&h=155&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&q=50&fm=webp 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=1000&h=618&q=50&fm=webp 1000w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=125&h=77&fl=progressive&q=50&fm=jpg 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=250&h=155&fl=progressive&q=50&fm=jpg 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=500&h=309&fl=progressive&q=50&fm=jpg 500w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ggEpKCPWfXD6jNDfyn8l3/77896d8fb21538261c86a396a860967e/gcp.jpg?w=1000&h=618&fl=progressive&q=50&fm=jpg 1000w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":309}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"개발/테스트할 프로젝트를 원격 서버에 배포하고자 한다. AWS 프리티어, GCP 무료 크레딧 방법도 있다. 하지만 앞선 방법은 다 이용했다. 물론 다 이용 했어도 새로운 구글 아이디를 만들어 이용해도 된다. 그러나 이번 프로젝트는 기간을 짧고 굵게 서버를 사용할 계획이다. 무료 서버를 생성하는 새로운 방법도 시도해보고 싶었다. 이런 이유로 GCP에서 기본으로 제공하는 무료 서버를 만들기로 했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"무료 서버 생성 조건\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"GCP에는 다양한 상품을 무료로 사용할 수 있다. 단, 조건과 한도를 넘지 않는 선에서 무료다. 다양한 상품 중에 Compute Engine을 선택했다. 매번 무료 사용 조건은 달라지니 직접 아래 링크를 통해서 확인하길 추천한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://cloud.google.com/free/docs/free-cloud-features?hl=ko#compute\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"https://cloud.google.com/free/docs/free-cloud-features?hl=ko#compute\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"2ETFIqttUDl2MTi5euNPJP\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"그림과 같이 무료 서버를 생성하기 위해서 인스턴스 유형, 리전, 디스크 용량 3가지 조건이 주요 조건이다. 해당 조건을 따라서 만들면 무료로 이용할 수 있다. 정리해보면 아래와 같다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"인스턴스 유형\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\": e2-micro VM 인스턴스 1개\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"리전\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\": 오리건 (us-west1), 아이오와 (us-central1), 사우스캐롤라이나 (us-east1) 중 택 1\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"디스크\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\": 표준 영구 디스크, 30GB/월\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"무료 서버 생성하기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"vm 인스턴스 만들기\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"1Wv8CvVZOow0OgO1NXU8Ll\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"먼저 우측 상단의 구글 콘솔창을 클릭하면 위 같은 화면이 펼쳐진다. GCP 프로젝트가 없으면 생성한 뒤 VM 만들기를 클릭하면 된다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"리전 선택\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"6ZUewAEu9Gqyr3PD51yrBz\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"리전은 앞선 무료 조건을 만족하는 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"오리건 (us-west1)\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\", \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"아이오와 (us-central1)\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\", \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"사우스캐롤라이나 (us-east1)\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" 중 하나를 택하면 된다. 영역은 아무 영역이나 해도 상관없다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"리전은 데이터 센터가 위치한 실제 지리적 구역이다. 영역은 리전 내에 있는 개별 데이터 센터다. 서비스 지역과 물리적으로 멀기에 지연 시간이 생길 수 있다. 나중에 실제로 운영할 생각도 있다면 아시아 리전도 고려해보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"머신 구성 선택\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"5K5JvMR40UX5ViRA2YKcwE\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"머신 유형 설정에서 공유 유형 안에 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"e2-micro\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"를 선택한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"디스크 유형 및 용량 선택\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"137kDf0Z8etX5tdTrVSJhF\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"사용하고 싶은 운영체제를 선택한다. 나는 이번에 우분투를 사용하기로 했다. 여기서 부팅 디스크 유형와 크기는 앞선 무료 조건인 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"표준 영구 디스크\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"와 \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"30GB\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"로 설정하고 선택을 누른다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"방화벽 설정\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"4tfXdgy50A603E0C1OuhM0\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"HTTP와 HTTPS 트래픽 허용을 체크한다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"월별 예상 가격\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"1sQfy0gyuYtbndor0W3lMm\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"여러 조건을 변경할 때마다 우측의 월별 예상 가격이 변한다. 분명 조건을 다 만족했는데 왜 가격이 측정됐지?라는 의문이 든다. 앞선 무료 조건을 잘 살펴보자. 당월 할당된 총 시간을 모두 소진할 때까지 무료라고 명시 되어있다. 그래서 월별 예상 가격이 측정된 것이다. 한도 이상만 사용하지 않으면 무료이기 때문에 이대로 VM 인스턴스를 생성해 주자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"무료 서버 개설 완료\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"63mEvx2xoPWSW9SiugxZxC\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"인스턴스가 잘 생성된 것을 확인할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"과금 알람 설정\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"혹시나 나도 모르는새 한도가 넘어서 과금이 되면 어쩌지라는 불안감이 있을 수 있다. 그럴땐 예산을 설정해서 이메일로 알림을 받아보자.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"71uoIeZllJOjwRHWZoRsZC\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"위 화면처럼 결제 화면으로 넘어가 예산을 생성한다. 범위 파트에서는 예산 이름, 기간, 예산을 측정할 범위를 작성해야 한다. 나는 현재 프로젝트가 하나이기 때문에 모든 프로젝트가 하나 잡혔다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"7gGvLoCxLkJRVw2bzHZJAw\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"다음을 눌리기되면 전체 예산 금액을 설정할 수 있다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{\"target\":{\"sys\":{\"id\":\"5ThZegEx2VJjmrvCPCC52o\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[],\"nodeType\":\"embedded-asset-block\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"마지막으로 예산 비율마다 알림을 받을 수 있게 설정할 수 있다. 나는 여러 알림이 오는게 싫어서 내 예산 100%인 100원이 되면 이메일로 알람이 오도록 설정했다.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[{"contentful_id":"2ETFIqttUDl2MTi5euNPJP","title":"GCP 무료 서버 생성 조건","description":"내 지갑을 위해 꼼꼼히 보자","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=194&h=134&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=387&h=267&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=774&h=534&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=1548&h=1068&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=774&h=534&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=194&h=134&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=387&h=267&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=774&h=534&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2ETFIqttUDl2MTi5euNPJP/2e2730930acb44f37dab445b98cb7e16/___________2024-07-29.png?w=1548&h=1068&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":534},"__typename":"ContentfulAsset"},{"contentful_id":"1Wv8CvVZOow0OgO1NXU8Ll","title":"gcp 대시보드","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=194&h=116&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=387&h=231&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=774&h=461&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=1548&h=922&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=774&h=461&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=194&h=116&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=387&h=231&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=774&h=461&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1Wv8CvVZOow0OgO1NXU8Ll/d7bf0dbfe78507e5f766a4dea048f770/___________2024-07-30______2.54.44.png?w=1548&h=922&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":461},"__typename":"ContentfulAsset"},{"contentful_id":"6ZUewAEu9Gqyr3PD51yrBz","title":"gcp 리전 영역 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=194&h=49&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=387&h=98&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=774&h=196&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=1548&h=392&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=774&h=196&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=194&h=49&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=387&h=98&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=774&h=196&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/6ZUewAEu9Gqyr3PD51yrBz/cb718bd44737ed0c5c66de92f3d1442e/___________2024-07-30______3.01.50.png?w=1548&h=392&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":196},"__typename":"ContentfulAsset"},{"contentful_id":"5K5JvMR40UX5ViRA2YKcwE","title":"머신 구성 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=194&h=165&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=387&h=329&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=774&h=658&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=1548&h=1316&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=774&h=658&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=194&h=165&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=387&h=329&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=774&h=658&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5K5JvMR40UX5ViRA2YKcwE/60e190e50f75a3b7d75d0545444a55a1/___________2024-07-30______3.02.52.png?w=1548&h=1316&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":658},"__typename":"ContentfulAsset"},{"contentful_id":"137kDf0Z8etX5tdTrVSJhF","title":"디스크 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=194&h=230&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=387&h=458&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=774&h=916&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=774&h=916&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=194&h=230&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=387&h=458&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/137kDf0Z8etX5tdTrVSJhF/5b28d441eba3986795d28fe89861fb3e/___________2024-07-30______3.06.37.png?w=774&h=916&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":916},"__typename":"ContentfulAsset"},{"contentful_id":"4tfXdgy50A603E0C1OuhM0","title":"방화벽 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=125&h=45&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=250&h=89&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=500&h=178&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=500&h=178&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=125&h=45&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=250&h=89&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4tfXdgy50A603E0C1OuhM0/e772f1393cfa1bf37a0c5a8d5407b1e6/___________2024-07-30______3.03.49.png?w=500&h=178&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":276},"__typename":"ContentfulAsset"},{"contentful_id":"1sQfy0gyuYtbndor0W3lMm","title":"월별 예상 가격","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=125&h=80&q=50&fm=webp 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=250&h=160&q=50&fm=webp 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=500&h=319&q=50&fm=webp 500w","sizes":"(min-width: 500px) 500px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=500&h=319&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=125&h=80&q=50&fm=png 125w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=250&h=160&q=50&fm=png 250w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1sQfy0gyuYtbndor0W3lMm/24aa60ee31c254e937507e6b67fc442c/___________2024-07-30______3.20.19.png?w=500&h=319&q=50&fm=png 500w","sizes":"(min-width: 500px) 500px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":494},"__typename":"ContentfulAsset"},{"contentful_id":"63mEvx2xoPWSW9SiugxZxC","title":"gcp instance","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=194&h=28&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=387&h=56&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=774&h=113&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=1548&h=226&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=774&h=113&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=194&h=28&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=387&h=56&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=774&h=113&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/63mEvx2xoPWSW9SiugxZxC/ccdd9e511df3967e7b83984201fadaf7/___________2024-07-30______3.23.30.png?w=1548&h=226&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":112.99999999999999},"__typename":"ContentfulAsset"},{"contentful_id":"71uoIeZllJOjwRHWZoRsZC","title":"예산 만들기","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=194&h=117&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=387&h=234&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=774&h=467&q=50&fm=webp 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=1548&h=934&q=50&fm=webp 1548w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=774&h=467&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=194&h=117&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=387&h=234&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=774&h=467&q=50&fm=png 774w,\nhttps://images.ctfassets.net/w6wmczdusxy8/71uoIeZllJOjwRHWZoRsZC/3d16f88e52ae7e3d96492f0112467376/___________2024-07-30______3.30.06.png?w=1548&h=934&q=50&fm=png 1548w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":467},"__typename":"ContentfulAsset"},{"contentful_id":"7gGvLoCxLkJRVw2bzHZJAw","title":"예산 금액 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=150&h=71&q=50&fm=webp 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=300&h=142&q=50&fm=webp 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=600&h=284&q=50&fm=webp 600w","sizes":"(min-width: 600px) 600px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=600&h=284&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=150&h=71&q=50&fm=png 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=300&h=142&q=50&fm=png 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7gGvLoCxLkJRVw2bzHZJAw/26288a45a3d19c286976063623a1f912/___________2024-07-30______3.30.29.png?w=600&h=284&q=50&fm=png 600w","sizes":"(min-width: 600px) 600px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":366},"__typename":"ContentfulAsset"},{"contentful_id":"5ThZegEx2VJjmrvCPCC52o","title":"예산 설정","description":"","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=150&h=116&q=50&fm=webp 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=300&h=233&q=50&fm=webp 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=600&h=466&q=50&fm=webp 600w","sizes":"(min-width: 600px) 600px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=600&h=466&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=150&h=116&q=50&fm=png 150w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=300&h=233&q=50&fm=png 300w,\nhttps://images.ctfassets.net/w6wmczdusxy8/5ThZegEx2VJjmrvCPCC52o/363c6e821208efdbfbf1653c07e33463/___________2024-07-30______3.43.47.png?w=600&h=466&q=50&fm=png 600w","sizes":"(min-width: 600px) 600px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":601},"__typename":"ContentfulAsset"}]}},{"title":"소프트웨어 장인을 읽고","category":["Book"],"slug":"book-reivew-software-master","date":"2023-03-21","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=101&h=150&q=50&fm=webp 101w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=203&h=301&q=50&fm=webp 203w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=405&h=600&q=50&fm=webp 405w","sizes":"(min-width: 405px) 405px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=405&h=600&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=101&h=150&q=50&fm=png 101w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=203&h=301&q=50&fm=png 203w,\nhttps://images.ctfassets.net/w6wmczdusxy8/2qx6FeCLUJo2A8KUF8xRlU/43661a6be6245ef292ba054dee204392/swjang.png?w=405&h=600&q=50&fm=png 405w","sizes":"(min-width: 405px) 405px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":741}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"아직 개발자로서 커리어를 시작하지 않았지만 어떤 개발자여야 할지는 계속 생각해 봤다. 한정된 시간 안에서 더 많은 양의 기능을 구현할 수 있는 개발자? 아니면 보다 효율적인 시스템을 구축해 업무의 효율을 높이는 개발자가 되어야 맞는 걸까? 이 책은 이러한 고민을 이미 해본 저자가 자신의 경험을 바탕으로 좋은 개발자란 즉, 소프트웨어 장인이란 무엇인가를 잘 풀어서 얘기해준다. 이 책 역시도 지금 나에게 와 닿았던 내용들을 위주로 적어볼까 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"좋은 시스템의 이전에 기술적인 역량은 기본이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"4UD1lbMeRnXvPojzBqAvj\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"많은 개발 방법론이 있지만 현시대는 역시 애자일의 중요성이 강조된다. 또한 이런 애자일을 실행하는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://en.wikipedia.org/wiki/Extreme_programming\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"XP(익스트림 프로그래밍)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://en.wikipedia.org/wiki/Lean_manufacturing\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Lean(린 프로세스)\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\"등이 있다. 저자 또한 이러한 프로세스들을 왜 써야 하는지에 대한 얘기들을 해준다. 나 역시도 여러 자료들이나 블로그 글들을 보면서 별반 다를 것 없다고 느꼈다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 애자일 도입을 실패한 사례들도 말해주며 좋은 시스템 이전에 개발자가 가져야 하는 근본적인 기술적 역량을 강조해 줬다. 제아무리 좋은 도구와 재료라도 요리사가 실력이 없으면 음식의 맛이 많이 좌우되기 때문이다. 아직 기술적 역량이 부족한 나에게 와닿는 내용이었으며 이후 어떻게 기술적 역량을 쌓아나갈 것인지 고민하게 해줬다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"끊임없는 자기 계발\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"누군가 그랬다. 개발자는 평생 공부해야 한다고 말이다. 하지만 어떻게 공부해야 한다고 말해주는 사람은 별로 없었다. (내가 느끼기엔) 이런 현상은 역시 각자마다 공부하고 자기 계발하는 방식이 달라서 쉽사리 조언을 못 해주는 것일 거다. 저자 또한 조심스럽게 자기 계발을 위해 할 수 있는 것을 몇 가지 추려줬는데 공감이 됐다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"독서, 많은 독서\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"요즘 개발에 관련된 책들을 읽고 있어서 많이 공감됐다. 독서란 좋은 개발자의 생각을 엿볼 기회라고 생각이 든다. 또한 보다 정확한 정보를 얻을 수 있는 곳이기도 하다. 특히 개인적으로 특정 기술을 배울 때 책을 통해 배우면 순서대로 차근차근 배울 수 있어 더 정리가 잘되기도 한다. 여기서 저자는 책의 목적에 따라 4가지로 분류했는데 추후 읽어보고 싶어 따로 정리했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"특정 기술에 대한 서적 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Java, Node.js 등등\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"특정 개념에 대한 서적 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"TDD\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"도메인 기반 개발\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체 지향 설계\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"함수형 프로그래밍\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"NoSQL\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"데이터베이스 모델\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"행동양식에 대한 서적 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"애자일 방법론\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"소프트웨어 장인 정신\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"린 소프트웨어 개발\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"심리학, 철학, 경영 등등\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"혁명적 서적(또는 고전) \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"실용주의 프로그래머\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"디자인 패턴(GoF)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"테스트 주도 개발(켄트백)\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"익스트림 프로그래밍\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클린코더\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"리팩토링\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"단기적, 중기적으로는 특정 기술에 대한 책을 읽으면 좋고 커리어를 위해서라면 개념이나 행동양식 특히 혁명적 서적들을 추천해 줬다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"블로그\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"블로그는 자기 계발의 아주 좋은 수단이다. 저자 또한 블로그를 추천했다. 블로그는 실제 경험, 개인적인 발견, 의견, 성공담, 실패담들이 짧게 담겨있어 소프트웨어 장인정신이나 애자일 모델에 태생적으로 궁합이 잘 맞기 때문이다. 하지만 늘 블로그를 시작할 때부터 어떤 글을 올려야 할지 혹시나 글을 올리기엔 아직 역량이 부족하진 않은지에 대한 고민을 했었다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그러다 결국 내린 결론은 나 자신을 위한 기록을 우선으로 여기기로 했다. 이런 생각을, 책을 통해 더 공고히 다져나갈 수 있었다. 오늘날 좋은 글을 쓰는 사람들도 결국 이러한 노력과 습관들이 모여서 된 것으로 생각한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"다양한 소통\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"여러 커뮤니티나 대외적인 활동, 스터디등을 참여하고 다양한 사람들과 소통해야 한다. 제 아무리 혼자서 공부하고 뿌듯함을 얻어도 우물 안의 개구리가 되기 십상이다. 소통하면서 내가 부족한 부분들을 깨우쳐가고 최신 정보 동향도 알아가는 게 좋은 개발자의 밑거름이라 생각하게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"또한 팔로우할 리더를 찾아야 한다. 특정 기술 분야에 대한 리더뿐만 아니라 개념적, 행동양식적인 부분에 대한 리더들도 존재한다. 이러한 리더들이 누구인지 알면 유익한 정보나 관련 서적을 찾기가 수월해지기 때문이다. 당장 이 책을 읽음으로서 좋은 개발자가 무엇인지에 대한 생각을 할 수 있었고 읽고 싶은 서적들도 훨씬 넓어졌다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"끊임없는 훈련\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"끊임없는 훈련을 통해 실행 관례와 새로운 기술들을 배워야 한다. 이때 훈련의 기준은 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"어떻게\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 해결할지가 중요하다. 소프트웨어 개발은 결과가 매우 중요하다. 하지만 훈련에서만큼은 결과보다 과정을 어떻게 해결할 것인지, 어떤 방식으로 해결할 것인지 집중해야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어떤 기술이든 더 많이 훈련할수록 더 편안해지고 자연스럽게 할 수 있게 된다. 그렇담 훈련하기 위해서 어떤 방법들이 있을까? 저자는 4가지를 추천해 줬는데 페어 프로그래밍은 현실적으로 아직 힘들어 빼고 정리 해봤다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"카타\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"‘품세’라는 뜻으로 일본 무예 훈련에서 나온 용어다. 여기서는 작은 훈련용 코딩을 의미한다. 예를 들어 볼링 점수 계산 문제 같은 것이다. (생각해 보니 우테코 프리코스에서 나온 문제들도 다 카타에 해당되는 것 같다.) 카타의 목적은 익숙하지 못한 새로운 테크닉이나 기술을 능숙도를 올리기 위함이다. 같은 코딩 카타를 반복하더라도 매번 다른 테크닉, 다른 언어, 다른 기술로 해야 효과를 최대화할 수 있다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"펫 프로젝트(토이 프로젝트)\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"최고의 자가 학습, 자가 훈련 방법이다. 먼저 무엇을 배울지, 즉 어떤 실행 관례, 실행 원칙, 방법론, 기술을 배울지 정하고 그다음에 해결할 문제를 찾는다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"오픈 소스\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"배우고 싶은 내용과 연관 있는 오픈소스를 찾아 실행 해보고, 테스트 코드가 있다면 읽어본다. 디버깅 해보고 이용해 본다. 기여할 부분이 보인다면 아주 작은 부분부터 기여해보면서 시작하면 좋다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"오픈소스의 좋은 점은 훌륭한 개발자들이 어떻게 일하는지 체험해 볼 수 있다는 것이다. 최근 java API 내부 소스 코드를 보면서 좋은 코드를 볼 수 있어 한층 성장하는 기분이 들어서 더 공감이 간다.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시간은 없지 않다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1RDYaB0LNOcGVue3X1lKu5\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하루에 의미 없는 웹서핑을 하고 휴대폰, 유튜브 하는 시간이 얼마나 된다고 생각하나? 정말 그런 시간이 별로 없다면 시간이 없다고 말할 수 있겠지만 보통은 그러지 않을 것이다. 나 또한 이런 시간들이 모이고 모여 크다는 사실을 깨닫고 줄이려 노력 중이다! 그렇다고 없앨 수는 없겠지만 (나름의 휴식 차원에 필요하다) 이런 시간을 다 보내고도 시간이 없다고는 말하지 말자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"또한 테스트 코드 작성 시간이 오래 걸린다고 생각한다고 해서 시간이 없으니, 프로젝트를 진행할 때 그냥 동작하는 프로그램이라도 만들자는 틀렸다. 테스트 코드를 작성하지 않으면 결국 에러가 나면 하나하나 디버깅을 해야 한다. 또한 개발이 진행될수록 전체적인 테스트를 진행하는 시간은 계속 늘어갈 것이 뻔하다. 과연 디버깅과 테스트할 시간은 있고 테스트 코드를 작성할 시간은 없는 것일까? 시간은 없지 않다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어떤 커리어가 좋은 커리어인가\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"커리어에 정답이 있을까? 저자는 없다고 대답했다. 커리어를 몇 년짜리 프로젝트라 여기고 앞으로 어떻게 관리할지 생각해 보자. 중간에 많은 것이 바뀔 수도 있지만 가장 큰 틀은 바뀌지 않을 것이다. 이를 작은 단위로 나누고 단계 마다 프로젝트의 목표를 재평가하고 필요한 경우 수정할 수 있다고 생각해야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"때로는 개인적인 삶에 의해서 커리어를 결정할 수도 있다. 돈이 더 필요하다면 임금을 높이 주는 곳을 선택하는 것이다. 커리어에서 옳고 그른 것은 없다. 단지 지식은 영원하고 돈과 안정은 영원할 수 없다는 것만 새기고 있자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"회사를 선택하는 기준: 자율성, 통달, 목적의식\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어떤 기준을 가지고 회사를 선택을 선택해야 할까? 이 내용에 대해 저자가 명확하게 정리해 줘 그대로 가져와 봤다. 내용은 다음과 같다. 다니엘 핑크의 저서 “원동력: 동기부여에 대한 놀라운 진실”에서 돈은 충족되어야 하는 기본 조건이고, 지식 노동자를 움직이는 것은 자율성, 통달, 목적의식 이렇게 세 가지라고 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자율성: 우리가 무엇을, 어떻게, 언제 할지 통제할 수 있는 상태\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"통달: 더 나은 인간이 되기 위해 계속 배우고 진화하는 것\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"목적의식: 지금 하는 일이 중요하고 무언가를 더 나아지게 하고 있다고 느끼는 것\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이런 조건들은 돈만을 좇아 일할 곳을 선택하면 커리어가 중단되기 쉬워질 수도 있다는 것을 알려준다. 지금으로서 나는 통달을 포기할 수는 없을 것 같다. 하지만 이 세 가지를 기억하고 앞으로의 일할 곳을 고려해 봐야겠다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마무리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"글에 미처 정리하지 못했지만 중간중간 와 닿는 글귀들이 많았다. 예를 들어 동작하는 소프트웨어를 빨리 만드는 것과 허술하게 만드는 것은 다르다고 한 부분이 있다. 모든 일이 그렇겠지만 빨리한다는 것은 허술하게 빨리하라는 말이 아니다. \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"제대로\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 빨리 하는 것이다. 개발자는 어느 경우에서라도 깨끗한 코드를 작성할 의무를 지녀야 한다는 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"책을 읽고 나서 어떤 개발자로서 성장해야 하는지 알 수 있었다. 또한 지금까지 내가 생각하고 또 하고 있던 일들을 되돌아보면서 회고할 시간도 가질 수 있었다. 훗날 개발자로서의 마음가짐을 가지고 성장한 뒤 몇 년이 지난날에 다시 읽어보면 또 얻어가는 게 많을 것 같은 책이다. 그때가 되면 다시 한번 읽어보고 지금 2023년의 나와 비교해 보면 재밌을 듯하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 문헌\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"산드로 만쿠소, \\\"소프트웨어 장인 : 프로페셔널리즘/ 실용주의/ 자부심\\\", 권오인(역), 길벗, 2015\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"4UD1lbMeRnXvPojzBqAvj","title":"기본","description":"XP든 린이든 개발자는 개발을 잘해야하는게 기본이다","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=160&h=90&q=50&fm=webp 160w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=320&h=180&q=50&fm=webp 320w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=640&h=360&q=50&fm=webp 640w","sizes":"(min-width: 640px) 640px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=640&h=360&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=160&h=90&fl=progressive&q=50&fm=jpg 160w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=320&h=180&fl=progressive&q=50&fm=jpg 320w,\nhttps://images.ctfassets.net/w6wmczdusxy8/4UD1lbMeRnXvPojzBqAvj/5d8b12c0bf3233e79b4c0b380f5c9251/_____.jpg?w=640&h=360&fl=progressive&q=50&fm=jpg 640w","sizes":"(min-width: 640px) 640px, 100vw"}},"layout":"constrained","backgroundColor":"#f8e8d8","width":774,"height":435},"__typename":"ContentfulAsset"},{"contentful_id":"1RDYaB0LNOcGVue3X1lKu5","title":"슬램덩크_헛된시간","description":"오늘 하루를 되돌아보자 정말 헛되지 않았을까?","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=138&h=84&q=50&fm=webp 138w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=275&h=167&q=50&fm=webp 275w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=550&h=334&q=50&fm=webp 550w","sizes":"(min-width: 550px) 550px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=550&h=334&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=138&h=84&fl=progressive&q=50&fm=jpg 138w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=275&h=167&fl=progressive&q=50&fm=jpg 275w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1RDYaB0LNOcGVue3X1lKu5/829224b832f68ef1ac1e2696523a7cd9/____________.jpeg?w=550&h=334&fl=progressive&q=50&fm=jpg 550w","sizes":"(min-width: 550px) 550px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":470},"__typename":"ContentfulAsset"}]}},{"title":"객체지향의 사실과 오해를 읽고","category":["Book"],"slug":"book-review-object-oriented-facts-and-misconceptions","date":"2023-02-02","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=73&h=100&q=50&fm=webp 73w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=146&h=200&q=50&fm=webp 146w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=292&h=400&q=50&fm=webp 292w","sizes":"(min-width: 292px) 292px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=292&h=400&fl=progressive&q=50&fm=jpg","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=73&h=100&fl=progressive&q=50&fm=jpg 73w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=146&h=200&fl=progressive&q=50&fm=jpg 146w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3BCEvTwt5ZGg0KKjdtug6P/77e4a5e7dcde9a0433a82672a876601c/__________.jpg?w=292&h=400&fl=progressive&q=50&fm=jpg 292w","sizes":"(min-width: 292px) 292px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":500,"height":685}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"주변의 추천으로 개발에 관련된 책을 처음 읽었다. 워낙 유명한 책이기도 했고 객체지향의 사실과 오해라는 제목 자체가 어떤 의민지도 궁금해 읽어보자 결심했다. 책 자체는 생각보다 두껍지 않은 약 250페이지(부록 포함)이지만 한 장 한 장 넘길 때마다 혼자 생각을 정리하거나 다시 읽는 부분이 많아 완독하는 데 오래 걸렸다. 이 책 역시 내가 제일 와닿았고 느낀 점을 적으려 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그래서 객체지향을 제대로 알고 있었나??\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"먼저 책을 읽기 전에 이런 생각을 했다. 나는 객체지향은 무엇을 뜻하는지 제대로 알고 있나? 당시는 정확하고 자세하게는 아니지만 알고 있다고 생각했다. 클래스로 객체를 생성해 객체들끼리 혹은 클래스끼리 서로 정보를 주고받는 것이 객체지향이다 라고 말이다. 현실 세계의 객체들을 그대로 소프트웨어 세계로 들고 와 사용하고 있는 속성, 행위를 인스턴스 변수 및 메서드로 투영시켜 서비스를 만들었다. 하지만 이는 객체지향의 오해였다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"첫 번째 오해: 현실 세계의 객체와 소프트웨어 세계의 객체는 다르다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"제일 잘못 이해하고 있던 것은 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"소프트웨어 세계의 객체는 현실 세계의 객체를 그대로 들고 온 것\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라는 점이다. 여태 프로젝트나 공부를 할 때 현실 세계에 있는 객체들의 개념을 그대로 들고 와 클래스를 만들고 구현을 해왔다. 또한 여러 객체지향에 관해 설명해 주는 책들을 보아도 클래스와 객체를 현실에 비유해 이해 시켜줘 더욱 현실 세계의 객체는 소프트웨어 세계의 객체라고 오해했다. 이렇게 생각하면서 어느 다른 객체에 심하게 의존하는 객체가 나타나기도 했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이런 오해를 바로잡을 사실은 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"객체는 살아있다\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"는 것이다. 현실 세계에서는 혼자 스스로 무언가를 결정하지 못하는 객체들이 있다. 가령 물병은 스스로 물을 채우고 비울 수 없다. 하지만 소프트웨어 세계는 모든 객체가 살아서 스스로 자기 일을 할 수 있다. 물병이란 객체는 누군가에게 메시지를 받으면 스스로 물병의 물을 채우거나 비울 수 있어야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"두 번째 오해: 클래스는 객체지향의 핵심이 아니다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클래스로 객체를 만든다. 흔히 말하는 인스턴스화로 인해 클래스를 객체지향의 그 자체라 생각했다. 클래스를 잘 작성해야 객체지향적으로 잘 작성하고 있\\u001d다고 말이다. 물론 틀린 말은 아니지만 집중해야 할 부분은 클래스 자체가 아닌 객체 간의 협력, 메시지이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"클래스는 객체를 추상화하기 위한 도구 중 하나일 뿐이다. 사람들, 개발자들은 시시각각 동적으로 바뀌는 객체에 대해서 인식하기엔 인지적 한계가 있다. 사람 A가 있다고 하자. 키가 작았던 어린 시절이나 키가 큰 현재, 그리고 살이 쪄서 통통 해질 수도 있다. 이렇게 달라지지만, A라는 사람이라는 사실은 바뀌지 않는다. 다양한 객체의 타입을 정적으로 규정하고 추상화해 주는 도구가 클래스다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체 지향에서 중요한 것은 정적인 클래스가 아니라 협력에 참여하는 객체이다. 예를 들어 ‘바리스타’의 인스턴스를 모델링한다고 하면 데이터나 클래스를 기반으로 설계하면 앞치마를 쓰고 단정하고 친절한 바리스타의 모습을 떠올리며 구현할 것이다. 하지만 이는 중요한 부분이 아니다. 바리스타는 ‘바리스타’라는 역할로 커피 주문을 받고 커피를 만드는 책임을 수행해야 하기 때문이다. 협력에 대한 자세한 내용은 아래에서 정리하고 여기서 바로 잡을 오해는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"클래스는 객체지향의 핵심이 아니다\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". 또한 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"객체를 독립적인 섬으로 보지 말고 협력하는 살아있는 객체로 보자는 것\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체 지향적으로 생각해 보기\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"가장 많이 한 오해, 실은 내가 정말 많이 느꼈던 객체지향의 오해들을 정리해 봤다. 그렇다면 올바른 객체지향은 어떻게 생각하고 설계해야 하는지에 대한 의문이 생겼다. 대표적인 설계 기법으로는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"책임-주도 설계\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"디자인 패턴\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"테스트-주도 개발\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이 있지만 좀 더 근본적인 생각을 정리하고 싶어서 따로 정리했다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체 간의 협력, 메시지에 집중하자\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이미 위에서 살짝 언급하면서 정리를 했지만, 더 자세히 협력에 대해서 정리하고 싶었다. 객체지향은 살아있는 객체들의 협력을 통해 완성된다. 모든 객체는 스스로 자기 일을 할 수 있고 필요한 것이 있다면 알맞은 객체를 찾아 메시지를 보내 협력하게 된다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"따라서 적절한 메시지를 보내야 적절한 책임과 역할이 부여된다. 그렇다면 적절한 메시지라는 것은 무엇을 뜻할까? 메시지를 보내는 객체가 송신자, 받는 객체가 수신자라고 한다면 수신자에게 자유롭게 의사결정을 할 수 있는 메시지를 의미한다. 객체는 스스로 결정하는 살아있는 객체이기 때문이다. 예를 들어 손님이 바리스타에게 아래와 같이 주문했다 치자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1MSRuL9lUtDmb92bxZ3pL8\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"그렇다면 바리스타는 어떤 원두를 쓸지, 어떤 방식으로 커피를 내릴지가 제한받게 되므로 자유로운 행동을 할 수 없고 손님이란 객체에 의존이 될 수밖에 없다. 여기서 적절한 메시지는 “아메리카노 한 잔 주세요” 같은 추상적인 메시지이다. 그렇다면 바리스타는 자신만의 방식으로 스스로 만들어 결과만 손님에게 넘길 수 있고 의존성은 약해진다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"도메인 모델링과 유스케이스, 그리고 책임-주도 설계\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"41hnWVew42aDtkkm2eHeHt\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"객체 간의 메시지, 협력에 집중하며 객체 지향적으로 코딩하면 된다는 것을 깨달았다. 하지만 협력을 어떤 방식으로 안정적이고 유연하게 설계해야 하는지는 막연했다. 객체지향을 위해서는 안정된 구조를 기반으로 필요한 기능들을 구현해 하는데 이때 구조는 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"도메인 모델링\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", 기능은 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"유스케이스\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" 를 바탕으로 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"책임-주도 설계\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"를 하면 보다 명확하게 설계할 수 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"도메인 모델링\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"안정적인 구조를 짜고 싶다면 도메인 모델링만 한 것이 없다. 도메인이란 사용자가 프로그램을 사용하는 분야를 말한다. 모델링은 지식을 선택적으로 단순화하고 의식적으로 구조화하는 것을 의미한다. 따라서 도메인 모델링은 사용자가 프로그램을 사용하는 대상 영역에 관한 지식을 선택적으로 단순화하고 의식적으로 구조화하는 것이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"왜 도메인 모델링이 안정적인 구조일까? 이는 본질적인 개념이 잘 바뀌지 않기 때문이다. 예를 들어 은행 이자에 대해 생각해 보자. 일정 만료 기간이 되어야 이자를 지급해 주는 은행의 구조는 본질적인 개념이다. 은행이란 도메인이 변화하지 않는 이상 이런 구조는 바뀌지 않을 것이다. 설령 바뀐다 해도 은행을 기반으로 구조를 유연하게 바꿀 수 있어 안정적이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"유스 케이스\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자의 목표를 달성하기 위해 사용자와 시스템 간에 이뤄지는 상호작용의 흐름을 텍스트로 정리한 것을 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"유스케이스\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"라고 한다. 결국 개발자가 직접적으로 구현해야 하는 것은 기능적인 부분들이다. 유스케이스는 사용자들의 목표를 중심으로 시스템의 기능적인 요구사항들을 이야기 형식으로 묶을 수 있다. 이는 각 기능이 유기적인 관계를 지닌 체계를 이룰 수 있게 한다. 또한, 요구사항을 기억하고 관리하는 데 도움을 준다. 다시 한번 은행 이자를 예시로 유스케이스를 작성한다면 아래와 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"유스케이스명: 중도 해지 이자액을 계산한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"일차 액터: 예금주\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"주요 성능 시나리오\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"예금주가 정기예금 계좌를 선택한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템은 정기예금 계좌 정보를 보여준다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"예금주가 금일 기준으로 예금을 해지할 경우 지급받을 수 있는 이자 계산을 요청한다.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템은 중도 해지 시 지급받을 수 있는 이자를 계산한 후 결과를 사용자에게 제공한다.\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"확장\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"사용자는 해지 일자를 다른 일자로 입력할 수 있다.\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"하지만 유스케이스만으로 객체 지향적인 코드를 작성하긴 힘들다. 사용자 요구사항이란 변동성이 너무 크기 때문에 불안정하기 때문이다. 따라서 안정적인 도메인 모델링을 기반으로 기능적인 부분을 구현하는 것이 좋다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"책임-주도 설계\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"도메인 모델은 안정적인 구조를 개념화하기 위해, 유스케이스는 불안정한 기능을 서술하기 위해 가장 일반적으로 사용되는 도구다. 변경에 유연한 소프트웨어를 만들기 위해서는 유스케이스에 정리된 시스템의 기능을 도메인 모델을 기반으로 한 객체들의 책임으로 분배해야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"시스템은 사용자와 메시지를 주고받는 커다란 객체라고 볼 수 있다. 이때 책임-주도 설계는 유스케이스로부터 첫 번째 메시지와 사용자가 달성하려는 목표를, 도메인 모델로부터 기능을 수용할 수 있는 안정적인 구조를 제공받아 객체들의 협력 공동체를 창조한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마무리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"책 제목 그대로 “객체지향의 사실과 오해”에 대해 깨달은 시간이었다. 항상 프로젝트를 만들 때 클래스 위주로 작성하며 객체 간의 요청과 응답에 대해 고민했었다. 정말 객체, 아니 클래스라는 틀에 갇혀 설계하고 작성해서 프로젝트를 진행하던 도중에도 막연했다. 객체지향의 사실과 오해는 이런 나를 한 단계 더 성장하게 해주고 두 번 세 번 생각을 할 수 있게 해준 책이다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고 문헌\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"조영호, \\\"객체지향의 사실과 오해\\\", 위키북스, 2015\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1MSRuL9lUtDmb92bxZ3pL8","title":"선천적얼간이","description":"가스파드 작가님의 선천적 얼간이 中","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=128&h=98&q=50&fm=webp 128w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=256&h=196&q=50&fm=webp 256w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=512&h=392&q=50&fm=webp 512w","sizes":"(min-width: 512px) 512px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=512&h=392&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=128&h=98&q=50&fm=png 128w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=256&h=196&q=50&fm=png 256w,\nhttps://images.ctfassets.net/w6wmczdusxy8/1MSRuL9lUtDmb92bxZ3pL8/19e4cf86c7bee2a6e4a084a02f2869c1/object1.png?w=512&h=392&q=50&fm=png 512w","sizes":"(min-width: 512px) 512px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":593},"__typename":"ContentfulAsset"},{"contentful_id":"41hnWVew42aDtkkm2eHeHt","title":"calculate interest diagram","description":"출처: 객체지향 사실과 오해 6장","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=194&h=77&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=387&h=154&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=774&h=307&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=774&h=307&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=194&h=77&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=387&h=154&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/41hnWVew42aDtkkm2eHeHt/75120549719066660c9a628b2aeaad7f/calculate_interest_diagram.png?w=774&h=307&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":307},"__typename":"ContentfulAsset"}]}},{"title":"1만 시간의 재발견을 읽고","category":["Book"],"slug":"book-review-peak","date":"2023-01-14","thumbnail":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=108&h=160&q=50&fm=webp 108w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=216&h=320&q=50&fm=webp 216w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=432&h=640&q=50&fm=webp 432w","sizes":"(min-width: 432px) 432px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=432&h=640&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=108&h=160&q=50&fm=png 108w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=216&h=320&q=50&fm=png 216w,\nhttps://images.ctfassets.net/w6wmczdusxy8/7jRByUBhDmzbsedlHgPurp/453dd0b902a6eabf4beb541904d0f4c2/peek1.png?w=432&h=640&q=50&fm=png 432w","sizes":"(min-width: 432px) 432px, 100vw"}},"layout":"constrained","backgroundColor":"#f8c818","width":500,"height":741}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"자기계발서 도서는 군대 때 이후로 오랜만에 접했다. 읽어보지는 못했지만, 너무 유명해서 다들 한 번쯤 들어봤을 듯한 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"1만 시간의 법칙\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"에 대한 재해석을 해준 책이다. 1만 시간의 법칙은 하루에 3시간씩 10년 동안 하면 누구든 최고가 될 수 있다는 이론이다. 그렇다면 정말 꾸준하게 3시간씩만 연습하게 된다면 모든 분야에서 우리는 최고가 될 수 있을까?? 그것은 아니다. 그 반론과 1만 시간의 재발견을 읽으면서 내게 많이 와닿았던 내용을 위주로 글을 작성해 볼까 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"어떻게 1만 시간을 연습할 것인가\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3vgdQ4IUi43Ccb5KQhEvqU\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이 책에서 핵심은 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"의식적인 연습\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"목적 있는 연습\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이었다. 아무 생각 없이 연습한다면 절대 일정 부분 이상을 넘길 수 없다는 것이다. 예를 들어 10년 동안 테니스를 쳐온 사람이 있다고 하자. 매일 동호회 사람들이랑 치고 배우고를 반복했다고 해도 1~2년 프로처럼 강도 높은 연습을 해온 사람보다 못 칠 것이 분명하다. 이처럼 목적을 가지고 어떻게 연습하고 있는지 인지하면서 연습해야 한다는 것이다. 이를 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"의식적인 연습\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"이라고 하며 다음과 같이 7가지 원칙이 있다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"의식적인 연습의 7가지 원칙\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"효과적인 훈련 기법이 수립된 기술 연마\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"개인의 컴포트 존을 벗어난 지점에서 진행, 자신의 현재 능력을 살짝 넘어가는 작업을 지속적으로 시도\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"명확하고 구체적인 목표를 가지고 진행\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"신중하고 계획적이다. 즉, 개인이 온전히 집중하고 '의식적'으로 행동할 것을 요구\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"피드백과 피드백에 따른 행동 변경을 수반\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"효과적인 심적 표상을 만들어내는 한편으로 심적 표상에 의존\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"기존에 습득한 기술의 특정 부분을 집중적으로 개선함으로써 발전시키고, 수정하는 과정을 수반\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내가 느낀 의식적인 연습하는 방법\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"큰 목표를 설계하고 세분화 또 세분화\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"큰 목표를 먼저 정하고 그 목표를 위한 목표들을 세분화해야 한다. 물론 다른 자기 계발 도서에서도 늘 언급되는 방법이지만 그만큼 성장을 위해서는 이만한 방법이 없다고 생각한다. 향후 10년 뒤 어떤 개발자가 될 것인지 아니 되고 싶은지를 생각해 보고 그를 위해서는 어떻게 성장해 나가야 할지 고민해보자.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"연습할 때 몰입하자\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"7가지 원칙에서 대부분을 차지하는 문장이라고 생각한다. 아무 생각없이 코드를 보고 공부하면 나중에 짤 수 있는 코드만 짤 수 있는 코더가 되어있지 않을까? 항상 몰입해서 코딩하고 공부하며 내가 확실히 이해하고 있는지 어디에 어떻게 적용할지를 고민하면서 공부를 해나가야 할 것 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"매번 동기부여를 받아야 한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"결국은 포기하지 않고 어떻게 연습을 이어갈 것 인가라는 문제에도 봉착하게 된다. 책에서 말한 동기부여는 크게 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"내적 동기부여\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"와 \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"외적 동기부여\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"로 나뉜다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내적 동기부여 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내가 그만두면 안되는 이유\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내가 계속해야 하는 이유\",\"marks\":[],\"data\":{}}]}]}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"외적 동기부여 \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"칭찬\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"피드백\",\"marks\":[],\"data\":{}}]}]}]}]}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"지속적인 피드백 및 연습 방향을 수정\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3Ch3KPby49851Xi6uy3jEy\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"피드백 및 수정은 훌륭한 선생이나 강사에 의존하는 것이 가장 좋다고는 했으나 그럴 수 없는 상황이라면 개인적으로라도 해야 한다고 생각했다. 매주 회고를 진행하며 이 주에 내가 무엇이 부족했고 어떤 방식으로 목표를 수행해 나가야 할지 수정하는 시간을 가져야 한다고 생각한다. 이를 더 세분화해 날마다 회고하고 나아가 큰 방향성인 한 해를 회고하는 것도 좋은 방향성 같다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-3\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"내가 무엇을 알고 있는지가 아닌 무엇을 할 수 있는지\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"동기부여 측면에서도 내가 무엇을 알고 있는지보다 무엇을 할 수 있는지가 더 좋다고 했다. 특히 개발이란 분야에서는 무엇을 알고 있는지보다 내가 무엇을 할 수 있는지가 더 중요하다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"마무리\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"이 책에서 의문점인 부분들도 다 말해준다. 재능이라는 측면은 어떻게 설명할 것인가? 이는 신체적인 한계가 없는 이상 재능이라는 것은 노력하는 재능이라는 것이다. 개발자는 이런 기조에 너무 잘 맞는 거 같다. 성장을 매 순간 의식적인 연습으로 이어온다면 충분히 좋은 개발자가 될 수 있다고 생각한다.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"참고\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"안데르스 에릭슨, 로버트 풀, \\\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"1만 시간의 재발견\\\", 강혜정(역), 비즈니스북, 2016 \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"3vgdQ4IUi43Ccb5KQhEvqU","title":"연습종류","description":"그냥 연습 vs 의식적인, 목적있는 연습","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=194&h=95&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=387&h=190&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=774&h=379&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=774&h=379&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=194&h=95&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=387&h=190&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3vgdQ4IUi43Ccb5KQhEvqU/2ad2ca3c36cd371e1fff191376a1a98f/___________2024-07-26______4.37.11.png?w=774&h=379&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":379},"__typename":"ContentfulAsset"},{"contentful_id":"3Ch3KPby49851Xi6uy3jEy","title":"의식적인 노력","description":"출처: https://coachround.com/deliberate-practice/","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=194&h=113&q=50&fm=webp 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=387&h=225&q=50&fm=webp 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=774&h=450&q=50&fm=webp 774w","sizes":"(min-width: 774px) 774px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=774&h=450&q=50&fm=png","srcSet":"https://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=194&h=113&q=50&fm=png 194w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=387&h=225&q=50&fm=png 387w,\nhttps://images.ctfassets.net/w6wmczdusxy8/3Ch3KPby49851Xi6uy3jEy/24ab0a7a12c51cd62dda5fa6cf9507a3/___________2024-07-26______4.38.46.png?w=774&h=450&q=50&fm=png 774w","sizes":"(min-width: 774px) 774px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":774,"height":450},"__typename":"ContentfulAsset"}]}}]}},"pageContext":{}},"staticQueryHashes":["506648845"],"slicesMap":{}}